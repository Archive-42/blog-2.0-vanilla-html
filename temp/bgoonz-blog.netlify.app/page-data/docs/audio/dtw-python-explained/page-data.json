{"componentChunkName":"component---src-templates-docs-js","path":"/docs/audio/dtw-python-explained/","result":{"data":{"sitePage":{"id":"SitePage /docs/audio/dtw-python-explained/"}},"pageContext":{"url":"/docs/audio/dtw-python-explained/","relativePath":"docs/audio/dtw-python-explained.md","relativeDir":"docs/audio","base":"dtw-python-explained.md","name":"dtw-python-explained","frontmatter":{"title":"Dynamic Time Warping Algorithm Explained (Python)","weight":0,"excerpt":"Dynamic Time Warping Algorithm Explained (Python)","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h1>Dynamic Time Warping Algorithm Explained (Python)</h1>\n<p>In this world which is getting dominated by Internet of Things (IoT), there is an increasing need to understand signals from devices installed in households, shopping malls, factories and offices. For example, any voice assistant detects, authenticates and interprets commands from humans even if it is slow or fast. Our voice tone tends to be different during different times of the day. In the early morning after we get up from bed, we interact with a slower, heavier and lazier tone compared to other times of the day. These devices treat the signals as time series and compare the peaks, troughs and slopes by taking into account the varying lags and phases in the signals to come up with a similarity score. One of the most common algorithms used to accomplish this is <em>Dynamic Time Warping (DTW)</em>. It is a very robust technique to compare two or more Time Series by ignoring any shifts and speed.</p>\n<p>As part of Walmart Real Estate team, I am working on understanding the energy consumption pattern of different assets like refrigeration units, dehumidifiers, lighting, etc. installed in the retail stores.This will help in improving quality of data collected from IoT sensors, detect and prevent faults in the systems and improve energy consumption forecasting and planning. This analysis involves time series of energy consumption during different times of a day i.e. different days of a week, weeks of a month and months of a year. Time series forecasting often gives bad predictions when there is sudden shift in phase of the energy consumption due to unknown factors. For example if the defrost schedule, items refresh routine for a refrigeration unit, or weather changes suddenly and are not captured to explain the phase shifts of energy consumption, it is important to detect these change points.</p>\n<p>In the example below, the items refresh routine of a store has shifted by 2 hours on Tuesday leading the shift in peak energy consumption of refrigeration units and this information was not available to us for many such stores.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*WEe7LQivzU4YOvDCe0_P_A.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*WEe7LQivzU4YOvDCe0_P_A.png\"></p>\n<p>The peak at 2 am got shifted to 4 am. DTW when run recursively for consecutive days can identify the cases for which phase shift occurred without much change in shape of signals.</p>\n<p><img src=\"https://miro.medium.com/max/52/1*jDuu7XE8XitCTBSythQICw.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*jDuu7XE8XitCTBSythQICw.png\"></p>\n<p>The training data can be restricted to Tuesday onwards to improve the prediction of energy consumption in future in this case as phase shift was detected on Tuesday. The setup improved the predictions substantially ( > 50%) for the stores for which the reason of shift was not known. This was not possible by traditional ways of one to one comparison of signals.</p>\n<p>In this blog, I will explain how DTW algorithm works and throw some light on the calculation of the similarity score between two time series and its implementation in python. Most of the contents in this blog have been sourced from this <a href=\"https://ieeexplore.ieee.org/document/1163055\">paper</a>, also mentioned in the references section below.</p>\n<p>2. Why do we need DTW ?</p>\n<p>Any two time series can be compared using euclidean distance or other similar distances on a one to one basis on time axis. The amplitude of first time series at time T will be compared with amplitude of second time series at time T. This will result into a very poor comparison and similarity score even if the two time series are very similar in shape but out of phase in time.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*HQleh0-1HlGsLkVlcaFRLw.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*HQleh0-1HlGsLkVlcaFRLw.png\"></p>\n<p>DTW compares amplitude of first signal at time T with amplitude of second signal at time T+1 and T-1 or T+2 and T-2. This makes sure it does not give low similarity score for signals with similar shape and different phase.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*6Yzt8SiQ-kTRx8pFqDZXkw.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*6Yzt8SiQ-kTRx8pFqDZXkw.png\"></p>\n<p>3. How it works?</p>\n<p>Let us take two time series signals P and Q</p>\n<p>Series 1 (P) : 1,4,5,10,9,3,2,6,8,4</p>\n<p>Series 2 (Q): 1,7,3,4,1,10,5,4,7,4</p>\n<p><img src=\"https://miro.medium.com/max/60/1*x8-vv9W3cfmdd0mW_1MLTg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*x8-vv9W3cfmdd0mW_1MLTg.png\"></p>\n<p><em>Step 1 :</em> Empty Cost Matrix Creation</p>\n<p>Create an empty cost matrix M with x and y labels as amplitudes of the two series to be compared.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*MrjHYFHyeeE3aiBEA-E5cw.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*MrjHYFHyeeE3aiBEA-E5cw.png\"></p>\n<p><em>Step 2: Cost Calculation</em></p>\n<p>Fill the cost matrix using the formula mentioned below starting from left and bottom corner.</p>\n<p>M(i, j) = |P(i) --- Q(j)| + min ( M(i-1,j-1), M(i, j-1), M(i-1,j) )</p>\n<p>where</p>\n<p>M is the matrix</p>\n<p>i is the iterator for series P</p>\n<p>j is the iterator for series Q</p>\n<p><img src=\"https://miro.medium.com/max/60/1*hhpagt7BEeFU22X83Q76yQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*hhpagt7BEeFU22X83Q76yQ.png\"></p>\n<p>Let us take few examples (11,3 and 8 ) to illustrate the calculation as highlighted in the below table.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*bHaMHM9eBfLc6q166iiI9g.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*bHaMHM9eBfLc6q166iiI9g.png\"></p>\n<p>for 11,</p>\n<p><img src=\"https://miro.medium.com/max/60/1*dzBbhICP6wqwtmW-GGwGmg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*dzBbhICP6wqwtmW-GGwGmg.png\"></p>\n<p>|10 --4| + min( 5, 12, 5 )</p>\n<p>= 6 + 5</p>\n<p>= 11</p>\n<p>Similarly for 3,</p>\n<p>|4 --1| + min( 0 )</p>\n<p>= 3+ 0</p>\n<p>= 3</p>\n<p>and for 8,</p>\n<p>|1 --3| + min( 6)</p>\n<p>= 2 + 6</p>\n<p>= 8</p>\n<p>The full table will look like this:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*7pphf0WWYElhtohnQPFPNA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*7pphf0WWYElhtohnQPFPNA.png\"></p>\n<p><em>Step 3:</em> Warping Path Identification</p>\n<p>Identify the warping path starting from top right corner of the matrix and traversing to bottom left. The traversal path is identified based on the neighbour with minimum value.</p>\n<p>In our example it starts with 15 and looks for minimum value i.e. 15 among its neighbours 18, 15 and 18.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*p6hJxIcUjOzgpTINBHLdmQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*p6hJxIcUjOzgpTINBHLdmQ.png\"></p>\n<p><img src=\"https://miro.medium.com/max/60/1*RnqvEKdMmWklx5m59YiP3g.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*RnqvEKdMmWklx5m59YiP3g.png\"></p>\n<p>The next number in the warping traversal path is 14. This process continues till we reach the bottom or the left axis of the table.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*mjtlGiB44Zz2pALmMiYNLQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*mjtlGiB44Zz2pALmMiYNLQ.png\"></p>\n<p>The final path will look like this:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*WaC_xFSpJi-2GlF7OG37CA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*WaC_xFSpJi-2GlF7OG37CA.png\"></p>\n<p>Let this warping path series be called as d.</p>\n<p>d = [15,15,14,13,11,9,8,8,4,4,3,0]</p>\n<p><em>Step 4:</em> Final Distance Calculation</p>\n<p>Time normalised distance , D</p>\n<p><img src=\"https://miro.medium.com/max/60/1*6M_cotyKNao7xo03zsMLZQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/385/1*6M_cotyKNao7xo03zsMLZQ.png\"></p>\n<p>where k is the length of the series d.</p>\n<p>k = 12 in our case.</p>\n<p>D = ( 15 + 15 + 14 + 13 + 11 + 9 + 8 + 8 + 4 + 4 + 3 + 0 ) /12</p>\n<p>= 104/12</p>\n<p>= 8.63</p>\n<p>Let us take another example with two very similar time series with unit time shift difference.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*CLSlk3qD0Hil2H4XBBeE3Q.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*CLSlk3qD0Hil2H4XBBeE3Q.png\"></p>\n<p>Cost matrix and warping path will look like this.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*Wx823zTAqUkrSbX1ivMAlg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*Wx823zTAqUkrSbX1ivMAlg.png\"></p>\n<p>DTW distance ,D =</p>\n<p>( 0 + 0 + 0 + 0 + 0 +0 +0 +0 +0 +0 +0 ) /11</p>\n<p>= 0</p>\n<p>Zero DTW distance implies that the time series are very similar and that is indeed the case as observed in the plot.</p>\n<h1>Resummation (Spaced Repitition)</h1>\n<p>Dynamic Time Warping (DTW) is a way to compare two -usually temporal- sequences that do not sync up perfectly. It is a method to calculate the optimal matching between two sequences. DTW is useful in many domains such as speech recognition, data mining, financial markets, etc. It's commonly used in data mining to measure the distance between two time-series.</p>\n<p>In this post, we will go over the mathematics behind DTW. Then, two illustrative examples are provided to better understand the concept. If you are not interested in the math behind it, please jump to examples.</p>\n<h1>Formulation</h1>\n<p>Let's assume we have two sequences like the following:</p>\n<p><em>𝑋=𝑥[1], 𝑥[2], ..., x[i], ..., x[n]</em></p>\n<p><em>Y=y[1], y[2], ..., y[j], ..., y[m]</em></p>\n<p>The sequences 𝑋 and 𝑌 can be arranged to form an 𝑛-by-𝑚 grid, where each point (𝑖, j) is the alignment between 𝑥[𝑖] and 𝑦[𝑗].</p>\n<p>A warping path 𝑊 maps the elements of 𝑋 and 𝑌 to minimize the <em>distance</em> between them. 𝑊 is a sequence of grid points (𝑖, 𝑗). We will see an example of the warping path later.</p>\n<h2>Warping Path and DTW distance</h2>\n<p>The Optimal path to (𝑖<em>𝑘, 𝑗</em>𝑘) can be computed by:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*8hJEJWuxrccwCMuUG_aPbQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*8hJEJWuxrccwCMuUG_aPbQ.png\"></p>\n<p>where 𝑑 is the Euclidean distance. Then, the overall path cost can be calculated as</p>\n<p><img src=\"https://miro.medium.com/max/60/1*2OGDOJ-a0zTO_9T1FIGejQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/272/1*2OGDOJ-a0zTO_9T1FIGejQ.png\"></p>\n<h1>Restrictions on the Warping function</h1>\n<p>The warping path is found using a dynamic programming approach to align two sequences. Going through all possible paths is \"combinatorically explosive\" [1]. Therefore, for efficiency purposes, it's important to limit the number of possible warping paths, and hence the following constraints are outlined:</p>\n<ul>\n<li>Boundary Condition: This constraint ensures that the warping path begins with the start points of both signals and terminates with their endpoints.</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/60/1*SHsmQu2TqpaDyIArn2snzg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/452/1*SHsmQu2TqpaDyIArn2snzg.png\"></p>\n<ul>\n<li>Monotonicity condition: This constraint preserves the time-order of points (not going back in time).</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/60/1*RNg2VENGaWoyvGrvyeg61A.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/311/1*RNg2VENGaWoyvGrvyeg61A.png\"></p>\n<ul>\n<li>Continuity (step size) condition: This constraint limits the path transitions to adjacent points in time (not jumping in time).</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/60/1*lU99pFyomdPeaHuR26bDyA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/418/1*lU99pFyomdPeaHuR26bDyA.png\"></p>\n<p>In addition to the above three constraints, there are other less frequent conditions for an allowable warping path:</p>\n<ul>\n<li>Warping window condition: Allowable points can be restricted to fall within a given warping window of width 𝜔 (a positive integer).</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/60/1*9apgwkXeU3gOHLudFsIosA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/168/1*9apgwkXeU3gOHLudFsIosA.png\"></p>\n<ul>\n<li>Slope condition: The warping path can be constrained by restricting the slope, and consequently avoiding extreme movements in one direction.</li>\n</ul>\n<p>An acceptable warping path has combinations of chess king moves that are:</p>\n<ul>\n<li>Horizontal moves: (𝑖, 𝑗) → (𝑖, 𝑗+1)</li>\n<li>Vertical moves: (𝑖, 𝑗) → (𝑖+1, 𝑗)</li>\n<li>Diagonal moves: (𝑖, 𝑗) → (𝑖+1, 𝑗+1)</li>\n</ul>\n<h1>Implementation</h1>\n<p>Let's import all python packages we need.</p>\n<p>import pandas as pd<br>\nimport numpy as np# Plotting Packages<br>\nimport matplotlib.pyplot as plt<br>\nimport seaborn as sbn# Configuring Matplotlib<br>\nimport matplotlib as mpl<br>\nmpl.rcParams['figure.dpi'] = 300<br>\nsavefig<em>options = dict(format=\"png\", dpi=300, bbox</em>inches=\"tight\")# Computation packages<br>\nfrom scipy.spatial.distance import euclidean<br>\nfrom fastdtw import fastdtw</p>\n<p>Let's define a method to compute the accumulated cost matrix <em>D</em> for the warp path. The cost matrix uses the Euclidean distance to calculate the distance between every two points. The methods to compute the Euclidean distance matrix and accumulated cost matrix are defined below:</p>\n<h1>Example 1</h1>\n<p>In this example, we have two sequences <em>x</em> and <em>y</em> with different lengths.</p>\n<h1>Create two sequences\\</h1>\n<p>x = [3, 1, 2, 2, 1]<br>\ny = [2, 0, 0, 3, 3, 1, 0]</p>\n<p>We cannot calculate the Euclidean distance between <em>x</em> and <em>y</em> since they don't have equal lengths.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*ADzLGLGGq13onO72EO_ZpQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*ADzLGLGGq13onO72EO_ZpQ.png\"></p>\n<p>Example 1: Euclidean distance between x and y (is it possible? 🤔) (Image by Author)</p>\n<h1>Compute DTW distance and warp path</h1>\n<p>Many Python packages calculate the DTW by just providing the sequences and the type of distance (usually Euclidean). Here, we use a popular Python implementation of DTW that is <a href=\"https://github.com/slaypni/fastdtw\">FastDTW</a> which is an approximate DTW algorithm with lower time and memory complexities [2].</p>\n<p>dtw<em>distance, warp</em>path = fastdtw(x, y, dist=euclidean)</p>\n<p>Note that we are using <a href=\"https://pypi.org/project/scipy/\">SciPy</a>'s distance function <em>Euclidean</em> that we imported earlier. For a better understanding of the warp path, let's first compute the accumulated cost matrix and then visualize the path on a grid. The following code will plot a heatmap of the accumulated cost matrix.</p>\n<p>cost<em>matrix = compute</em>accumulated<em>cost</em>matrix(x, y)</p>\n<p>Example 1: Python code to plot (and save) the heatmap of the accumulated cost matrix</p>\n<p><img src=\"https://miro.medium.com/max/54/1*PIKZAwsV15NBvqkh9N1KMg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/375/1*PIKZAwsV15NBvqkh9N1KMg.png\"></p>\n<p>Example 1: Accumulated cost matrix and warping path (Image by Author)</p>\n<p>The color bar shows the cost of each point in the grid. As can be seen, the warp path (blue line) is going through the lowest cost on the grid. Let's see the DTW distance and the warping path by printing these two variables.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>DTW distance: 6.0<br>\nWarp path: [(0, 0), (1, 1), (1, 2), (2, 3), (3, 4), (4, 5), (4, 6)]</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>The warping path starts at point (0, 0) and ends at (4, 6) by 6 moves. Let's also calculate the accumulated cost most using the functions we defined earlier and compare the values with the heatmap.</p>\n<p>cost<em>matrix = compute</em>accumulated<em>cost</em>matrix(x, y)<br>\nprint(np.flipud(cost_matrix)) # Flipping the cost matrix for easier comparison with heatmap values!>>> [[32. 12. 10. 10.  6.]<br>\n[23. 11.  6.  6.  5.]<br>\n[19. 11.  5.  5.  9.]<br>\n[19.  7.  4.  5.  8.]<br>\n[19.  3.  6. 10.  4.]<br>\n[10.  2.  6.  6.  3.]<br>\n[ 1.  2.  2.  2.  3.]]</p>\n<p>The cost matrix is printed above has similar values to the heatmap.</p>\n<p>Now let's plot the two sequences and connect the mapping points. The code to plot the DTW distance between <em>x</em> and <em>y</em> is given below.</p>\n<p>Example 1: Python code to plot (and save) the DTW distance between x and y</p>\n<p><img src=\"https://miro.medium.com/max/60/1*bF9I-49iVW9b2MvDbRBZxA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*bF9I-49iVW9b2MvDbRBZxA.png\"></p>\n<p>Example 1: DTW distance between x and y (Image by Author)</p>\n<h1>Example 2</h1>\n<p>In this example, we will use two sinusoidal signals and see how they will be matched by calculating the DTW distance between them.</p>\n<p>Example 2: Generate two sinusoidal signals (x1 and x2) with different lengths</p>\n<p>Just like Example 1, let's calculate the DTW distance and the warp path for *x1 *and *x2 *signals using FastDTW package.</p>\n<p>distance, warp_path = fastdtw(x1, x2, dist=euclidean)</p>\n<p>Example 2: Python code to plot (and save) the DTW distance between x1 and x2</p>\n<p><img src=\"https://miro.medium.com/max/60/1*Bzubc5uGFXd_-Sj7W_QFjg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*Bzubc5uGFXd_-Sj7W_QFjg.png\"></p>\n<p>Example 2: DTW distance between x1 and x2 (Image by Author)</p>\n<p>As can be seen in above figure, the DTW distance between the two signals is particularly powerful when the signals have similar patterns. The extrema (maximum and minimum points) between the two signals are correctly mapped. Moreover, unlike Euclidean distance, we may see many-to-one mapping when DTW distance is used, particularly if the two signals have different lengths.</p>\n<p>You may spot an issue with dynamic time warping from the figure above. Can you guess what it is?</p>\n<p>The issue is around the head and tail of time-series that do not properly match. This is because the DTW algorithm cannot afford the warping invariance for at the endpoints. In short, the effect of this is that a small difference at the sequence endpoints will tend to contribute disproportionately to the estimated similarity[3].</p>\n<h1>Conclusion</h1>\n<p>DTW is an algorithm to find an optimal alignment between two sequences and a useful distance metric to have in our toolbox. This technique is useful when we are working with two non-linear sequences, particularly if one sequence is a non-linear stretched/shrunk version of the other. The warping path is a combination of \"chess king\" moves that starts from the head of two sequences and ends with their tails.</p>\n<p>You can find the Jupyter notebook for this blog post <a href=\"https://github.com/e-alizadeh/medium/blob/master/notebooks/intro_to_dtw.ipynb\">here</a>. Thanks for reading!</p>\n<h1>References</h1>\n<p>[1] Donald J. Berndt and James Clifford, <a href=\"https://www.aaai.org/Papers/Workshops/1994/WS-94-03/WS94-03-031.pdf\">Using Dynamic Time Warping to Find Patterns in Time Series</a>, 3rd International Conference on Knowledge Discovery and Data Mining</p>\n<p>[2] Salvador, S. and P. Chan, <a href=\"https://cs.fit.edu/~pkc/papers/tdm04.pdf\">FastDTW: Toward accurate dynamic time warping in linear time and space</a>(2007), Intelligent Data Analysis</p>\n<p>[3] Diego Furtado Silva, <em>et al.</em>, <a href=\"https://core.ac.uk/display/147806669\">On the effect of endpoints on dynamic time warping</a> (2016), SIGKDD Workshop on Mining and Learning from Time Series</p>\n<h1>Useful Links</h1>\n<p>[1] <a href=\"https://nipunbatra.github.io/blog/ml/2014/05/01/dtw.html\">https://nipunbatra.github.io/blog/ml/2014/05/01/dtw.html</a></p>\n<p>[2] <a href=\"https://databricks.com/blog/2019/04/30/understanding-dynamic-time-warping.html\">https://databricks.com/blog/2019/04/30/understanding-dynamic-time-warping.html</a></p>\n<p>Sounds like time traveling or some kind of future technic, however, it is not. Dynamic Time Warping is used to compare the similarity or calculate the distance between two arrays or time series with different length.</p>\n<p>Suppose we want to calculate the distance of two equal-length arrays:</p>\n<p>a = [1, 2, 3]<br>\nb = [3, 2, 2]</p>\n<p>How to do that? One obvious way is to match up <code>a</code> and <code>b</code> in 1-to-1 fashion and sum up the total distance of each component. This sounds easy, but what if <code>a</code> and <code>b</code> have different lengths?</p>\n<p>a = [1, 2, 3]<br>\nb = [2, 2, 2, 3, 4]</p>\n<p>How to match them up? Which should map to which? To solve the problem, there comes dynamic time warping. Just as its name indicates, to warp the series so that they can match up.</p>\n<h1>Use Cases</h1>\n<p>Before digging into the algorithm, you might have the question that is it useful? Do we really need to compare the distance between two unequal-length time series?</p>\n<p>Yes, in a lot of scenarios DTW is playing a key role.</p>\n<h2>Sound Pattern Recognition</h2>\n<p>One use case is to detect the sound pattern of the same kind. Suppose we want to recognise the voice of a person by analysing his sound track, and we are able to collect his sound track of saying <code>Hello</code> in one scenario. However, people speak in the same word in different ways, what if he speaks hello in a much slower pace like <code>Heeeeeeelloooooo</code> , we will need an algorithm to match up the sound track of different lengths and be able to identify they come from the same person.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*gi1TtOqFCsb2M_U7iAUAag.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*gi1TtOqFCsb2M_U7iAUAag.png\"></p>\n<h2>Stock Market</h2>\n<p>In a stock market, people always hope to be able to predict the future, however using general machine learning algorithms can be exhaustive, as most prediction task requires test and training set to have the same dimension of features. However, if you ever speculate in the stock market, you will know that even the same pattern of a stock can have very different length reflection on klines and indicators.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*4QUO4Tqm_z-8ydMBGgqmPg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*4QUO4Tqm_z-8ydMBGgqmPg.png\"></p>\n<h1>Definition &#x26; Idea</h1>\n<p>A concise explanation of DTW from wiki,</p>\n<blockquote>\n<p>In time series analysis, dynamic time warping (DTW) is one of the algorithms for measuring similarity between two temporal sequences, which may vary in speed. DTW has been applied to temporal sequences of video, audio, and graphics data --- indeed, any data that can be turned into a linear sequence can be analysed with DTW.</p>\n</blockquote>\n<p><em>The idea to compare arrays with different length is to build one-to-many and many-to-one matches so that the total distance can be minimised between the two.</em></p>\n<p>Suppose we have two different arrays red and blue with different length:</p>\n<p><img src=\"https://miro.medium.com/max/42/1*uFicSZjqkNBfsyrsJw7J9g.jpeg?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/612/1*uFicSZjqkNBfsyrsJw7J9g.jpeg\"></p>\n<p>Clearly these two series follow the same pattern, but the blue curve is longer than the red. If we apply the one-to-one match, shown in the top, the mapping is not perfectly synced up and the tail of the blue curve is being left out.</p>\n<p>DTW overcomes the issue by developing a one-to-many match so that the troughs and peaks with the same pattern are perfectly matched, and there is no left out for both curves(shown in the bottom top).</p>\n<h1>Rules</h1>\n<p>In general, DTW is a method that calculates an optimal match between two given sequences (e.g. time series) with certain restriction and rules(comes from wiki):</p>\n<ul>\n<li>Every index from the first sequence must be matched with one or more indices from the other sequence and vice versa</li>\n<li>The first index from the first sequence must be matched with the first index from the other sequence (but it does not have to be its only match)</li>\n<li>The last index from the first sequence must be matched with the last index from the other sequence (but it does not have to be its only match)</li>\n<li>The mapping of the indices from the first sequence to indices from the other sequence must be monotonically increasing, and vice versa, i.e. if <code>j > i</code> are indices from the first sequence, then there must not be two indices <code>l > k</code> in the other sequence, such that index <code>i</code> is matched with index <code>l</code> and index <code>j</code> is matched with index <code>k</code> , and vice versa</li>\n</ul>\n<p>The optimal match is denoted by the match that satisfies all the restrictions and the rules and that has the minimal cost, where the cost is computed as the sum of absolute differences, for each matched pair of indices, between their values.</p>\n<p>To summarise is that <em>head and tail must be positionally matched, no cross-match and no left out.</em></p>\n<h1>Implementation</h1>\n<p>The implementation of the algorithm looks extremely concise:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*fGr2Mj7fEB7tEyqAzcp2LA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*fGr2Mj7fEB7tEyqAzcp2LA.png\"></p>\n<p>where <code>DTW[i, j]</code> is the distance between <code>s[1:i]</code> and <code>t[1:j]</code> with the best alignment.</p>\n<p>The key lies in:</p>\n<p>DTW[i, j] := cost + minimum(DTW[i-1, j ],<br>\nDTW[i , j-1],<br>\nDTW[i-1, j-1])</p>\n<p>Which is saying that the cost of between two arrays with length <code>i and j</code> equals <em>the distance between the tails + the minimum of cost in arrays with length *`</em>i-1, j<em><code>_ , _</code></em>i, j-1<em><code>_ , and _</code></em>i-1, j-1*`_ ._</p>\n<p>Put it in python would be:</p>\n<p>Example:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*eogOkXkOUzi6Cq7U9BgiLg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*eogOkXkOUzi6Cq7U9BgiLg.png\"></p>\n<p>The distance between <code>a and b</code> would be the last element of the matrix, which is 2.</p>\n<h2>Add Window Constraint</h2>\n<p>One issue of the above algorithm is that we allow one element in an array to match an unlimited number of elements in the other array(as long as the tail can match in the end), this would cause the mapping to bent over a lot, for example, the following array:</p>\n<p>a = [1, 2, 3]<br>\nb = [1, 2, 2, 2, 2, 2, 2, 2, ..., 5]</p>\n<p>To minimise the distance, the element 2 in array <code>a</code> would match all the 2 in array <code>b</code> , which causes an array <code>b</code> to bent severely. To avoid this, we can add a window constraint to limit the number of elements one can match:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*0_xypte7FHDWJuuBexEvHg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*0_xypte7FHDWJuuBexEvHg.png\"></p>\n<p>The key difference is that now each element is confined to match elements in range <code>i --- w</code> and <code>i + w</code> . The <code>w := max(w, abs(n-m))</code> guarantees all indices can be matched up.</p>\n<p>The implementation and example would be:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*2K6C-3QrRmbbhpe-jt9UQA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*2K6C-3QrRmbbhpe-jt9UQA.png\"></p>\n<h1>Apply a Package</h1>\n<p>There is also contributed packages available on Pypi to use directly. Here I demonstrate an example using <a href=\"https://pypi.org/project/fastdtw/\">fastdtw</a>:</p>\n<p>It gives you the distance of two lists and index mapping(the example can extend to a multi-dimension array).</p>","pages":[{"url":"/blog/big-o-complexity/","relativePath":"blog/big-o-complexity.md","relativeDir":"blog","base":"big-o-complexity.md","name":"big-o-complexity","frontmatter":{"title":"Big O Computational Complexity","subtitle":"Explained using gif animations","date":"2021-09-11","thumb_image_alt":"neural network","excerpt":"Bubble sort, sorts an array of integers by bubbling the largest integer to the top.","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post","thumb_image":"images/neural-c16cd3ca.PNG","image":"images/my-back-0b8b3eaf.png"},"html":"<h3>Sorting Algorithms<img src=\"https://cdn-images-1.medium.com/max/800/0*Ck9aeGY-d5tbz7dT\"><img src=\"https://cdn-images-1.medium.com/max/800/0*AByxtBjFrPVVYmyu\"><img src=\"https://cdn-images-1.medium.com/max/800/0*GeYNxlRcbt2cf0rY\"><img src=\"https://cdn-images-1.medium.com/max/800/0*gbNU6wrszGPrfAZG\"><img src=\"https://cdn-images-1.medium.com/max/800/0*GeU8YwwCoK8GiSTD\"><img src=\"https://cdn-images-1.medium.com/max/800/0*IxqGb72XDVDeeiMl\"><img src=\"https://cdn-images-1.medium.com/max/800/0*HMCR--9niDt5zY6M\"><img src=\"https://cdn-images-1.medium.com/max/800/0*WLl_HpdBGXYx284T\"><img src=\"https://cdn-images-1.medium.com/max/800/0*-LyHJXGPTYsWLDZf\"><img src=\"https://cdn-images-1.medium.com/max/800/0*-naVYGTXzE2Yoali\">\n\n</h3>\n<h3>Bubble Sort</h3>\n<p>Time Complexity: Quadratic O(n^2)</p>\n<ul>\n<li>The inner for-loop contributes to O(n), however in a worst case scenario the while loop will need to run n times before bringing all n elements to their final resting spot.</li>\n</ul>\n<p>Space Complexity: O(1)</p>\n<ul>\n<li>Bubble Sort will always use the same amount of memory regardless of n.</li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/e67e56bed7c5a20a54851867ba5efef6\">https://gist.github.com/eengineergz/e67e56bed7c5a20a54851867ba5efef6</a></p>\n<ul>\n<li>The first major sorting algorithm one learns in introductory programming courses.</li>\n<li>Gives an intro on how to convert unsorted data into sorted data.</li>\n</ul>\n<blockquote>\n<p>It’s almost never used in production code because:</p>\n</blockquote>\n<ul>\n<li><em>It’s not efficient</em></li>\n<li><em>It’s not commonly used</em></li>\n<li><em>There is stigma attached to it</em></li>\n<li><em>Bubbling Up : Term that infers that an item is in motion, moving in some direction, and has some final resting destination.</em></li>\n<li><em>Bubble sort, sorts an array of integers by bubbling the largest integer to the top.</em></li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/fd4acc0c89033bd219ebf9d3ec40b053\">https://gist.github.com/eengineergz/fd4acc0c89033bd219ebf9d3ec40b053</a><a href=\"https://gist.github.com/eengineergz/80934783c628c70ac2a5a48119a82d54\">https://gist.github.com/eengineergz/80934783c628c70ac2a5a48119a82d54</a></p>\n<ul>\n<li><em>Worst Case &#x26; Best Case are always the same because it makes nested loops.</em></li>\n<li><em>Double for loops are polynomial time complexity or more specifically in this case Quadratic (Big O) of: O(n²)</em></li>\n</ul>\n<h3>Selection Sort</h3>\n<p>Time Complexity: Quadratic O(n^2)</p>\n<ul>\n<li>Our outer loop will contribute O(n) while the inner loop will contribute O(n / 2) on average. Because our loops are nested we will get O(n²);</li>\n</ul>\n<p>Space Complexity: O(1)</p>\n<ul>\n<li>Selection Sort will always use the same amount of memory regardless of n.</li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/4abc0fe0bf01599b0c4104b0ba633402\">https://gist.github.com/eengineergz/4abc0fe0bf01599b0c4104b0ba633402</a></p>\n<ul>\n<li>Selection sort organizes the smallest elements to the start of the array.</li>\n</ul>\n<blockquote>\n<p>Summary of how Selection Sort should work:</p>\n</blockquote>\n<ol>\n<li><em>Set MIN to location 0</em></li>\n<li><em>Search the minimum element in the list.</em></li>\n<li><em>Swap with value at location Min</em></li>\n<li><em>Increment Min to point to next element.</em></li>\n<li><em>Repeat until list is sorted.</em></li>\n</ol>\n<p><a href=\"https://gist.github.com/eengineergz/61f130c8e0097572ed908fe2629bdee0\">https://gist.github.com/eengineergz/61f130c8e0097572ed908fe2629bdee0</a></p>\n<h3>Insertion Sort</h3>\n<p>Time Complexity: Quadratic O(n^2)</p>\n<ul>\n<li>Our outer loop will contribute O(n) while the inner loop will contribute O(n / 2) on average. Because our loops are nested we will get O(n²);</li>\n</ul>\n<p>Space Complexity: O(n)</p>\n<ul>\n<li>Because we are creating a subArray for each element in the original input, our Space Comlexity becomes linear.</li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/a9f4b8596c7546ac92746db659186d8c\">https://gist.github.com/eengineergz/a9f4b8596c7546ac92746db659186d8c</a></p>\n<h3>Merge Sort</h3>\n<p>Time Complexity: Log Linear O(nlog(n))</p>\n<ul>\n<li>Since our array gets split in half every single time we contribute O(log(n)). The while loop contained in our helper merge function contributes O(n) therefore our time complexity is O(nlog(n)); Space Complexity: O(n)</li>\n<li>We are linear O(n) time because we are creating subArrays.</li>\n</ul>\n<h3>Example of Merge Sort</h3>\n<p><a href=\"https://gist.github.com/eengineergz/18fbb7edc9f5c4820ccfcecacf3c5e48\">https://gist.github.com/eengineergz/18fbb7edc9f5c4820ccfcecacf3c5e48</a><a href=\"https://gist.github.com/eengineergz/cbb533137a7f957d3bc4077395c1ff64\">https://gist.github.com/eengineergz/cbb533137a7f957d3bc4077395c1ff64</a></p>\n<ul>\n<li><strong>Merge sort is O(nlog(n)) time.</strong></li>\n<li><em>We need a function for merging and a function for sorting.</em></li>\n</ul>\n<blockquote>\n<p>Steps:</p>\n</blockquote>\n<ol>\n<li><em>If there is only one element in the list, it is already sorted; return the array.</em></li>\n<li><em>Otherwise, divide the list recursively into two halves until it can no longer be divided.</em></li>\n<li><em>Merge the smallest lists into new list in a sorted order.</em></li>\n</ol>\n<h3>Quick Sort</h3>\n<p>Time Complexity: Quadratic O(n^2)</p>\n<ul>\n<li>Even though the average time complexity O(nLog(n)), the worst case scenario is always quadratic.</li>\n</ul>\n<p>Space Complexity: O(n)</p>\n<ul>\n<li>Our space complexity is linear O(n) because of the partition arrays we create.</li>\n<li>QS is another Divide and Conquer strategy.</li>\n<li>Some key ideas to keep in mind:</li>\n<li>It is easy to sort elements of an array relative to a particular target value.</li>\n<li>An array of 0 or 1 elements is already trivially sorted.</li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/24bcbc5248a8c4e1671945e9512da57e\">https://gist.github.com/eengineergz/24bcbc5248a8c4e1671945e9512da57e</a></p>\n<h3>Binary Search</h3>\n<p>Time Complexity: Log Time O(log(n))</p>\n<p>Space Complexity: O(1)</p>\n<blockquote>\n<p><em>Recursive Solution</em></p>\n</blockquote>\n<p><a href=\"https://gist.github.com/eengineergz/c82c00a4bcba4b69b7d326d6cad3ac8c\">https://gist.github.com/eengineergz/c82c00a4bcba4b69b7d326d6cad3ac8c</a></p>\n<blockquote>\n<p><em>Min Max Solution</em></p>\n</blockquote>\n<p><a href=\"https://gist.github.com/eengineergz/eb8d1e1684db15cc2c8af28e13f38751\">https://gist.github.com/eengineergz/eb8d1e1684db15cc2c8af28e13f38751</a><a href=\"https://gist.github.com/eengineergz/bc3f576b9795ccef12a108e36f9f820a\">https://gist.github.com/eengineergz/bc3f576b9795ccef12a108e36f9f820a</a></p>\n<ul>\n<li><em>Must be conducted on a sorted array.</em></li>\n<li><em>Binary search is logarithmic time, not exponential b/c n is cut down by two, not growing.</em></li>\n<li><em>Binary Search is part of Divide and Conquer.</em></li>\n</ul>\n<h3>Insertion Sort</h3>\n<ul>\n<li><strong>Works by building a larger and larger sorted region at the left-most end of the array.</strong></li>\n</ul>\n<blockquote>\n<p>Steps:</p>\n</blockquote>\n<ol>\n<li><em>If it is the first element, and it is already sorted; return 1.</em></li>\n<li><em>Pick next element.</em></li>\n<li><em>Compare with all elements in the sorted sub list</em></li>\n<li><em>Shift all the elements in the sorted sub list that is greater than the value to be sorted.</em></li>\n<li><em>Insert the value</em></li>\n<li><em>Repeat until list is sorted.</em></li>\n</ol>\n<p><a href=\"https://gist.github.com/eengineergz/ffead1de0836c4bcc6445780a604f617\">https://gist.github.com/eengineergz/ffead1de0836c4bcc6445780a604f617</a></p>"},{"url":"/showcase/","relativePath":"showcase.md","relativeDir":"","base":"showcase.md","name":"showcase","frontmatter":{"title":"Showcase","sections":[{"section_id":"hero","type":"section_hero","title":"Showcase","image":"images/charming-dolphin.gif","content":"Some of my more engaging projects!\n"},{"section_id":"showcase","type":"section_grid","col_number":"three","grid_items":[{"title":"Git HTML PREVIEW","title_url":"https://github.com/bgoonz/GIT-HTML-PREVIEW-TOOL","image":"images/futuristic-mars.gif","content":"Preview html files by pasting their url into the search bar\n\n**Access-Control-Allow-Origin Header When Site A tries to fetch content from Site B**\n","actions":[{"label":"Live Site","url":"/https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/","style":"icon","icon_class":"github","new_window":true,"no_follow":false,"type":"action"}],"image_alt":"git html preview"},{"title":"Guitar Effects Automation Using Subsequence Dynamic Time Warping","title_url":"https://github.com/bgoonz/Revamped-Automatic-Guitar-Effect-Triggering","image":"images/curious-europa.gif","content":"**Modified subsequence dynamic time warping feature detection using pure data implemented in python**\n","actions":[{"label":"Slide Show","url":"https://1drv.ms/p/s!AkGiZ9n9CRDSpY88x407JwfEKNrDxg?e=faHSx9","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}]},{"title":"Data Structures Interactive Learning Hub","title_url":"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/","image":"images/ds-algo.gif","content":"**Big O notation is the language we use for talking about how long an algorithm takes to run. It's how we compare the efficiency of different approaches to a problem.**\n","actions":[{"label":"Live Site","url":"https://github.com/bgoonz/DS-ALGO-OFFICIAL","style":"icon","icon_class":"github","new_window":true,"no_follow":false,"type":"action"}]},{"title":"Learning Redux","title_url":"https://learning-redux42.netlify.app/","image_alt":"lorem-ipsum","content":"***React Redux provides a pair of custom React hooks that allow your React components to interact with the Redux store.***\n","actions":[{"label":"Website","url":"https://learning-redux42.netlify.app/","style":"icon","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}],"type":"grid_item","image":"images/best-birch.gif"},{"title":"Mihir-Beg-Music.com","title_url":"https://panoramic-eggplant-452e4.netlify.app/","image":"images/7a8bc98e902a2f6dea90386cdfb154c2.png","content":"Artist Showcase & Podcasting Site\n","actions":[{"label":"Live Site","url":"https://panoramic-eggplant-452e4.netlify.app/","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}]},{"title":"Aux Blog w NextJS","title_url":"https://bgoonz-blog-v3-0.netlify.app/","image_alt":"get in touch","content":"**Here lives my alternate/backup blog site!**\n","actions":[{"label":"git repo","url":"https://github.com/bgoonz/alternate-blog-theme","style":"icon","icon_class":"github","new_window":true,"no_follow":false,"type":"action"}],"type":"grid_item","image":"images/21ecc2f26e2641c8e9aae5479481bbe2 (5).png"},{"title":"Potluck Planner","title_url":"https://potluck-landing.netlify.app/","image_alt":"lorem-ipsum","content":"## Potluck Planner\n\nIf you have ever tried to organize a potluck through text messages, online to-do lists or spreadsheets, you'll understand why this app is essential.In the world of social gatherings and potlucks the \"Potluck Planner\" is king. This is your place for all things pot luck.\n\n","actions":[],"type":"grid_item","image":"images/potluck-planner.JPG"},{"title":"Zumzi Video Conferencing","title_url":"https://github.com/bgoonz/zumzi-chat-messenger","image_alt":"video chat","content":"**Features:   Live Streaming, Screen Sharing, Fine control over all video & audio parameters and user permissions, Supports video streaming at various resolutions: Standard, HD, FHD and 4K, Group Chat, One-to-One chat, Invite Participants**\n","actions":[{"label":"Live Site","url":"https://goofy-perlman-0f61df.netlify.app/","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}],"type":"grid_item","image":"images/energetic-sunflower.png"},{"title":"Web Audio Workstation","title_url":"lorem-ipsum","image_alt":"lorem-ipsum","content":"Made using jQuery and Vanilla JS\n\n","actions":[{"label":"Go To Live Site","url":"https://mihirbegmusiclab.netlify.app/","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"},{"label":"Github Repo","url":"https://github.com/bgoonz/MihirBegMusicLab","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}],"type":"grid_item","image":"images/royal-kangaroo.JPG"}]}],"seo":{"title":"Showcase","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Showcase","keyName":"property"},{"name":"og:description","value":"project showcase","keyName":"property"},{"name":"og:image","value":"images/My Post-4ecb169f.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Showcase"},{"name":"twitter:description","value":"This is the showcase page"},{"name":"twitter:image","value":"images/5.jpg","relativeUrl":true}],"description":"Git HTML PREVIEW, Guitar Effects, Data Structures, Redux, Podcast Blog, Contact Form, Potluck Planner, Video Conferencing, Web Audio Workstation"},"template":"advanced"},"html":""},{"url":"/","relativePath":"index.md","relativeDir":"","base":"index.md","name":"index","frontmatter":{"title":"Web Dev Hub Home","sections":[{"section_id":"Intro","type":"section_hero","title":"I am a musician, electrical engineer & web developer","image":"images/api-c99e353f761d318322c853c03ebcf21b.gif","content":"###### **A passionate student of web development from New Jersey U.S.A**\n\n**Please note that this website is in development and is often broken!**\n\n[](https://www.vagrantup.com/)[![](https://img.icons8.com/color/96/000000/gmail.png)](mailto:bryan.guner@gmail.com)[![](https://img.icons8.com/color/96/000000/youtube.png)](https://www.youtube.com/channel/UC9-rYyUMsnEBK8G8fCyrXXA/videos)[![](https://img.icons8.com/color/96/000000/instagram-new.png)](https://www.instagram.com/bgoonz/?hl=en) [![](https://img.icons8.com/color/96/000000/medium-logo.png)](https://bryanguner.medium.com/)\n\n[ ](https://webpack.js.org/)[ ](https://www.adobe.com/products/xd.html)\n\n[![Netlify Status](https://api.netlify.com/api/v1/badges/a1b7ee1a-11a7-4bd2-a341-2260656e216f/deploy-status)](https://app.netlify.com/sites/bgoonz-blog/deploys)\n\n[![Bryans github activity graph](https://activity-graph.herokuapp.com/graph?username=bgoonz\\&custom_title=This%20is%20Bryans%20Activity\\&hide_border=true\\&theme=chartreuse-dark)](https://github.com/bgoonz/github-readme-activity-graph)\n","actions":[{"label":"Contact","url":"https://sidebar-blog.netlify.app/contact/","style":"secondary","icon_class":"linkedin","new_window":true,"no_follow":false,"type":"action"}]},{"section_id":"features","type":"section_grid","col_number":"three","grid_items":[{"content":"Memoization, Tabulation, and Sorting Algorithms by Example\nWhy is looking at runtime not a reliable method of calculating time complexity?\n","actions":[{"label":"Get Started","url":"/docs","style":"link"}],"title":"A Quick Guide To Big O","image":"images/my-back.png","title_url":"https://medium.com/star-gazers/a-quick-guide-to-big-o-notation-memoization-tabulation-and-sorting-algorithms-by-example-803ff193c522"},{"content":"*Python has a built in help function that let’s you see a description of the source code without having to navigate to it… “-SickNasty … Autor Unknown”  .*\n","actions":[{"label":"View Posts","url":"https://levelup.gitconnected.com/python-study-guide-for-a-native-javascript-developer-5cfdf3d2bdfb","style":"link"}],"image_alt":"python","title":"Python Guide","title_url":"https://levelup.gitconnected.com/python-study-guide-for-a-native-javascript-developer-5cfdf3d2bdfb","image":"images/smiling-maple.png"},{"content":"<div id=\"search\"></div> <div id=\"search\" />\n","actions":[{"label":"Learn More","url":"/docs/tools","style":"link"}],"title":"Guitar Effects Triggering w DTW","title_url":"https://github.com/bgoonz/Revamped-Automatic-Guitar-Effect-Triggering","image":"images/panoramic-owl.png"},{"title_url":"https://bryanguner.medium.com/introductory-react-part-2-cda01615a186","image_alt":"img of dtw","content":"As I learn to build web applications in React I will blog about it in this series in an attempt to capture the questions that a complete beginner might encounter that a more seasoned developer would take for granted!\n","actions":[],"type":"grid_item","title":"Beginner Guide React","image":"images/successful-panda.gif"},{"title_url":"https://dev.to/bgoonz/scope-and-context-in-javascript-5cma","image_alt":"img of react","content":"Scope & Context in JS\n\nThe **scope** of a program in JavaScript is the set of variables that are available for use within the program. \n","actions":[],"type":"grid_item","image":"images/pleasant-birch.png","title":"Scope & Closure"},{"image_alt":"Every idea needs a medium","content":"PostgreSQL Cheat Sheet, Everything You Need to Get Started With VSCode + Extensions & Resources, Super Simple Intro To HTML,  Understanding Git... etc....\n","actions":[],"type":"grid_item","title":"My Medium Blog","image":"images/curious-mustard.png","title_url":"https://bryanguner.medium.com/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b"}]},{"title":"Current Interests","section_id":"interests","subtitle":"From github repositories to existential questions.","col_number":"three","grid_items":[{"title":"Angolia","title_url":"angolia","image_alt":"angolia","content":"## Full Text Search\n\n[Full Text Search](https://www.algolia.com/)\n\n## &#xA;\n","actions":[],"type":"grid_item","image":"images/spectacular-turmeric.png"},{"title":"Convolutional Neural Networks","title_url":"neural networks","image_alt":"neural networks","content":"Artificial neural networks, usually simply called neural networks, are computing systems vaguely inspired by the biological [neural networks](https://github.com/tensorflow/tensorflow)![](/\\_static/app-assets/neural.PNG)\n\n","actions":[],"type":"grid_item","image":"images/neural.PNG"},{"title":"Jamstack","title_url":"jamstack","image_alt":"jamstack","content":"## Why Jamstack\n\n*Jamstack is the new standard architecture for the web. Using Git workflows and modern build tools, pre-rendered content is served to a CDN and made dynamic through APIs and serverless functions. Technologies in the stack include JavaScript frameworks, Static Site Generators, Headless CMSs, and CDNs.*\n","actions":[],"type":"grid_item","image":"images/jamstack.png"},{"title":"Asynchronous JavaScript","title_url":"lorem-ipsum","image_alt":"lorem-ipsum","content":"The term **asynchronous** refers to two or more objects or events **not** existing or happening at the same time (or multiple related things happening without waiting for the previous one to complete). In computing, the word \"asynchronous\" is used in two major contexts.\n\n","actions":[],"type":"grid_item","image":"images/eventloop.gif"},{"title":"NJ Devils","image_alt":"nj-devils","content":"# New Jersey Devils Hockey Team\n\n### (Hockey in general)\n\n## Team identity\n\n[![](https://upload.wikimedia.org/wikipedia/en/thumb/d/da/OldDevils.png/300px-OldDevils.png)](https://en.wikipedia.org/wiki/File:OldDevils.png)\n\nThe old green style jerseys used from 1982 to 1992The jerseys used from 1992 to 2017[Sean Avery](https://en.wikipedia.org/wiki/Sean_Avery) of the [New York Rangers](https://en.wikipedia.org/wiki/New_York_Rangers) attempts to distract Brodeur during the [2008 Stanley Cup playoffs](https://en.wikipedia.org/wiki/2008\\_Stanley_Cup_playoffs). The playoff series was the fifth to feature the [Devils–Rangers rivalry](https://en.wikipedia.org/wiki/Devils%E2%80%93Rangers_rivalry).\n","actions":[{"label":"lorem-ipsum","url":"#","style":"link","icon_class":"dev","new_window":false,"no_follow":false}],"type":"grid_item","image":"images/njdevils.jpg","title_url":"https://www.allaboutthejersey.com/"},{"title":"ITER Fusion Reactor Experiment (Southern France)","title_url":"lorem-ipsum","image_alt":"lorem-ipsum","content":"# Break Even Nuclear Fusion Candidate\n\nIn December, researchers at the Joint European Torus (JET) started conducting fusion experiments with tritium — a rare and radioactive isotope of hydrogen. The facility is a one-tenth-volume mock-up of the US$22-billion ITER project and has the same doughnut-shaped ‘tokamak’ design — the world’s most developed approach to fusion energy. It is the first time since 1997 that researchers have done experiments in a tokamak with any significant amount of tritium.\n\n","actions":[],"type":"grid_item","image":"images/iter-zoomed.PNG"}],"type":"section_grid"},{"section_id":"features-two-col","type":"section_grid","title":"Resume & Portfolio","col_number":"two","grid_items":[{"title":"Resume","actions":[{"label":"Learn More","url":"https://1drv.ms/b/s!AkGiZ9n9CRDSpLsZsnPtiN7p77vq6A","style":"link"},{"label":"Download PDF","url":"#","style":"link","icon_class":"dev","new_window":false,"no_follow":false,"type":"action"}],"image":"images/resume.JPG","title_url":"https://github.com/bgoonz/resume-cv-portfolio-samples/raw/master/2021-resume/bryan-guner-resume-2021.pdf"},{"title":"Showcase","content":"![](/\\_static/app-assets/lambda-demo1.gif)My Projects!\n","actions":[{"label":"Learn More","url":"/showcase","style":"link"}],"image":"images/My Post.png"}]},{"title":"Blog-Archive-And-Mini-Projects","section_id":"lorem-ipsum","image_alt":"lorem-ipsum","image_position":"left","content":"<iframe class=\"block-content\" width=\"100%  width=\"1200px!important\" height=\"1000px!important\"\n  src=\"https://random-static-html-deploys.netlify.app/rotate.html\" title=\"YouTube video\n  player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n  encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","actions":[],"type":"section_content"},{"section_id":"Web Audio DAW","image_alt":"medium","image_position":"left","actions":[{"label":"Go To Web Audio Daw","url":"https://mihirbegmusiclab.netlify.app/","style":"primary","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}],"type":"section_content","image":"images/goals.jpg","title":"Web Audio DAW"},{"title":"Quick Links","section_id":"navigate from the home page","col_number":"two","type":"section_docs","subtitle":"quick links home"},{"title":"Contact","section_id":"contact","actions":[{"label":"Contact","url":"/docs/faq/contact","style":"primary","icon_class":"dev","new_window":false,"no_follow":false,"type":"action"},{"label":"email","url":"mailto:bryan.guner@gmail.com","style":"primary","icon_class":"dev","new_window":false,"no_follow":false},{"label":"Collaborate","url":"https://webdevhub.jetbrains.space/oauth/auth/invite/419dd305ba717a392a02aa5b4e41e09c","style":"primary","icon_class":"dev","new_window":false,"no_follow":false},{"label":"Subscribe (Youtube)","url":"https://www.youtube.com/channel/UC9-rYyUMsnEBK8G8fCyrXXA?sub_confirmation=1","style":"primary","icon_class":"dev","new_window":false,"no_follow":false}],"type":"section_cta","subtitle":"get in touch! +1 (551) - 254 - 5505"}],"seo":{"title":"Web-Dev-Hub","description":"bigO, Python, Javascript, Audio, Processing, Learning, Blog, React, PostgreSQL, Scope, Closure, Web Development, Embed, API, Website, Design, Music, Search","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Web-Dev-Hub","keyName":"property"},{"name":"og:description","value":"my resource sharing and blog site ... centered mostly on web development and just a bit of audio production / generally nerdy things I find interesting.","keyName":"property"},{"name":"og:image","value":"images/code.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Web-Dev-Hub"},{"name":"twitter:description","value":"Web-Dev-Hub"},{"name":"twitter:image","value":"images/4.jpg","relativeUrl":true}]},"template":"advanced"},"html":""},{"url":"/blog/flow-control-in-python/","relativePath":"blog/flow-control-in-python.md","relativeDir":"blog","base":"flow-control-in-python.md","name":"flow-control-in-python","frontmatter":{"title":"flow-control-in-python","subtitle":"flow-control-in-python","date":"2021-10-12","thumb_image_alt":"lorem-ipsum","excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post"},"html":"<h2>Read It</h2>\n<ul>\n<li><a href=\"https://www.pythoncheatsheet.org\">Website</a></li>\n<li><a href=\"https://github.com/wilfredinni/python-cheatsheet\">Github</a></li>\n<li><a href=\"https://github.com/wilfredinni/Python-cheatsheet/raw/master/python_cheat_sheet.pdf\">PDF</a></li>\n<li><a href=\"https://mybinder.org/v2/gh/wilfredinni/python-cheatsheet/master?filepath=jupyter_notebooks\">Jupyter Notebook</a></li>\n</ul>\n<h2>Flow Control</h2>\n<h3>Comparison Operators</h3>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>==</code></td>\n<td>Equal to</td>\n</tr>\n<tr>\n<td><code>!=</code></td>\n<td>Not equal to</td>\n</tr>\n<tr>\n<td><code>&#x3C;</code></td>\n<td>Less than</td>\n</tr>\n<tr>\n<td><code>></code></td>\n<td>Greater Than</td>\n</tr>\n<tr>\n<td><code>&#x3C;=</code></td>\n<td>Less than or Equal to</td>\n</tr>\n<tr>\n<td><code>>=</code></td>\n<td>Greater than or Equal to</td>\n</tr>\n</tbody>\n</table>\n<p>These operators evaluate to True or False depending on the values you give them.</p>\n<p>Examples:</p>\n<pre><code class=\"language-python\">42 == 42\n</code></pre>\n<pre><code class=\"language-python\">40 == 42\n</code></pre>\n<pre><code class=\"language-python\">'hello' == 'hello'\n</code></pre>\n<pre><code class=\"language-python\">'hello' == 'Hello'\n</code></pre>\n<pre><code class=\"language-python\">'dog' != 'cat'\n</code></pre>\n<pre><code class=\"language-python\">42 == 42.0\n</code></pre>\n<pre><code class=\"language-python\">42 == '42'\n</code></pre>\n<h3>Boolean evaluation</h3>\n<p>Never use <code>==</code> or <code>!=</code> operator to evaluate boolean operation. Use the <code>is</code> or <code>is not</code> operators,\nor use implicit boolean evaluation.</p>\n<p>NO (even if they are valid Python):</p>\n<pre><code class=\"language-python\">True == True\n</code></pre>\n<pre><code class=\"language-python\">True != False\n</code></pre>\n<p>YES (even if they are valid Python):</p>\n<pre><code class=\"language-python\">True is True\n</code></pre>\n<pre><code class=\"language-python\">True is not False\n</code></pre>\n<p>These statements are equivalent:</p>\n<pre><code class=\"language-Python\">if a is True:\n   pass\nif a is not False:\n   pass\nif a:\n   pass\n</code></pre>\n<p>And these as well:</p>\n<pre><code class=\"language-Python\">if a is False:\n   pass\nif a is not True:\n   pass\nif not a:\n   pass\n</code></pre>\n<h3>Boolean Operators</h3>\n<p>There are three Boolean operators: and, or, and not.</p>\n<p>The <em>and</em> Operator’s <em>Truth</em> Table:</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Evaluates to</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>True and True</td>\n<td>True</td>\n</tr>\n<tr>\n<td>True and False</td>\n<td>False</td>\n</tr>\n<tr>\n<td>False and True</td>\n<td>False</td>\n</tr>\n<tr>\n<td>False and False</td>\n<td>False</td>\n</tr>\n</tbody>\n</table>\n<p>The <em>or</em> Operator’s <em>Truth</em> Table:</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Evaluates to</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>True or True</td>\n<td>True</td>\n</tr>\n<tr>\n<td>True or False</td>\n<td>True</td>\n</tr>\n<tr>\n<td>False or True</td>\n<td>True</td>\n</tr>\n<tr>\n<td>False or False</td>\n<td>False</td>\n</tr>\n</tbody>\n</table>\n<p>The <em>not</em> Operator’s <em>Truth</em> Table:</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Evaluates to</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>not True</td>\n<td>False</td>\n</tr>\n<tr>\n<td>not False</td>\n<td>True</td>\n</tr>\n</tbody>\n</table>\n<h3>Mixing Boolean and Comparison Operators</h3>\n<pre><code class=\"language-python\">(4 &#x3C; 5) and (5 &#x3C; 6)\n</code></pre>\n<pre><code class=\"language-python\">(4 &#x3C; 5) and (9 &#x3C; 6)\n</code></pre>\n<pre><code class=\"language-python\">(1 == 2) or (2 == 2)\n</code></pre>\n<p>You can also use multiple Boolean operators in an expression, along with the comparison operators:</p>\n<pre><code class=\"language-python\">2 + 2 == 4 and not 2 + 2 == 5 and 2 * 2 == 2 + 2\n</code></pre>\n<h3>if Statements</h3>\n<pre><code class=\"language-python\">if name == 'Alice':\n    print('Hi, Alice.')\n</code></pre>\n<h3>else Statements</h3>\n<pre><code class=\"language-python\">name = 'Bob'\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelse:\n    print('Hello, stranger.')\n</code></pre>\n<h3>elif Statements</h3>\n<pre><code class=\"language-python\">name = 'Bob'\nage = 5\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelif age &#x3C; 12:\n    print('You are not Alice, kiddo.')\n</code></pre>\n<pre><code class=\"language-python\">name = 'Bob'\nage = 30\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelif age &#x3C; 12:\n    print('You are not Alice, kiddo.')\nelse:\n    print('You are neither Alice nor a little kid.')\n</code></pre>\n<h3>while Loop Statements</h3>\n<pre><code class=\"language-python\">spam = 0\n\nwhile spam &#x3C; 5:\n    print('Hello, world.')\n    spam = spam + 1\n</code></pre>\n<h3>break Statements</h3>\n<p>If the execution reaches a break statement, it immediately exits the while loop’s clause:</p>\n<pre><code class=\"language-python\">while True:\n    print('Please type your name.')\n    name = input()\n    if name == 'your name':\n        break\n\nprint('Thank you!')\n</code></pre>\n<h3>continue Statements</h3>\n<p>When the program execution reaches a continue statement, the program execution immediately jumps back to the start of the loop.</p>\n<pre><code class=\"language-python\">while True:\n    print('Who are you?')\n    name = input()\n    if name != 'Joe':\n        continue\n    print('Hello, Joe. What is the password? (It is a fish.)')\n    password = input()\n    if password == 'swordfish':\n        break\n\nprint('Access granted.')\n</code></pre>\n<h3>for Loops and the range() Function</h3>\n<pre><code class=\"language-python\">print('My name is')\nfor i in range(5):\n    print('Jimmy Five Times ({})'.format(str(i)))\n</code></pre>\n<p>The <em>range()</em> function can also be called with three arguments. The first two arguments will be the start and stop values, and the third will be the step argument. The step is the amount that the variable is increased by after each iteration.</p>\n<pre><code class=\"language-python\">for i in range(0, 10, 2):\n   print(i)\n</code></pre>\n<p>You can even use a negative number for the step argument to make the for loop count down instead of up.</p>\n<pre><code class=\"language-python\">for i in range(5, -1, -1):\n    print(i)\n</code></pre>\n<h3>For else statement</h3>\n<p>This allows you to specify a statement to execute after the full loop has been executed. Only\nuseful when a <code>break</code> condition can occur in the loop:</p>\n<pre><code class=\"language-python\">for i in [1, 2, 3, 4, 5]:\n   if i == 3:\n       break\nelse:\n   print(\"only executed when no item of the list is equal to 3\")\n</code></pre>\n<h3>Importing Modules</h3>\n<pre><code class=\"language-python\">import random\n\nfor i in range(5):\n    print(random.randint(1, 10))\n</code></pre>\n<pre><code class=\"language-python\">import random, sys, os, math\n</code></pre>\n<pre><code class=\"language-python\">from random import *\n</code></pre>\n<h3>Ending a Program with sys.exit</h3>\n<pre><code class=\"language-python\">import sys\n\nwhile True:\n    print('Type exit to exit.')\n    response = input()\n    if response == 'exit':\n        sys.exit()\n    print('You typed {}.'.format(response))\n</code></pre>"},{"url":"/review/","relativePath":"review.md","relativeDir":"","base":"review.md","name":"review","frontmatter":{"title":"review","sections":[],"seo":{"title":"review","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"advanced"},"html":"<div id=\"search\"></div>\n<h2>description: Review</h2>\n<h1>Review-Of-Previous-Concepts</h1>\n<h3>Review of Concepts</h3>\n<h3>Running JS Locally Concepts</h3>\n<ul>\n<li>\n<p>Match the commands <code>ls</code>, <code>cd</code>, <code>pwd</code> to their descriptions</p>\n<ul>\n<li><code>ls</code> lists contents of current directory</li>\n<li>\n<p><code>cd</code> changes current directory</p>\n<ul>\n<li><code>cd ..</code> takes you up one level</li>\n<li><code>cd</code> alone takes you back home</li>\n</ul>\n</li>\n<li><code>pwd</code> returns current directory</li>\n</ul>\n</li>\n<li>Given a folder structure diagram, a list of 'cd (path)' commands and target files, match the paths to the target files.</li>\n<li>Use VSCode to create a folder. Within the folder create a .js file containing <code>console.log('hello new world');</code> and save it.</li>\n<li>Use node to execute a JavaScript file in the terminal</li>\n</ul>\n<h3>Plain Old JS Object Lesson Concepts</h3>\n<ul>\n<li>\n<p>Label variables as either Primitive vs. Reference</p>\n<ul>\n<li>\n<p>primitives: strings, booleans, numbers, null and undefined</p>\n<ul>\n<li>primitives are immutable</li>\n</ul>\n</li>\n<li>\n<p>refereces: objects (including arrays)</p>\n<ul>\n<li>references are mutable</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Identify when to use <code>.</code> vs <code>[]</code> when accessing values of an object</p>\n<ul>\n<li>\n<p>dot syntax <code>object.key</code></p>\n<ul>\n<li>easier to read</li>\n<li>easier to write</li>\n<li>cannot use variables as keys</li>\n<li>keys cannot begin with a number</li>\n</ul>\n</li>\n<li>\n<p>bracket notation <code>object[\"key]</code></p>\n<ul>\n<li>allows variables as keys</li>\n<li>strings that start with numbers can be use as keys</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Write an object literal with a variable key using interpolation</p>\n<ul>\n<li>\n<p>put it in brackets to access the value of the variable, rather than just make the value that string</p>\n<pre><code class=\"language-javascript\">let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Use the <code>obj[key] !== undefined</code> pattern to check if a given variable that contains a key exists in an object</p>\n<ul>\n<li>can also use <code>(key in object)</code> syntax interchangeably (returns a boolean)</li>\n</ul>\n</li>\n<li>\n<p>Utilize Object.keys and Object.values in a function</p>\n<ul>\n<li><code>Object.keys(obj)</code> returns an array of all the keys in <code>obj</code></li>\n<li><code>Object.values(obj)</code> returns an array of the values in <code>obj</code></li>\n</ul>\n</li>\n<li>\n<p>Iterate through an object using a <code>for in</code> loop</p>\n<pre><code class=\"language-javascript\">let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};\n</code></pre>\n</li>\n<li>\n<p>Define a function that utilizes <code>...rest</code> syntax to accept an arbitrary number of arguments</p>\n<ul>\n<li><code>...rest</code> syntax will store all additional arguments in an array</li>\n<li>\n<p>array will be empty if there are no additional arguments</p>\n<pre><code class=\"language-javascript\">let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>\n<p>Use <code>...spread</code> syntax for Object literals and Array literals</p>\n<pre><code class=\"language-javascript\">let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]\n</code></pre>\n</li>\n<li>\n<p>Destructure an array to reference specific elements</p>\n<p>```javascript</p>\n<p>let array = [35,9];</p>\n<p>let [firstEl, secondEl] = array;</p>\n<p>console.log(firstEl); // => 35</p>\n<p>console.log(secondEl); // => 9</p>\n</li>\n</ul>\n<p>// can also destructure using ... syntax let array = [35,9,14]; let [head, ...tail] = array; console.log(head); // => 35 console.log(tail); // => [9, 14]</p>\n<pre><code class=\"language-javascript\">- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```javascript\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash\n</code></pre>\n<ul>\n<li>\n<p>Write a function that accepts a array as an argument and returns an object representing the count of each character in the array</p>\n<pre><code class=\"language-javascript\">//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}\n</code></pre>\n</li>\n</ul>\n<h3>Callbacks Lesson Concepts</h3>\n<ul>\n<li>\n<p>Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.</p>\n<ul>\n<li>they can be stored in variables, passed as arguments to other functions, and serve as return value for a function</li>\n<li>supports same basic operations as other types (strings, bools, numbers)</li>\n<li>higher-order functions take functions as arguments or return functions as values</li>\n</ul>\n</li>\n<li>\n<p>Given a code snippet containing an anonymous callback, a named callback, and multiple <code>console.log</code>s, predict what will be printed</p>\n<ul>\n<li>what is this referring to?</li>\n</ul>\n</li>\n<li>Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.</li>\n</ul>\n<pre><code class=\"language-javascript\">let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n</code></pre>\n<p>// shorter version let greaterCB = function(val, callback1, callback2) { return Math.max(callback1(val), callback2(val)); } // even shorter, cause why not let greaterCB = (val, cb1, cb2) => Math.max(cb1(val), cb2(val));</p>\n<pre><code class=\"language-javascript\">- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```javascript\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i &#x3C; array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];\n</code></pre>\n<ul>\n<li>\n<p>Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of <code>Array#filter</code>.</p>\n<pre><code class=\"language-javascript\">let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};\n</code></pre>\n</li>\n<li>\n<p>Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of <code>Array#every</code>.</p>\n<pre><code class=\"language-javascript\">let myEvery = function (array, callback) {\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n</code></pre>\n</li>\n</ul>\n<h3>Scope Lesson Concepts</h3>\n<ul>\n<li>\n<p>Identify the difference between <code>const</code>, <code>let</code>, and <code>var</code> declarations</p>\n<ul>\n<li><code>const</code> - cannot reassign variable, scoped to block</li>\n<li><code>let</code> - can reassign variable, scoped to block</li>\n<li><code>var</code> - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!</li>\n<li>a variable will always evaluate to the value it contains regardless of how it was declared</li>\n</ul>\n</li>\n<li>\n<p>Explain the difference between <code>const</code>, <code>let</code>, and <code>var</code> declarations</p>\n<ul>\n<li>\n<p><code>var</code> is function scoped—so if you declare it anywhere in a function, the declaration (but not assignment) is \"hoisted\"</p>\n<ul>\n<li>so it will exist in memory as \"undefined\" which is bad and unpredictable</li>\n</ul>\n</li>\n<li><code>var</code> will also allow you to redeclare a variable, while <code>let</code> or <code>const</code> will raise a syntax error. you shouldn't be able to do that!</li>\n<li><code>const</code> won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object</li>\n<li>block-scoped variables allow new variables with the same name in new scopes</li>\n<li>block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of <code>undefined</code> like <code>var</code> does, so it throws a specific reference error if you try to access the value before it has been declared</li>\n<li>\n<p>if you do not use <code>var</code> or <code>let</code> or <code>const</code> when initializing, it will be declared as global—THIS IS BAD</p>\n<ul>\n<li>if you assign a value without a declaration, it exists in the global scope (so then it would be accessible by all outer scopes, so bad). however, there's no hoisting, so it doesn't exist in the scope until after the line is run</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining</p>\n<ul>\n<li>scope of a program means the set of variables that are available for use within the program</li>\n<li>\n<p>global scope is represented by the <code>window</code> object in the browser and the <code>global</code> object in Node.js</p>\n<ul>\n<li>global variables are available everywhere, and so increase the risk of name collisions</li>\n</ul>\n</li>\n<li>\n<p>local scope is the set of variables available for use within the function</p>\n<ul>\n<li>when we enter a function, we enter a new scope</li>\n<li>includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined (hmm about that last one)</li>\n</ul>\n</li>\n<li>for blocks (denoted by curly braces <code>{}</code>, as in conditionals or <code>for</code> loops), variables can be block scoped</li>\n<li>\n<p>inner scope does not have access to variables in the outer scope</p>\n<ul>\n<li>scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found</li>\n<li>so an inner scope can access outer scope variables</li>\n<li>but an outer scope can never access inner scope variables</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Define an arrow function</p>\n<p>```javascript</p>\n<p>let arrowFunction = (param1, param2) => {</p>\n<p>let sum = param1 + param2;</p>\n<p>return sum;</p>\n<p>}</p>\n</li>\n</ul>\n<p>// with 1 param you can remove parens around parameters let arrowFunction = param => { param += 1; return param; }</p>\n<p>// if your return statement is one line, you can use implied return let arrowFunction = param => param + 1;</p>\n<p>// you don't have to assign to variable, can be anonymous // if you never need to use it again param => param + 1;</p>\n<p>```</p>\n<ul>\n<li>\n<p>Given an arrow function, deduce the value of <code>this</code> without executing the code</p>\n<ul>\n<li>arrow functions are automatically bound to the context they were declared in</li>\n<li>unlike regular function which use the context they are invoked in (unless they have been bound using <code>Function#bind</code>)</li>\n<li>if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context</li>\n<li>\n<p>so you can't use an arrow function to define a method directly</p>\n<p>```javascript</p>\n<p>let obj = {</p>\n<p>name: \"my object\",</p>\n<p>unboundFunc: function () {</p>\n<p>return this.name;</p>\n<p>// this function will be able to be called on different objects</p>\n<p>},</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<p>boundToGlobal: () => { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },</p>\n<pre><code class=\"language-javascript\">makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined\n</code></pre>\n<p>}</p>\n<pre><code class=\"language-javascript\">- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n\n```javascript\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());\n</code></pre>\n<ul>\n<li>\n<p>Define a method that references <code>this</code> on an object literal</p>\n<ul>\n<li>\n<p>when we use <code>this</code> in a method it refers to the object that the method is invoked on</p>\n<ul>\n<li>it will let you access other pieces of information from within that object, or even other methods</li>\n<li>method style invocation - <code>object.method(args)</code> (e.g. built in examples like <code>Array#push</code>, or <code>String#toUpperCase</code>)</li>\n</ul>\n</li>\n<li>context is set every time we invoke a function</li>\n<li>function style invocation sets the context to the global object no matter what</li>\n<li>being inside an object does not make the context that object! you still have to use method-style invocation</li>\n</ul>\n</li>\n<li>\n<p>Utilize the built in <code>Function#bind</code> on a callback to maintain the context of this</p>\n<ul>\n<li>when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function</li>\n</ul>\n<pre><code class=\"language-text\">let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"\n</code></pre>\n<p>``</p>\n</li>\n</ul>\n<h3></h3>\n<h3></h3>\n<pre><code class=\"language-javascript\">   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n</code></pre>\n<ul>\n<li>\n<p>CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!</p>\n<ul>\n<li>could throw an error if it expects this to have some other method or whatever that doesn't exist</li>\n<li>you could also overwrite values or assign values to exist in a space where they should not exist</li>\n</ul>\n</li>\n<li>\n<p>if you call a function as a callback, it will set <code>this</code> to be the outer function itself, even if the function you were calling is a method that was called on a particular object</p>\n<pre><code class=\"language-text\">let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function\n</code></pre>\n</li>\n</ul>\n<p>we can use strict mode with <code>\"use strict\";</code> this will prevent you from accessing the global object with <code>this</code> in functions, so if you try to call <code>this</code> in the global context and change a value, you will get a type error, and the things you try to access will be undefined</p>\n<h3></h3>\n<p>let sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function</p>\n<p>// we can use the built in Function.bind to ensure our context, our <code>this</code>, // is the cat object let boundCat = sayMeow.bind(cat);</p>\n<p>boundCat(); // prints \"meow\"</p>\n<pre><code class=\"language-text\">   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n</code></pre>\n<ul>\n<li>\n<p>CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!</p>\n<ul>\n<li>could throw an error if it expects this to have some other method or whatever that doesn't exist</li>\n<li>you could also overwrite values or assign values to exist in a space where they should not exist</li>\n</ul>\n</li>\n<li>\n<p>if you call a function as a callback, it will set <code>this</code> to be the outer function itself, even if the function you were calling is a method that was called on a particular object</p>\n<p>```javascript</p>\n<p>let cat = {</p>\n<p>purr: function () {</p>\n<p>console.log(\"meow\");</p>\n<p>},</p>\n<p>purrMore: function () {</p>\n<p>this.purr();</p>\n<p>},</p>\n<p>};</p>\n</li>\n</ul>\n<p>global.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function</p>\n<p>```</p>\n<ul>\n<li>we can use strict mode with <code>\"use strict\";</code> this will prevent you from accessing the global object with <code>this</code> in functions, so if you try to call <code>this</code> in the global context and change a value, you will get a type error, and the things you try to access will be undefined</li>\n</ul>\n<h3>POJOs</h3>\n<h4>1. Label variables as either Primitive vs. Reference</h4>\n<p>Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.</p>\n<ul>\n<li>Boolean - Primitive</li>\n<li>Null - Primitive</li>\n<li>Undefined - Primitive</li>\n<li>Number - Primitive</li>\n<li>String - Primitive</li>\n<li>Array - Reference</li>\n<li>Object - Reference</li>\n<li>Function - Reference</li>\n</ul>\n<h4>2. Identify when to use . vs [] when accessing values of an object</h4>\n<pre><code class=\"language-javascript\">let obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);\n</code></pre>\n<h4>3. Write an object literal with a variable key using interpolation</h4>\n<pre><code class=\"language-javascript\">let keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);\n</code></pre>\n<h4>4. Use the obj[key] !== undefined pattern to check if a given variable that contains a key exists in an object</h4>\n<pre><code class=\"language-javascript\">function doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false\n</code></pre>\n<h4>5. Utilize Object.keys and Object.values in a function</h4>\n<pre><code class=\"language-javascript\">function printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));\n</code></pre>\n<h4>6. Iterate through an object using a for in loop</h4>\n<pre><code class=\"language-javascript\">let player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));\n</code></pre>\n<h4>7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments</h4>\n<pre><code class=\"language-javascript\">function restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0\n</code></pre>\n<h4>8. Use ...spread syntax for Object literals and Array literals</h4>\n<pre><code class=\"language-javascript\">let numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);\n</code></pre>\n<h4>9. Destructure an array to reference specific elements</h4>\n<pre><code class=\"language-javascript\">let arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);\n</code></pre>\n<h4>10. Destructure an object to reference specific values</h4>\n<pre><code class=\"language-javascript\">let me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);\n</code></pre>\n<h4>11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array</h4>\n<pre><code class=\"language-javascript\">function charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));\n</code></pre>\n<h3></h3>\n<h3>Review of Concepts</h3>\n<h4>1. Identify the difference between const, let, and var declarations</h4>\n<h4>2. Explain the difference between const, let, and var declarations</h4>\n<pre><code class=\"language-javascript\">var a = 'a';\n</code></pre>\n<ul>\n<li><code>var</code> is the historical keyword used for variable declaration.</li>\n<li><code>var</code> declares variables in function scope, or global scope if not inside a function.</li>\n<li>We consider <code>var</code> to be <em>deprecated</em> and it is never used in this course.</li>\n</ul>\n<pre><code class=\"language-javascript\">let b = 'b';\n</code></pre>\n<ul>\n<li><code>let</code> is the keyword we use most often for variable declaration.</li>\n<li><code>let</code> declares variables in block scope.</li>\n<li>variables declared with <code>let</code> are re-assignable.</li>\n</ul>\n<pre><code class=\"language-javascript\">const c = 'c';\n</code></pre>\n<ul>\n<li><code>const</code> is a specialized form of <code>let</code> that can only be used to <strong>initialize</strong> a variable.</li>\n<li>Except when it is declared, you cannot assign to a <code>const</code> variable.</li>\n<li><code>const</code> scopes variables the same way that <code>let</code> does.</li>\n</ul>\n<h4>3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining</h4>\n<p>Consider this <code>run</code> function, inside which <code>foo</code> and <code>bar</code> have <code>function scope</code>. <code>i</code> and <code>baz</code> are scoped to the block expression.</p>\n<pre><code class=\"language-javascript\">// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();\n</code></pre>\n<p>Notice that referencing <code>baz</code> from outside it's block results in JavaScript throwing a ReferenceError.</p>\n<p>Consider this <code>run</code> function, inside of which <code>foo</code> has <code>function scope</code>.</p>\n<pre><code class=\"language-javascript\">function run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();\n</code></pre>\n<p>Consider this <code>func1</code> function and it's nested scopes.</p>\n<pre><code class=\"language-javascript\">// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}\n</code></pre>\n<h4>6. Implement a closure and explain how the closure effects scope</h4>\n<pre><code class=\"language-javascript\">const adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;\n</code></pre>\n<h4>4. Define an arrow function</h4>\n<pre><code class=\"language-javascript\">const returnValue = (val) => val;\n</code></pre>\n<p>This simple construct will create a function that accepts <code>val</code> as a parameter, and returns <code>val</code> immediately. We do not need to type <code>return val</code>, because this is a single-line function.</p>\n<p>Identically, we could write</p>\n<pre><code class=\"language-javascript\">const returnValue = (val) => {\n    return val;\n};\n</code></pre>\n<h4>5. Given an arrow function, deduce the value of <code>this</code> without executing the code</h4>\n<pre><code class=\"language-javascript\">function fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);\n</code></pre>\n<p>If we use a <em>function declaration</em> style function, the <code>this</code> variable is set to the <code>global</code> object (i.e. <code>Object [global]</code> in Node.JS and <code>Window</code> in your browser).</p>\n<pre><code class=\"language-javascript\">const adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);\n</code></pre>\n<p>In this example, we use a <em>fat arrow</em> style function. Note that when we declare a funciton like this <code>this</code> becomes</p>\n<h4>7. Define a method that references this on an object literal</h4>\n<pre><code class=\"language-javascript\">const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());\n</code></pre>\n<h4>8. Utilize the built in Function#bind on a callback to maintain the context of <code>this</code></h4>\n<pre><code class=\"language-javascript\">const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms\n</code></pre>\n<h4>9. Given a code snippet, identify what <code>this</code> refers to</h4>\n<pre><code class=\"language-javascript\">function Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');\n</code></pre>"},{"url":"/blog/awesome-graphql/","relativePath":"blog/awesome-graphql.md","relativeDir":"blog","base":"awesome-graphql.md","name":"awesome-graphql","frontmatter":{"title":"Awesome GraphQL","subtitle":"The Death Of REST","date":"2021-09-30","thumb_image_alt":"lorem-ipsum","excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post","thumb_image":"images/graphql.png","image":"images/graphql-f3b94d65.png"},"html":"<h2>Table of Contents\n\n</h2>\n<ul>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#spec\">Specification</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#community\">Community</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#meetups\">GraphQL Meetups</a></li>\n<li>\n<p><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib\">Libraries</a></p>\n<ul>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-js\">Javascript</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-ts\">Typescript</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-rb\">Ruby</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-php\">PHP</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-py\">Python</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-java\">Java</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-c\">C/C++</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-go\">Go</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-scala\">Scala</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-perl\">Perl</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-dotnet\">.NET</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-erlang\">Erlang</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-elixir\">Elixir</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-haskell\">Haskell</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-sql\">SQL</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-lua\">Lua</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-elm\">Elm</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-clojure\">Clojure</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-clojurescript\">ClojureScript</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-swift\">Swift</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-ocaml\">OCaml</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-rust\">Rust</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-r\">R</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-julia\">Julia</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-kotlin\">Kotlin</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-unity\">Unity</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#lib-crystal\">Crystal</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#tools\">Tools</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#services\">Services</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#databases\">Databases</a></li>\n<li>\n<p><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example\">Examples</a></p>\n<ul>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-js\">Javascript</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-ts\">Typescript</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-rb\">Ruby</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-go\">Go</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-scala\">Scala</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-python\">Python</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-elixir\">Elixir</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-php\">PHP</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#example-reasonml\">ReasonML</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#video\">Videos</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#blogs\">Blogs</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#post\">Posts</a></li>\n<li><a href=\"https://github.com/dhruv-kumar-jha/awesome-graphql#workshopper\">Workshoppers</a></li>\n</ul>\n<h2>Specification</h2>\n<ul>\n<li><a href=\"http://facebook.github.io/graphql/\">facebook/graphql</a> - Working Draft of the Specification for GraphQL created by Facebook.</li>\n</ul>\n<h2>Community</h2>\n<ul>\n<li><a href=\"https://graphql.slack.com/messages/general\">Slack</a> - Share and help people on the chat. Get your invite <a href=\"https://graphql-slack.herokuapp.com/\">here</a></li>\n<li><a href=\"https://webchat.freenode.net/?channels=#graphql\">#graphql on Freenode</a> - The official IRC channel for GraphQL</li>\n<li><a href=\"https://www.facebook.com/groups/795330550572866/\">Facebook</a> - Group for discussions, articles and knowledge sharing</li>\n<li><a href=\"https://twitter.com/search?q=%23GraphQL\">Twitter</a> - Use the hashtag <a href=\"https://twitter.com/search?q=%23GraphQL\">#graphql</a></li>\n<li><a href=\"https://stackoverflow.com/questions/tagged/graphql\">StackOverflow</a> - Questions and answers. Use the tag <a href=\"http://stackoverflow.com/questions/tagged/graphql\">graphql</a></li>\n<li><a href=\"https://github.com/APIs-guru/graphql-apis\">GraphQL APIs</a> - A collective list of public GraphQL APIs</li>\n<li><a href=\"https://graphql-world.com/\">GraphQL World</a> - The fastest growing community of GraphQL developers</li>\n</ul>\n<h2>GraphQL Meetups</h2>\n<ul>\n<li><a href=\"https://www.meetup.com/graphql-berlin/\">Berlin</a></li>\n<li><a href=\"https://www.meetup.com/es-ES/GraphQL-BA/\">Buenos Aires</a></li>\n<li><a href=\"https://www.meetup.com/DFW-GraphQL-Meetup/\">Dallas-Fort Worth</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-Istanbul/\">Istanbul</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-London/\">London</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-Melbourne/\">Melbourne</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-Munich/\">Munich</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-NYC/\">New York City</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-SF/\">San Francisco</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-Sydney/\">Sydney</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-TLV/\">Tel Aviv</a></li>\n<li><a href=\"https://www.meetup.com/GraphQL-Toronto/\">Toronto</a></li>\n</ul>\n<h2>Libraries</h2>\n<h3>JavaScript Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/graphql/graphql-js\">GraphQL.js</a> - A reference implementation of GraphQL for JavaScript.</li>\n<li><a href=\"https://github.com/graphql/express-graphql\">express-graphql</a> - GraphQL Express Middleware.</li>\n<li><a href=\"https://github.com/chentsulin/koa-graphql\">koa-graphql</a> - GraphQL Koa Middleware.</li>\n<li><a href=\"https://github.com/SimonDegraeve/hapi-graphql\">hapi-graphql</a> - Create a GraphQL HTTP server with Hapi.</li>\n<li><a href=\"https://github.com/graphql/codemirror-graphql\">codemirror-graphql</a> - GraphQL mode and helpers for CodeMirror.</li>\n<li><a href=\"https://github.com/devknoll/graphql-schema\">graphql-schema</a> - Create GraphQL schemas with a fluent/chainable interface.</li>\n<li><a href=\"https://github.com/mickhansen/graphql-sequelize\">graphql-sequelize</a> - Sequelize helpers for GraphQL.</li>\n<li><a href=\"https://github.com/Glavin001/graphql-sequelize-crud\">graphql-sequelize-crud</a> - Automatically generate queries and mutations from Sequelize models.</li>\n<li><a href=\"https://github.com/RisingStack/graffiti\">graffiti</a> - Node.js GraphQL ORM.</li>\n<li><a href=\"https://github.com/RisingStack/graffiti-mongoose\">graffiti-mongoose</a> - Mongoose (MongoDB) adapter for graffiti (Node.js GraphQL ORM).</li>\n<li><a href=\"https://github.com/ooflorent/babel-plugin-graphql\">babel-plugin-graphql</a> - Babel plugin that compile GraphQL tagged template strings.</li>\n<li><a href=\"https://github.com/gyzerok/adrenaline\">adrenaline</a> - React bindings for Redux with Relay in mind.</li>\n<li><a href=\"https://github.com/brysgo/graphql-bookshelf\">graphql-bookshelf</a> - Some help defining GraphQL schema around BookshelfJS models.</li>\n<li><a href=\"https://github.com/weyoss/graphql-bookshelfjs\">graphql-bookshelfjs</a> - A simple bridge between your graphql queries and your bookshelf models, perform batched and optimised queries.</li>\n<li><a href=\"https://github.com/matthewmueller/graph.ql\">graph.ql</a> - Faster and simpler technique for creating and querying GraphQL schemas.</li>\n<li><a href=\"https://github.com/kennetpostigo/react-reach\">react-reach</a> - A library to communicate with Graphql through Redux</li>\n<li><a href=\"https://github.com/kadirahq/lokka\">Lokka</a> - Simple JavaScript client for GraphQL, which you can use anywhere.</li>\n<li><a href=\"http://strapi.io/documentation/graphql\">Strapi</a> - Open-source Node.js framework that supports \"GraphQL\" out of the box.</li>\n<li><a href=\"https://github.com/larsbs/graysql\">GraysQL</a> - A GraphQL manager and loader.</li>\n<li><a href=\"https://github.com/larsbs/graysql-orm-loader\">graysql-orm-loader</a> - A GraysQL extension to load a GraphQL schema from an ORM.</li>\n<li><a href=\"https://github.com/almilo/annotated-graphql\">Annotated GraphQL</a> - Proof of Concept for annotations in GraphQL (i.e.: transform an existing REST api into a GraphQL endpoint).</li>\n<li><a href=\"https://github.com/apollographql/apollo-client\">Apollo Client</a> - A well-documented GraphQL client. Has React and Angular bindings.</li>\n<li><a href=\"https://github.com/apollographql/graphql-tools\">graphql-tools</a> - Tool library for building and maintaining GraphQL-JS servers.</li>\n<li><a href=\"https://github.com/apollographql/graphql-anywhere\">graphql-anywhere</a> - Run a GraphQL query anywhere, against any data, with no schema.</li>\n<li><a href=\"https://github.com/apollographql/graphql-tag\">graphql-tag</a> - A JavaScript template literal tag that parses GraphQL queries.</li>\n<li><a href=\"https://github.com/julienvincent/modelizr\">modelizr</a> - A library for simplifying the process of writing GraphQL queries, mocking them and normalizing their responses.</li>\n<li><a href=\"https://github.com/Akryum/vue-apollo\">vue-apollo</a> - Vue integration for apollo.</li>\n<li><a href=\"https://github.com/fenos/graphql-thinky\">graphql-thinky</a> - Build an optimized GraphQL schema from Thinky RethinkDB models.</li>\n<li><a href=\"https://github.com/MikeBild/graphql-pouch\">graphql-pouch</a> - A GraphQL-API runtime on top of PouchDB created by GraphQL shorthand notation as a self contained service with CouchDB synchronization.</li>\n<li><a href=\"https://github.com/almilo/gql-tools\">gql-tools</a> - Tool library with CLI for schema generation and manipulation.</li>\n<li><a href=\"https://github.com/excitement-engineer/graphql-iso-date\">graphql-iso-date</a> - A GraphQL date scalar type to be used with GraphQL.js. This scalar represents a date in the ISO 8601 format YYYY-MM-DD.</li>\n<li><a href=\"https://github.com/nodkz/graphql-compose\">graphql-compose</a> - Tool which allows you to construct flexible graphql schema from different data sources via plugins.</li>\n<li><a href=\"https://github.com/mwilliamson/node-graphjoiner\">node-graphjoiner</a> - Create GraphQL APIs using joins, SQL or otherwise.</li>\n<li><a href=\"https://github.com/gucheen/FetchQL\">FetchQL</a> - GraphQL query client with Fetch</li>\n<li><a href=\"https://github.com/stems/join-monster\">Join Monster</a> - A GraphQL-to-SQL query execution layer for batch data fetching.</li>\n<li><a href=\"https://github.com/graphql-community/create-graphql\">Create-GraphQL</a> - Command-line utility to build production-ready servers with GraphQL.</li>\n<li><a href=\"https://github.com/lucasbento/graphql-pokemon\">GraphQL-Pokémon</a> - Get information of a Pokémon with GraphQL!</li>\n<li><a href=\"https://github.com/graphql-factory\">graphql-factory</a> - Create GraphQL types from JSON definitions</li>\n<li><a href=\"https://chrome.google.com/webstore/detail/chromeiql/fkkiamalmpiidkljmicmjfbieiclmeij\">ChromeiQL</a> - Chrome extension to use GraphiQL anywhere</li>\n<li><a href=\"https://github.com/ejoebstl/graphql-auto-mutation\">graphql-auto-mutation</a> - Automatically generates functions for mutations specified in a GraphQL schema.</li>\n<li><a href=\"https://github.com/graphitejs/graphitejs\">GraphiteJS</a> - Full stack GraphQL framework.</li>\n<li><a href=\"https://github.com/tallyb/loopback-graphql\">loopback-graphql</a> - GraphQL Server for Loopback.</li>\n<li><a href=\"https://github.com/octet-stream/parasprite\">parasprite</a> - Describe your GraphQL schema using chainable interface.</li>\n<li><a href=\"https://github.com/f/graphql.js\">GraphQL.js</a> - JavaScript GraphQL Client for Browser and Node.js Usage</li>\n<li><a href=\"https://github.com/arangodb/graphql-sync\">graphql-sync</a> - Promise-free wrapper to GraphQL.js for synchronous environments</li>\n<li><a href=\"https://github.com/apollographql/apollo-fetch\">apollo-fetch</a> - Lightweight GraphQL client that supports custom fetch functions, middleware, and afterware</li>\n<li><a href=\"https://github.com/spikenail/spikenail\">Spikenail</a> - Node.js framework for building GraphQL API almost without coding.</li>\n<li><a href=\"https://github.com/AEB-labs/graphql-weaver\">graphql-weaver</a> - A tool to combine, link and transform GraphQL schemas; combine multiple GraphQL servers into one API.</li>\n<li><a href=\"https://github.com/APIs-guru/graphql-lodash\">graphql-lodash</a> - Data manipulation for GraphQL queries with lodash syntax.</li>\n<li><a href=\"https://github.com/apollographql/apollo-angular\">apollo-angular</a> - Angular integration for Apollo.</li>\n<li><a href=\"https://github.com/lucasconstantino/graphql-resolvers\">graphql-resolvers</a> - Resolver composition library for GraphQL.</li>\n<li><a href=\"https://github.com/thebigredgeek/apollo-resolvers\">apollo-resolvers</a> - Expressive and composable resolvers for Apollo Server and graphql-tools.</li>\n<li><a href=\"https://github.com/thebigredgeek/apollo-errors\">apollo-errors</a> - Machine-readable custom errors for Apollo Server.</li>\n<li><a href=\"https://github.com/helfer/graphql-disable-introspection\">graphql-disable-introspection</a> - Graphql Disable Introspection</li>\n<li><a href=\"https://github.com/arackaf/mongo-graphql-starter\">mongo-graphql-starter</a> - Flexible and robust Mongo based resolvers for Node.</li>\n<li><a href=\"https://github.com/imolorhe/altair\">altair-express-middleware</a> - An express middleware for mounting an instance of Altair GraphQL client.</li>\n<li><a href=\"https://github.com/pa-bru/graphql-cost-analysis\">graphql-cost-analysis</a> - A Graphql query cost analyzer.</li>\n</ul>\n<h5>Relay Related</h5>\n<ul>\n<li><a href=\"https://github.com/facebook/relay\">relay</a> - Relay is a JavaScript framework for building data-driven React applications.</li>\n<li><a href=\"https://github.com/graphql/graphql-relay-js\">graphql-relay-js</a> - A library to help construct a graphql-js server supporting react-relay.</li>\n<li><a href=\"https://github.com/MattMcFarland/sequelize-relay\">sequelize-relay</a> - Serverside library that connects sequelize and graphql-relay-js together.</li>\n<li><a href=\"https://github.com/graphcool/babel-plugin-react-relay\">babel-plugin-react-relay</a> - Babel Plugin for Relay with support for JSON &#x26; graphql-js schemas and URL endpoints.</li>\n<li><a href=\"https://www.npmjs.com/package/babel-relay-plugin\">babel-relay-plugin</a> - Babel Relay Plugin for transpiling GraphQL queries for use with Relay.</li>\n<li><a href=\"https://github.com/relay-tools/react-router-relay\">react-router-relay</a> - Relay integration for React Router.</li>\n<li><a href=\"https://github.com/relay-tools/relay-local-schema\">relay-local-schema</a> - Use Relay without a GraphQL server.</li>\n<li><a href=\"https://github.com/acdlite/relay-sink\">relay-sink</a> - Use Relay to fetch and store data outside of a React component.</li>\n<li><a href=\"https://github.com/acdlite/recompose/tree/master/src/packages/recompose-relay\">recompose-relay</a> - Recompose helpers for Relay.</li>\n<li><a href=\"https://github.com/larsbs/graysql#Graylay\">Graylay</a> - A GraysQL extension to create a Relay compatible Schema.</li>\n<li><a href=\"https://github.com/apollographql/apollo-client\">Apollo Client</a> - A simple alternative to Relay, comes with React and Angular bindings.</li>\n<li><a href=\"https://github.com/nodkz/react-relay-network-layer\">react-relay-network-layer</a> - A network layer for Relay with query batching and middleware support (urlThunk, retryThunk, auth, defer and other).</li>\n<li><a href=\"https://github.com/edvinerikson/relay-subscriptions\">relay-subscriptions</a> - Subscription support for Relay.</li>\n<li><a href=\"https://github.com/alex-cory/portfolio\">Portfolio Relay Example</a> - An example website that fetches data from various apis and uses Relay and GraphQL to feed the data to React components!</li>\n<li><a href=\"https://github.com/lucasbento/react-relay-pokemon\">Relay Pokédex</a> - Project using GraphQL Pokémon to show how powerful Relay is.</li>\n<li><a href=\"https://github.com/ntkme/vue-relay\">vue-relay</a> - A framework for building GraphQL-driven Vue.js applications.</li>\n</ul>\n<h3>TypeScript Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/19majkel94/type-graphql\">TypeGraphQL</a> - Create GraphQL schema and resolvers with TypeScript, using classes and decorators!</li>\n<li><a href=\"http://vesper-framework.com/\">Vesper</a> - NodeJS framework that helps you to create scalable, maintainable, extensible, declarative and fast GraphQL-based server applications.</li>\n<li><a href=\"https://github.com/calebmer/graphql-strong\">graphql-strong</a> - Define your GraphQL schemas with confidence that your values are correct.</li>\n<li><a href=\"https://github.com/3VLINC/graphql-to-typescript\">graphql-to-typescript</a> - Compiles GraphQL files into an importable typescript module with type definitions</li>\n<li><a href=\"https://github.com/Quramy/graphql-decorator\">graphql-decorator</a> - Helps to build GraphQL schema with TypeScript.</li>\n<li><a href=\"https://github.com/indigotech/graphql-schema-decorator\">graphql-schema-decorator</a> - This package makes possible the use of decorators to define a GraphQL schema.</li>\n<li><a href=\"https://github.com/vichyssoise/graphql-typescript\">graphql-typescript</a> - Define and build GraphQL Schemas using typed classes</li>\n<li><a href=\"https://github.com/prismake/typegql\">typegql</a> - Create GraphQL schema with type-safe class decorators.</li>\n</ul>\n<h3>Ruby Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/rmosolgo/graphql-ruby\">graphql-ruby</a> - Ruby implementation of Facebook's GraphQL.</li>\n<li><a href=\"https://github.com/Shopify/graphql-parser\">graphql-parser</a> - A small ruby gem wrapping the libgraphqlparser C library for parsing GraphQL.</li>\n<li><a href=\"https://github.com/github/graphql-client\">graphql-client</a> - A Ruby library for declaring, composing and executing GraphQL queries.</li>\n<li><a href=\"https://github.com/Shopify/graphql-batch\">graphql-batch</a> - A query batching executor for the graphql gem.</li>\n<li><a href=\"https://github.com/exaspark/batch-loader\">batch-loader</a> – A powerful tool to avoid N+1 queries without extra dependencies or primitives.</li>\n<li><a href=\"https://github.com/exAspArk/graphql-guard\">graphql-guard</a> - A simple field-level authorization for the graphql gem.</li>\n</ul>\n<h3>PHP Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/webonyx/graphql-php\">graphql-php</a> - A PHP port of GraphQL reference implementation.</li>\n<li><a href=\"https://github.com/ivome/graphql-relay-php\">graphql-relay-php</a> - Relay helpers for GraphQL &#x26; PHP.</li>\n<li><a href=\"https://github.com/api-platform/api-platform\">API Platform</a> - API framework compatible with Symfony having native GraphQL support.</li>\n<li><a href=\"https://github.com/Folkloreatelier/laravel-graphql\">laravel-graphql</a> - Facebook GraphQL for Laravel 5.</li>\n<li><a href=\"https://github.com/nuwave/laravel-graphql-relay\">laravel-graphql-relay</a> - A Laravel library to help construct a server supporting react-relay.</li>\n<li><a href=\"https://github.com/4rthem/graphql-mapper\">graphql-mapper</a> - This library allows to build a GraphQL schema based on your model.</li>\n<li><a href=\"https://github.com/suribit/GraphQLBundle\">graphql-bundle</a> - GraphQL Bundle for Symfony 2.</li>\n<li><a href=\"https://github.com/overblog/GraphQLBundle\">overblog/graphql-bundle</a> - This bundle provides tools to build a complete GraphQL server in your Symfony App. Supports react-relay.</li>\n<li><a href=\"https://github.com/Youshido/GraphQL\">GraphQL</a> – Well documented PHP implementation with no dependencies.</li>\n<li><a href=\"https://github.com/Youshido/GraphQLBundle\">GraphQL Symfony Bundle</a> – GraphQL Bundle for the Symfony 3 (supports 2.6+).</li>\n<li><a href=\"https://github.com/wp-graphql/wp-graphql\">WPGraphQL</a> - WordPress plugin that exposes a Relay compliant GraphQL endpoint</li>\n<li><a href=\"https://github.com/tim-field/graphql-wp\">graphql-wp</a> – a WordPress plugin that exposes a GraphQL endpoint.</li>\n<li><a href=\"https://www.symfony.fi/entry/graphql-bundle-adds-protocol-support-to-ez-platform-symfony-cms\">eZ Platform GraphQL Bundle</a> - GraphQL Bundle for the eZ Platform Symfony CMS.</li>\n<li><a href=\"https://github.com/stefanorg/graphql-middleware\">GraphQL Middleware</a> - GraphQL Psr7 Middleware</li>\n<li><a href=\"https://github.com/stefanorg/zend-expressive-graphiql\">Zend Expressive GraphiQL Extension</a> - GraphiQL extension for zend expressive</li>\n<li><a href=\"https://github.com/digiaonline/graphql-php\">GraphQL for PHP7</a> - A batteries-included, standard-compliant and easy to work with implementation of the GraphQL specification in PHP7 (based on the reference implementation).</li>\n</ul>\n<h3>Python Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/tryolabs/graphql-parser\">graphql-parser</a> - GraphQL parser for Python.</li>\n<li><a href=\"https://github.com/graphql-python/graphql-core\">graphql-core</a> - GraphQL implementation for Python.</li>\n<li><a href=\"https://github.com/graphql-python/graphql-relay-py\">graphql-relay-py</a> - A library to help construct a graphql-py server supporting react-relay.</li>\n<li><a href=\"https://github.com/tallstreet/graphql-parser-python\">graphql-parser-python</a> - A python wrapper around libgraphqlparser.</li>\n<li><a href=\"https://github.com/graphql-python/graphene\">graphene</a> - A package for creating GraphQL schemas/types in a Pythonic easy way.</li>\n<li><a href=\"https://github.com/graphql-python/graphene-gae\">graphene-gae</a> - Adds GraphQL support to Google AppEngine (GAE).</li>\n<li><a href=\"https://github.com/graphql-python/flask-graphql\">flask-graphql</a> - Adds GraphQL support to your Flask application.</li>\n<li><a href=\"https://github.com/graphcool/python-graphql-client\">python-graphql-client</a> - Simple GraphQL client for Python 2.7+</li>\n<li><a href=\"https://github.com/healx/python-graphjoiner\">python-graphjoiner</a> - Create GraphQL APIs using joins, SQL or otherwise.</li>\n<li><a href=\"https://github.com/graphql-python/graphene-django\">graphene-django</a> - A Django integration for Graphene.</li>\n</ul>\n<h3>Java Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/graphql-java/graphql-java\">graphql-java</a> - GraphQL Java implementation.</li>\n<li><a href=\"https://github.com/graphql-java/graphql-java-type-generator\">graphql-java-type-generator</a> - Auto-generates types for use with GraphQL Java</li>\n<li><a href=\"https://github.com/bpatters/schemagen-graphql\">schemagen-graphql</a> - Schema generation and execution package that turns POJO's into a GraphQL Java queryable set of objects. Enables exposing any service as a GraphQL service using Annotations.</li>\n<li><a href=\"https://github.com/graphql-java/graphql-java-annotations\">graphql-java-annotations</a> - Provides annotations-based syntax for schema definition with GraphQL Java.</li>\n<li><a href=\"https://github.com/oembedler/spring-graphql-common\">spring-graphql-common</a> - Spring Framework GraphQL Library.</li>\n<li><a href=\"https://github.com/graphql-java/graphql-spring-boot\">graphql-spring-boot</a> - GraphQL and GraphiQL Spring Framework Boot Starters.</li>\n<li><a href=\"https://github.com/neo4j-graphql/neo4j-graphql\">neo4j-graphql</a> - GraphQL bindings for Neo4j, generates and runs Cypher.</li>\n<li><a href=\"https://github.com/engagingspaces/vertx-graphql-service-discovery\">vertx-graphql-service-discovery</a> - Asynchronous GraphQL service discovery and querying for your microservices.</li>\n<li><a href=\"https://github.com/engagingspaces/vertx-dataloader\">vertx-dataloader</a> - Port of Facebook DataLoader for efficient, asynchronous batching and caching in clustered GraphQL environments</li>\n<li><a href=\"https://github.com/Billy-Bichon/LiveGQL\">LiveGQL</a> - GraphQL subscription client in Java.</li>\n<li><a href=\"https://github.com/ebridges/rdbms-to-graphql\">rdbms-to-graphql</a> - A Java CLI program that generates a GraphQL schema from a JDBC data source.</li>\n<li><a href=\"https://github.com/google/rejoiner\">Rejoiner</a> - Generates a GraphQL schema based on one or more gRPC microservices, or any other Protobuf source.</li>\n<li><a href=\"https://github.com/leangen/graphql-spqr\">graphql-spqr</a> - GraphQL SPQR aims to make it dead simple to add a GraphQL API to any Java project. It works by dynamically generating a GraphQL schema from Java code.</li>\n</ul>\n<h3>C/C++ Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/graphql/libgraphqlparser\">libgraphqlparser</a> - A GraphQL query parser in C++ with C and C++ APIs.</li>\n</ul>\n<h3>Go Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/graphql-go/graphql\">graphql</a> - An implementation of GraphQL for Go follows graphql-js</li>\n<li><a href=\"https://github.com/machinebox/graphql\">machinebox/graphql</a> - Simple low-level GraphQL client for Go</li>\n<li><a href=\"https://github.com/graphql-go/relay\">graphql-relay-go</a> - A Go/Golang library to help construct a server supporting react-relay.</li>\n<li><a href=\"https://github.com/neelance/graphql-go\">graphql-go</a> - GraphQL server with a focus on ease of use.</li>\n<li><a href=\"https://github.com/tecbot/c-graphqlparser\">c-graphqlparser</a> - Go-gettable version of the libgraphqlparser C library for parsing GraphQL.</li>\n<li><a href=\"https://github.com/tallstreet/graphql\">tallstreet-graphql</a> - GraphQL parser and server for Go that leverages libgraphqlparser</li>\n<li><a href=\"https://github.com/playlyfe/go-graphql\">go-graphql</a> - A powerful GraphQL server implementation for Golang</li>\n<li><a href=\"https://github.com/nicksrandall/dataloader\">dataloader</a> - Implementation of Facebook's DataLoader in Golang</li>\n</ul>\n<h3>Scala Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/sangria-graphql/sangria\">sangria</a> - Scala GraphQL client and server library.</li>\n<li><a href=\"https://github.com/sangria-graphql/sangria-relay\">sangria-relay</a> - Sangria Relay Support.</li>\n<li><a href=\"https://github.com/hrosenhorn/graphql-scala\">graphql-scala</a> - An attempt to get GraphQL going with Scala.</li>\n</ul>\n<h3>Perl Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/CurtTilmes/Perl6-GraphQL\">Perl6-GraphQL</a> - GraphQL for Perl6.</li>\n<li><a href=\"https://github.com/graphql-perl/graphql-perl\">graphql-perl</a> - GraphQL for Perl5.</li>\n</ul>\n<h3>.NET Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/graphql-dotnet/graphql-dotnet\">graphql-dotnet</a> - GraphQL for .NET.</li>\n<li><a href=\"https://github.com/graphql-dotnet/conventions\">Conventions</a> - Reflection-based schema generation for .NET.</li>\n<li><a href=\"https://github.com/ckimes89/graphql-net\">graphql-net</a> - GraphQL to IQueryable for .NET</li>\n<li><a href=\"https://github.com/fsprojects/FSharp.Data.GraphQL\">FSharp.Data.GraphQL</a> - FSharp GraphQL.</li>\n<li><a href=\"https://github.com/graphql-dotnet/graphql-client\">GraphQL.Client</a> - GraphQL Client for .NET.</li>\n</ul>\n<h3>Erlang Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/shopgun/graphql-erlang\">graphql-erlang</a> - Pure Erlang implementation with IDL and pattern-matching.</li>\n</ul>\n<h3>Elixir Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/absinthe-graphql/absinthe\">absinthe-graphql</a> - Fully Featured Elixir GraphQL Library.</li>\n<li><a href=\"https://github.com/graphql-elixir/graphql\">graphql-elixir</a> - GraphQL Elixir.</li>\n<li><a href=\"https://github.com/graphql-elixir/plug_graphql\">plug_graphql</a> - Plug integration for GraphQL Elixir.</li>\n<li><a href=\"https://github.com/graphql-elixir/graphql_relay\">graphql_relay</a> - Relay helpers for GraphQL Elixir.</li>\n<li><a href=\"https://github.com/graphql-elixir/graphql_parser\">graphql_parser</a> - Elixir bindings for <a href=\"https://github.com/graphql/libgraphqlparser\">libgraphqlparser</a></li>\n<li><a href=\"https://github.com/asonge/graphql\">graphql</a> - Elixir GraphQL parser.</li>\n<li><a href=\"https://github.com/peburrows/plot\">plot</a> - GraphQL parser and resolver for Elixir.</li>\n</ul>\n<h3>Haskell Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/jdnavarro/graphql-haskell\">graphql-haskell</a> - GraphQL AST and parser for Haskell.</li>\n</ul>\n<h3>SQL Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/solidsnack/GraphpostgresQL\">GraphpostgresQL</a> - GraphQL for Postgres.</li>\n<li><a href=\"https://github.com/rexxars/sql-to-graphql\">sql-to-graphql</a> - Generate a GraphQL API based on your SQL database structure.</li>\n<li><a href=\"https://github.com/graphile/postgraphile\">PostGraphile</a> - A GraphQL API created by reflection over a PostgreSQL schema.</li>\n<li><a href=\"https://github.com/ebridges/rdbms-to-graphql\">rdbms-to-graphql</a> - A Java CLI program that generates a GraphQL schema from a JDBC data source.</li>\n<li><a href=\"https://github.com/graphcool/prisma\">Prisma</a> - Turn your database into a GraphQL API. Prisma lets you design your data model and have a production ready GraphQL API online in minutes.</li>\n<li><a href=\"https://github.com/bradleyboy/tuql\">tuql</a> - Automatically create a GraphQL server from any sqlite database.</li>\n</ul>\n<h3>Lua Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/bjornbytes/graphql-lua\">graphql-lua</a> - GraphQL for Lua.</li>\n</ul>\n<h3>Elm Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/jamesmacaulay/elm-graphql\">jamesmacaulay/elm-graphql</a> - Client library that lets you build GraphQL queries in Elm.</li>\n<li><a href=\"https://github.com/ghivert/elm-graphql\">ghivert/elm-graphql</a> - Client library that lets you build GraphQL queries in Elm with your own decoders.</li>\n<li><a href=\"https://github.com/jahewson/elm-graphql\">jahewson/elm-graphql</a> - Command-line tool that generates Elm code from queries in .graphql files.</li>\n</ul>\n<h3>Clojure Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/tendant/graphql-clj\">graphql-clj</a> - A Clojure library designed to provide GraphQL implementation.</li>\n<li><a href=\"https://github.com/walmartlabs/lacinia\">lacinia</a> - GraphQL implementation in pure Clojure.</li>\n<li><a href=\"https://github.com/alumbra/alumbra\">alumbra</a> - Simple &#x26; Elegant GraphQL for Clojure!</li>\n</ul>\n<h3>ClojureScript Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/johanatan/speako\">speako</a> - A ClojureScript/NPM compiler for GraphQL Schema Language.</li>\n<li><a href=\"https://github.com/Vincit/venia\">venia</a> - A Clojure(Script) GraphQL query generation</li>\n</ul>\n<h3>Swift Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/GraphQLSwift/GraphQL\">GraphQL</a> - Build GraphQL APIs with Swift.</li>\n<li><a href=\"https://github.com/GraphQLSwift/Graphiti\">Graphiti</a> - Build Swiftier GraphQL APIs with Swift.</li>\n<li><a href=\"https://github.com/dbart01/Gryphin\">Gryphin</a> - Type-safe GraphQL client for iOS and MacOS written in Swift.</li>\n<li><a href=\"https://github.com/apollographql/apollo-ios\">Apollo-iOS</a> - Strongly typed, code-generating, caching GraphQL client for Swift.</li>\n<li><a href=\"https://github.com/florianmari/LiveGQL\">LiveGQL</a> - GraphQL Subscription client in Swift.</li>\n</ul>\n<h3>OCaml Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/andreas/ocaml-graphql-server\">ocaml-graphql-server</a> - GraphQL servers in OCaml.</li>\n</ul>\n<h3>Rust Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/mhallin/juniper\">juniper</a> - GraphQL server library for Rust.</li>\n</ul>\n<h3>R Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/ropensci/graphql\">graphql</a> - Bindings to libgraphqlparser for R.</li>\n<li><a href=\"https://github.com/schloerke/gqlr\">gqlr</a> - GraphQL server package for R.</li>\n<li><a href=\"https://github.com/ropensci/ghql\">ghql</a> - GraphQL client package for R.</li>\n</ul>\n<h3>Julia Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/codeneomatrix/Diana.jl\">Diana.jl</a> - Julia client for GraphQL.</li>\n</ul>\n<h3>Kotlin Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/prestongarno/ktq\">ktq</a> - Kotlin gradle plugin SDL type generator &#x26; runtime client</li>\n</ul>\n<h3>Unity Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/Gazuntype/graphQL-client-unity\">graphQL-client-unity</a> - A Unity client for GraphQL.</li>\n</ul>\n<h3>Crystal Libraries</h3>\n<ul>\n<li><a href=\"https://github.com/ziprandom/graphql-crystal\">graphql-crystal</a> - A graphql implementation for Crystal</li>\n</ul>\n<h2>Tools</h2>\n<ul>\n<li><a href=\"https://github.com/graphql/graphiql\">graphiql</a> - An in-browser IDE for exploring GraphQL.</li>\n<li><a href=\"https://github.com/graphcool/graphql-playground\">GraphQL Playground</a> - GraphQL IDE that supports multi-column schema docs, tabs, query history, configuration of HTTP headers and GraphQL Subscriptions.</li>\n<li><a href=\"https://github.com/skevy/graphiql-app\">GraphiQL.app</a> - A light, Electron-based wrapper around GraphiQL.</li>\n<li><a href=\"https://github.com/Macroz/GraphQLviz\">GraphQLviz</a> - GraphQLviz marries GraphQL (schemas) with Graphviz.</li>\n<li><a href=\"https://github.com/sheerun/graphqlviz\">graphqlviz</a> - GraphQL API visualizer in Node.js</li>\n<li><a href=\"http://facebook.github.io/relay/prototyping/playground.html\">Relay Playground</a></li>\n<li><a href=\"http://dferber90.github.io/graphql-ast-explorer/\">GraphQL AST Explorer</a> - Explore the AST of a GraphQL document interactively</li>\n<li><a href=\"https://www.graphqlhub.com/\">GraphQLHub</a> - Query public API's schemas (e.g. Reddit, Twitter, Github, etc) using GraphiQL</li>\n<li><a href=\"https://github.com/jimkyndemeyer/js-graphql-intellij-plugin/\">js-graphql-intellij-plugin</a> - GraphQL language support for IntelliJ IDEA and WebStorm, including Relay.QL tagged templates in JavaScript and TypeScript.</li>\n<li><a href=\"https://github.com/syrusakbary/gdom\">gdom</a> - DOM Traversing and Scraping using GraphQL.</li>\n<li><a href=\"https://github.com/almilo/annotated-graphql-server\">Annotated GraphQL Server</a> - Server for annotated GraphQL showing how to transform a REST api into a GraphQL endpoint with annotations.</li>\n<li><a href=\"http://nathanrandal.com/graphql-visualizer/\">Model Visualizer</a> - A small webapp that generates an ERD-like visualization of a GraphQL endpoint from an introspection query.</li>\n<li><a href=\"https://github.com/Ghirro/graphql-network\">GraphQL Network</a> - A chrome dev-tools extension for debugging GraphQL network requests.</li>\n<li><a href=\"https://github.com/apollographql/eslint-plugin-graphql\">eslint-plugin-graphql</a> - An ESLint plugin that checks your GraphQL strings against a schema.</li>\n<li><a href=\"https://astexplorer.net/\">AST Explorer</a> - Select \"GraphQL\" at the top, explore the GraphQL AST and highlight different parts by clicking in the query.</li>\n<li><a href=\"https://github.com/jparise/vim-graphql\">vim-graphql</a> - A Vim plugin that provides GraphQL file detection and syntax highlighting.</li>\n<li><a href=\"https://github.com/sarkistlt/graphql-auto-generating-cms\">GraphQL CMS</a> - Use your existing GraphQL schema to generate simple for use, fully functional CMS in a couple steps.</li>\n<li><a href=\"https://github.com/2fd/graphdoc\">graphdoc</a> - Static page generator for documenting GraphQL Schema.</li>\n<li><a href=\"https://github.com/orionsoft/atom-graphql-autocomplete\">graphql-autocomplete</a> - Autocomplete and lint from a GraphQL endpoint in Atom.</li>\n<li><a href=\"https://github.com/redound/graphql-ide\">GraphQL IDE</a> - An extensive IDE for exploring GraphQL API's.</li>\n<li><a href=\"https://github.com/yarax/swagger-to-graphql\">Swagger to GraphQL</a> - GraphQL types builder based on REST API described in Swagger. Allows to migrate to GraphQL from REST for 5 minutes</li>\n<li><a href=\"https://github.com/APIs-guru/graphql-voyager\">GraphQL Voyager</a> - Represent any GraphQL API as an interactive graph.</li>\n<li><a href=\"https://graphql-docs.com/\">GraphQL Docs</a> - Instantly create beautiful GraphQL API docs hosted online.</li>\n<li><a href=\"https://github.com/APIs-guru/graphql-faker\">GraphQL Faker</a> - 🎲 Mock or extend your GraphQL API with faked data. No coding required.</li>\n<li><a href=\"https://github.com/Quramy/ts-graphql-plugin\">ts-graphql-plugin</a> - A language service plugin complete and validate GraphQL query in TypeScript template strings.</li>\n<li><a href=\"https://launchpad.graphql.com/\">Apollo Launchpad</a> - Like JSFiddle for GraphQL server code, write and deploy a GraphQL API directly from your browser.</li>\n<li><a href=\"https://github.com/apollographql/apollo-tracing\">Apollo Tracing</a> - GraphQL extension that enables you to easily get resolver-level performance information as part of a GraphQL response.</li>\n<li><a href=\"https://github.com/imolorhe/altair\">Altair GraphQL Client</a> - A beautiful feature-rich GraphQL Client for all platforms.</li>\n<li><a href=\"https://github.com/abhiaiyer91/apollo-storybook-decorator\">Apollo Storybook Decorator</a> - Wrap your React Storybook stories with Apollo Client, provide mocks for isolated UI testing with GraphQL</li>\n<li><a href=\"https://github.com/Workpop/graphql-metrics\">GraphQL Metrics</a> - instrument GraphQL resolvers, logging response times and statuses (if there was an error or not) to the console as well as to InfluxDB.</li>\n<li><a href=\"https://github.com/Brbb/graphql-rover\">GraphQL Rover</a> - GraphQL schema interactive navigation, rearrange nodes, search and explore types and fields.</li>\n<li><a href=\"https://github.com/marmelab/json-graphql-server\">json-graphql-server</a> - Get a full fake GraphQL API with zero coding in less than 30 seconds, based on a JSON data file.</li>\n<li><a href=\"https://insomnia.rest/\">Insomnia</a> – An full-featured API client with first-party GraphQL query editor</li>\n<li><a href=\"https://github.com/sly777/ran\">RAN Toolkit</a> - Production-ready toolkit/boilerplate with support for GraphQL, SSR, Hot-reload, CSS-in-JS, caching, and more.</li>\n</ul>\n<h2>Databases</h2>\n<ul>\n<li><a href=\"https://www.arangodb.com/\">ArangoDB</a> - Multi-model database that supports GraphQL schemas in JavaScript inside the database.</li>\n<li><a href=\"https://dgraph.io/\">Dgraph</a> - Scalable, distributed, low latency, high throughput Graph database with a GraphQL like language (called <a href=\"https://docs.dgraph.io/query-language/\">GraphQL+</a>) as the query language. Dgrapqh can be queried with graphql by using <a href=\"https://github.com/dpeek/dgraphql\">dgraphql</a></li>\n</ul>\n<h2>Services</h2>\n<ul>\n<li><a href=\"https://graphcms.com/\">GraphCMS</a> - GraphQL based Headless Content Management System.</li>\n<li><a href=\"https://www.graph.cool/\">Graphcool</a> - Your own GraphQL backend in under 5 minutes. Works with every GraphQL client such as Relay and Apollo.</li>\n<li><a href=\"https://hasura.io/\">Hasura</a> - Create tables and get a GraphQL backend in under 60s. Works on top of Postgres that you can directly access. No initial knowledge of graphql required.</li>\n<li><a href=\"https://www.reindex.io/\">Reindex</a> - Instant GraphQL Backend for Your React Apps.</li>\n<li><a href=\"https://scaphold.io/\">Scaphold</a> - GraphQL as a service that includes API integrations such as Stripe and Mailgun.</li>\n<li><a href=\"https://tipe.io/\">Tipe</a> - Next Generation API-first CMS with a GraphQL or REST API. Stop letting your CMS decide how you build your apps.</li>\n<li><a href=\"https://aws.amazon.com/appsync/\">AWS AppSync</a> - Serverless GraphQL</li>\n</ul>\n<h2>Examples</h2>\n<h3>JavaScript Examples</h3>\n<ul>\n<li><a href=\"https://github.com/relayjs/relay-starter-kit\">relay-starter-kit</a> - Barebones starting point for a Relay application.</li>\n<li><a href=\"https://github.com/kriasoft/react-starter-kit\">react-starter-kit</a> - Isomorphic web app boilerplate (Node.js/Express, GraphQL, React)</li>\n<li><a href=\"https://github.com/kriasoft/nodejs-api-starter\">nodejs-api-starter</a> - Boilerplate and tooling for authoring data API backends with Node.js and GraphQL</li>\n<li><a href=\"https://github.com/graphql/swapi-graphql\">swapi-graphql</a> - A GraphQL schema and server wrapping <a href=\"http://swapi.co/\">swapi</a>.</li>\n<li><a href=\"https://github.com/RisingStack/graphql-server\">graphql-server</a> - GraphQL server with Mongoose (MongoDB) and Node.js.</li>\n<li><a href=\"https://github.com/clayallsopp/graphql-intro\">graphql-intro</a> - <a href=\"https://medium.com/the-graphqlhub/your-first-graphql-server-3c766ab4f0a2\">https://medium.com/the-graphqlhub/your-first-graphql-server-3c766ab4f0a2</a></li>\n<li><a href=\"https://github.com/jonsharratt/graphql-aws\">graphql-aws</a> - Amazon AWS GraphQL API Server.</li>\n<li><a href=\"https://github.com/RisingStack/graffiti-todo\">graffiti-todo</a> - Example Relay TodoMVC application using graffiti-mongoose.</li>\n<li><a href=\"https://gist.github.com/devknoll/8b274f1c5d05230bfade\">devknoll/gist:8b274f1c5d05230bfade</a></li>\n<li><a href=\"https://github.com/codefoundries/UniversalRelayBoilerplate\">UniversalRelayBoilerplate</a> Boilerplate + examples for React Native (iOS, Android), React (isomorphic, Material-UI), Relay, GraphQL, JWT, Node.js, Apache Cassandra.</li>\n<li><a href=\"https://github.com/vslinko/ripster/tree/master/src/graphql\">vslinko/ripster</a></li>\n<li><a href=\"https://github.com/fortruce/relay-skeleton\">relay-skeleton</a> - React, Relay, GraphQL project skeleton</li>\n<li><a href=\"https://github.com/mhart/simple-relay-starter\">simple-relay-starter</a> - A very simple starter for React Relay using Browserify.</li>\n<li><a href=\"https://github.com/transedward/relay-chat\">relay-chat</a> - an chat example showing Relay with routing and pagination.</li>\n<li><a href=\"https://github.com/taion/relay-todomvc\">relay-todomvc</a> - Relay TodoMVC with routing.</li>\n<li><a href=\"https://github.com/mrblueblue/graphql-express-sqlite\">graphql-express-sqlite</a> - GraphQL server with Sqlite and Express</li>\n<li><a href=\"https://github.com/chentsulin/koa-graphql-relay-example\">koa-graphql-relay-example</a> - Example of <a href=\"https://github.com/chentsulin/koa-graphql\">koa-graphql</a></li>\n<li><a href=\"https://github.com/lvarayut/relay-fullstack\">relay-fullstack</a> - Relay Starter Kit integrated with Relay, GraphQL, Express, ES6/ES7, JSX, Webpack, Babel, Material Design Lite, and PostCSS.</li>\n<li><a href=\"https://github.com/serverless/serverless-graphql-blog\">serverless-graphql-blog</a> - A Serverless Blog leveraging GraphQL to offer a REST API with only 1 endpoint</li>\n<li><a href=\"https://github.com/soonlive/relay-cart\">relay-cart</a> - A simple shopping cart example leveraging relay &#x26; GraphQL with routing and pagination.</li>\n<li><a href=\"https://github.com/applification/graphql-loader\">graphql-loader</a> - Example project to illustrate GraphQL, Express and Facebook DataLoader to connect to third party REST API</li>\n<li><a href=\"https://github.com/alvinthen/swapi-graphql-lambda\">swapi-graphql-lambda</a> - A GraphQL schema hosted in AWS Lambda wrapping <a href=\"http://swapi.co/\">http://swapi.co/</a></li>\n<li><a href=\"http://dev.apollodata.com/react/\">Apollo Client documentation</a> - Documentation and example for building GraphQL apps using apollo client</li>\n<li><a href=\"https://www.apollographql.com/docs/\">Apollo Server tools, products, and libraries documentation</a> - Documentation, tutorial and examples for building GraphQL server and connecting to SQL, MongoDB and REST endpoints.</li>\n<li><a href=\"https://www.apollographql.com/docs/link/\">Apollo Link</a> - The official guide for getting started with Apollo Link - a standard interface for modifying control flow of GraphQL requests and fetching GraphQL results.</li>\n<li><a href=\"https://github.com/nnance/f8app-apollo\">f8-apollo</a> - Refactored version of the official F8 app of 2016, powered by React Native and the Apollo Stack.</li>\n<li><a href=\"https://github.com/fbsamples/f8app\">f8app</a> - Source code of the official F8 app of 2016, powered by React Native and other Facebook open source projects. <a href=\"http://makeitopen.com/\">http://makeitopen.com</a></li>\n<li><a href=\"https://github.com/reindexio/reindex-examples\">Reindex Examples</a> - Example projects for Reindex with using React Native and React.js for web.</li>\n<li><a href=\"https://julienvincent.github.io/modelizr/\">Modelizr Documentation</a> - Documentation and Usage Examples for modelizr</li>\n<li><a href=\"https://github.com/Akryum/frontpage-vue-app\">Vue Apollo Example</a> - Apollo example project for Vue 2.0.</li>\n<li><a href=\"https://github.com/kamilkisiela/angular2-graphql-rest\">angular2-graphql-rest</a> - An example app with REST Api working side by side with GraphQL using Apollo Client with angular2-apollo. Includes step-by-step tutorial how to migrate from REST to GraphQL.</li>\n<li><a href=\"https://github.com/entria/graphql-dataloader-boilerplate\">GraphQL-DataLoader-Boilerplate</a> - Boilerplate to start your GraphQL with DataLoader server</li>\n<li><a href=\"https://github.com/sibelius/graphql-cep\">GraphQL-CEP</a> - Query address by CEP</li>\n<li><a href=\"https://github.com/katopz/react-apollo-graphql-github-example\">Apollo React example for Github GraphQL API</a> - Usage Examples Apollo React for Github GraphQL API with create-react-app</li>\n<li><a href=\"https://github.com/xpepermint/graphql-example\">Intuitive GraphQL Resolver Example</a> - GraphQL application example using <a href=\"https://github.com/xpepermint/rawmodeljs\">RawModel.js</a>.</li>\n<li><a href=\"https://reactql.org/\">ReactQL starter kit</a> - Universal React + Apollo + Redux + React Router 4, with SSR-enabled GraphQL, store (de/re)hydration and production code bundling.</li>\n<li><a href=\"https://github.com/stubailo/microhn\">microhn</a> - Simple Hacker News client built on top of GraphQLHub</li>\n<li><a href=\"https://github.com/sysgears/apollo-universal-starter-kit\">Apollo Web&#x26;Mobile Universal Starter Kit with Hot Code Reload</a> - Apollo, GraphQL, React, React Native, Expo, Redux, Express, SQL and Twitter Bootstrap. Hot Code Reload of back end &#x26; front end using Webpack and Hot Module Replacement.</li>\n<li><a href=\"https://malloc.fi/building-decoupled-sites-and-apps-with-graphql-and-next-js\">Building Decoupled Sites and Apps with GraphQL and Next.js</a></li>\n</ul>\n<h3>TypeScript Examples</h3>\n<ul>\n<li><a href=\"https://github.com/DxCx/webpack-graphql-server\">Basic Apollo Server</a> - Basic Starter for Apollo Server, Using typescript and Webpack.</li>\n<li><a href=\"https://github.com/FinalDes/apollo-express-ts-server-boilerplate\">Apollo Graphql Express Server</a> - Minimal Apollo Graphql Express Server</li>\n<li><a href=\"https://github.com/KATT/shop\">Prisma/Apollo/React Full-stack Example</a> - An e-commerce example project with Prisma, GraphQL API Gateway, React, Apollo, Next.js, SSR, CI, and E2E testing. All TypeScript.</li>\n</ul>\n<h3>Ruby Examples</h3>\n<ul>\n<li><a href=\"https://github.com/rmosolgo/graphql-ruby-demo\">graphql-ruby-demo</a> - Use graphql-ruby to expose a Rails app.</li>\n<li><a href=\"https://github.com/github/github-graphql-rails-example\">github-graphql-rails-example</a> - Example Rails app using GitHub's GraphQL API.</li>\n<li><a href=\"https://github.com/nethsix/relay-on-rails\">relay-on-rails</a> - Barebones starter kit for Relay application with Rails GraphQL server.</li>\n<li><a href=\"https://github.com/gauravtiwari/relay-rails-blog\">relay-rails-blog</a> - A graphql, relay and standard rails application powered demo weblog.</li>\n<li><a href=\"https://github.com/jcdavison/to_eat_app\">to<em>eat</em>app</a> - A sample graphql/rails/relay application with a related 3-part article series.</li>\n</ul>\n<h3>Go Examples</h3>\n<ul>\n<li><a href=\"https://github.com/sogko/golang-relay-starter-kit\">golang-relay-starter-kit</a> - Barebones starting point for a Relay application with Golang GraphQL server.</li>\n<li><a href=\"https://github.com/graphql-go/playground\">golang-graphql-playground</a> - An example Golang GraphQL server written with graphql-go and graphql-relay-go. Try live demo at: <a href=\"http://golanggraphqlplayground-sogko.rhcloud.com/\">http://golanggraphqlplayground-sogko.rhcloud.com</a></li>\n<li><a href=\"https://github.com/sogko/todomvc-relay-go\">todomvc-relay-go</a> - Port of the React/Relay TodoMVC app, driven by a Golang GraphQL backend.</li>\n</ul>\n<h3>Scala Examples</h3>\n<ul>\n<li><a href=\"https://github.com/sangria-graphql/sangria-akka-http-example\">sangria-akka-http-example</a> - An example GraphQL server written with akka-http and <a href=\"http://sangria-graphql.org/\">sangria</a></li>\n<li><a href=\"https://github.com/sangria-graphql/sangria-playground\">sangria-playground</a> - An example of GraphQL server written with Play and sangria.</li>\n</ul>\n<h3>Python Examples</h3>\n<ul>\n<li><a href=\"https://github.com/graphql-python/swapi-graphene\">swapi-graphene</a> - A GraphQL schema and server using <a href=\"http://graphene-python.org/\">Graphene</a> - <a href=\"http://swapi.graphene-python.org/\">View demo online</a>.</li>\n</ul>\n<h3>Elixir Examples</h3>\n<ul>\n<li><a href=\"https://github.com/absinthe-graphql/absinthe_example\">absinthe_example</a> - Example usage of Absinthe GraphQL</li>\n<li><a href=\"https://github.com/graphql-elixir/hello_graphql_phoenix\">hello<em>graphql</em>phoenix</a> - Examples of GraphQL Elixir Plug endpoints mounted in Phoenix - <a href=\"http://playground.graphql-elixir.org/\">View demo online</a>.</li>\n</ul>\n<h3>PHP Examples</h3>\n<ul>\n<li><a href=\"https://siler.leocavalcante.com/graphql/\">Siler's GraphQL guide</a> - A guide on how to build a PHP GraphQL endpoint.</li>\n<li><a href=\"https://github.com/ardani/laravel-graphql\">Laravel GraphQL</a> - A sample integrating GraphQL with Laravel</li>\n<li><a href=\"https://symfony.fi/entry/adding-a-graphql-api-to-your-symfony-flex-app\">Adding a GraphQL API to your Symfony Flex application</a></li>\n</ul>\n<h3>ReasonML Examples</h3>\n<ul>\n<li><a href=\"https://github.com/Gregoirevda/reason-ml-graphql-todo-list\">Todo list example</a> - A todo list integrating GraphQL.</li>\n</ul>\n<h2>Videos</h2>\n<ul>\n<li><a href=\"https://egghead.io/lessons/react-zero-config-apollo-graphql-with-apollo-boost\">Zero-config Apollo + GraphQL with Apollo Boost</a></li>\n<li><a href=\"https://www.youtube.com/embed/UBGzsb2UkeY\">Zero to GraphQL in 30 Minutes</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=9sc8Pyc51uU\">Data fetching for React applications at Facebook</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=X6YbAKiLCLU\">React Native &#x26; Relay: Bringing Modern Web Techniques to Mobile</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=WQLzZf34FJ8\">Exploring GraphQL</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=gY48GW87Feo\">Creating a GraphQL Server</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=S0s935RKKB4\">GraphQL at The Financial Times</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=IrgHurBjQbg\">Relay: An Application Framework For React</a></li>\n<li><a href=\"https://www.youtube.com/watch?t=643&#x26;v=Pxdgu2XIAAg\">Building and Deploying Relay with Facebook</a></li>\n<li><a href=\"https://vimeo.com/144817545\">Introduction to GraphQL</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=_9RgHXqH8J0\">Exploring GraphQL@Scale</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=IMUpYOc9z3c&#x26;feature=youtu.be\">What's Next for Phoenix by Chris McCord</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Ed6oJXKt3-M\">GraphQL with Nick Schrock</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=DNPVqK_woRQ\">Build a GraphQL server for Node.js using PostgreSQL/MySQL</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=PHabPhgRUuU\">GraphQL server tutorial for Node.js with SQL, MongoDB and REST</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=ENqDNIp1Nd8\">JavaScript Air Episode 023: Transitioning from REST to GraphQL</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=ViXL0YQnioU\">GraphQL Future at react-europe 2016</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=etax3aEe2dA\">GraphQL at Facebook at react-europe 2016</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=z5rz3saDPJ8\">Building native mobile apps with GraphQL at react-europe 2016</a></li>\n</ul>\n<h2>Blogs</h2>\n<ul>\n<li><a href=\"http://graphql.org/blog/\">Official GraphQL blog</a></li>\n<li><a href=\"https://dev-blog.apollodata.com/\">Building Apollo</a></li>\n</ul>\n<h2>Posts</h2>\n<ul>\n<li><a href=\"http://gajus.com/blog/9/using-dataloader-to-batch-requests\">Using DataLoader to batch GraphQL requests</a></li>\n<li><a href=\"https://facebook.github.io/react/blog/2015/02/20/introducing-relay-and-graphql.html\">Introducing Relay and GraphQL</a></li>\n<li><a href=\"https://facebook.github.io/react/blog/2015/05/01/graphql-introduction.html\">GraphQL Introduction</a></li>\n<li><a href=\"https://gist.github.com/wincent/598fa75e22bdfa44cf47\">Unofficial Relay FAQ</a></li>\n<li><a href=\"https://medium.com/@clayallsopp/your-first-graphql-server-3c766ab4f0a2\">Your First GraphQL Server</a></li>\n<li><a href=\"https://blog.risingstack.com/graphql-overview-getting-started-with-graphql-and-nodejs/\">GraphQL Overview - Getting Started with GraphQL and Node.js</a></li>\n<li><a href=\"https://medium.freecodecamp.com/introduction-to-graphql-1d8011b80159\">4 Reasons you should try out GraphQL</a></li>\n<li><a href=\"https://medium.com/@frikille/moving-from-rest-to-graphql-e3650b6f5247\">Moving from REST to GraphQL</a></li>\n<li><a href=\"http://davidandsuzi.com/writing-a-basic-api-with-graphql/\">Writing a Basic API with GraphQL</a></li>\n<li><a href=\"https://blog.risingstack.com/start-using-graphql-with-graffiti/?utm_source=nodeweekly&#x26;utm_medium=email\">Start using GraphQL with Graffiti</a></li>\n<li><a href=\"https://www.reindex.io/blog/building-a-graphql-server-with-node-js-and-sql/\">Building a GraphQL Server with Node.js and SQL</a></li>\n<li><a href=\"https://www.slideshare.net/LondonReact/graph-ql\">GraphQL at The Financial Times</a></li>\n<li><a href=\"http://sgwilym.github.io/relay-visual-learners/\">Relay for visual learners</a></li>\n<li><a href=\"https://medium.com/@cpojer/relay-and-routing-36b5439bad9\">Relay and Routing</a></li>\n<li><a href=\"https://wehavefaces.net/learn-golang-graphql-relay-1-e59ea174a902\">Learn Golang + GraphQL + Relay, Part 1: Your first Golang GraphQL server</a></li>\n<li><a href=\"https://wehavefaces.net/learn-golang-graphql-relay-2-a56cbcc3e341\">Learn Golang + GraphQL + Relay, Part 2: Your first Relay application</a></li>\n<li><a href=\"https://0x2a.sh/from-rest-to-graphql-b4e95e94c26b\">From REST to GraphQL</a></li>\n<li><a href=\"http://graphql.org/blog/graphql-a-query-language/\">GraphQL: A data query language</a></li>\n<li><a href=\"http://graphql.org/blog/subscriptions-in-graphql-and-relay/\">Subscriptions in GraphQL and Relay</a></li>\n<li><a href=\"https://medium.com/@clayallsopp/relay-101-building-a-hacker-news-client-bb8b2bdc76e6\">Relay 101: Building A Hacker News Client</a></li>\n<li><a href=\"https://wehavefaces.net/graphql-shorthand-notation-cheatsheet-17cd715861b6\">GraphQL Shorthand Notation Cheatsheet</a></li>\n<li><a href=\"https://githubengineering.com/the-github-graphql-api/\">The GitHub GraphQL API</a></li>\n<li><a href=\"https://medium.com/@katopz/github-graphql-api-react-example-eace824d7b61\">Github GraphQL API React Example</a></li>\n<li><a href=\"https://medium.com/entria/testing-a-graphql-server-using-jest-4e00d0e4980e\">Testing a GraphQL Server using Jest</a></li>\n<li><a href=\"https://medium.com/entria/how-to-implement-viewercansee-in-graphql-78cc48de7464\">How to implement viewerCanSee in GraphQL</a></li>\n<li><a href=\"https://engineeringblog.yelp.com/2017/05/introducing-yelps-local-graph.html\">Introducing Yelp's Local Graph</a></li>\n<li><a href=\"https://labs.getninjas.com.br/sharing-data-in-a-microservices-architecture-using-graphql-97db59357602\">Sharing data in a Microservices Architecture using GraphQL</a></li>\n<li><a href=\"https://blog.codecentric.de/2017/09/graphql-mit-spotify-teil-1-server/\">Let's build a node.js GraphQL server for fetching Spotify REST API, in German</a> | <a href=\"https://blog.codecentric.de/en/2017/01/lets-build-spotify-graphql-server/\">in English</a></li>\n<li><a href=\"https://medium.com/@pierrecriulanscy/client-side-only-realtime-web-applications-with-firebase-graphql-and-apollo-client-2-0-9606160f7cf8\">“Client-side only” realtime web applications with Firebase, GraphQL and apollo-client 2.0</a></li>\n</ul>\n<h2>Tutorials</h2>\n<ul>\n<li><a href=\"https://www.howtographql.com/\">How to GraphQL</a> - Fullstack Tutorial Website with Tracks for all Major Frameworks &#x26; Languages including React, Apollo, Relay, JavaScript, Ruby, Java, Elixir and many more</li>\n<li><a href=\"https://github.com/mugli/learning-graphql\">learning-graphql</a> - An attempt to learn GraphQL.</li>\n<li><a href=\"https://www.learnrelay.org/\">Learn Relay</a> - A comprehensive introduction to Relay</li>\n<li><a href=\"https://www.learnapollo.com/\">Learn Apollo</a> - A hands-on tutorial for Apollo GraphQL Client</li>\n</ul>"},{"url":"/blog/blog-archive/","relativePath":"blog/blog-archive.md","relativeDir":"blog","base":"blog-archive.md","name":"blog-archive","frontmatter":{"title":"Blog Archive","subtitle":"Blog Archive","date":"2021-07-26","thumb_image_alt":"Blog page animation","excerpt":"Blog Archive","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"post","thumb_image":"images/3.jpg"},"html":"<h2>Blog Archive</h2>\n <iframe   width=\"400\" height=\"575\"\n            src=\"https://bgoonz.blogspot.com/\" title=\"YouTube video\n            player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n            encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>"},{"url":"/blog/functions-in-python/","relativePath":"blog/functions-in-python.md","relativeDir":"blog","base":"functions-in-python.md","name":"functions-in-python","frontmatter":{"title":"Functions in Python","subtitle":"Functions in Python","date":"2021-10-12","thumb_image_alt":"lorem-ipsum","excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post"},"html":"<h2>Functions</h2>\n<pre><code class=\"language-python\">def hello(name):\n    print('Hello {}'.format(name))\n</code></pre>\n<h3>Return Values and return Statements</h3>\n<p>When creating a function using the def statement, you can specify what the return value should be with a return statement. A return statement consists of the following:</p>\n<ul>\n<li>The return keyword.</li>\n<li>The value or expression that the function should return.</li>\n</ul>\n<pre><code class=\"language-python\">import random\ndef getAnswer(answerNumber):\n    if answerNumber == 1:\n        return 'It is certain'\n    elif answerNumber == 2:\n        return 'It is decidedly so'\n    elif answerNumber == 3:\n        return 'Yes'\n    elif answerNumber == 4:\n        return 'Reply hazy try again'\n    elif answerNumber == 5:\n        return 'Ask again later'\n    elif answerNumber == 6:\n        return 'Concentrate and ask again'\n    elif answerNumber == 7:\n        return 'My reply is no'\n    elif answerNumber == 8:\n        return 'Outlook not so good'\n    elif answerNumber == 9:\n        return 'Very doubtful'\n\nr = random.randint(1, 9)\nfortune = getAnswer(r)\nprint(fortune)\n</code></pre>\n<h3>The None Value</h3>\n<pre><code class=\"language-python\">spam = print('Hello!')\nspam is None\n</code></pre>\n<p>Note: never compare to <code>None</code> with the <code>==</code> operator. Always use <code>is</code>.</p>\n<h3>print Keyword Arguments</h3>\n<pre><code class=\"language-python\">print('Hello', end='')\nprint('World')\n</code></pre>\n<pre><code class=\"language-python\">print('cats', 'dogs', 'mice')\n</code></pre>\n<pre><code class=\"language-python\">print('cats', 'dogs', 'mice', sep=',')\n</code></pre>\n<h3>Local and Global Scope</h3>\n<ul>\n<li>Code in the global scope cannot use any local variables.</li>\n<li>However, a local scope can access global variables.</li>\n<li>Code in a function’s local scope cannot use variables in any other local scope.</li>\n<li>You can use the same name for different variables if they are in different scopes. That is, there can be a local variable named spam and a global variable also named spam.</li>\n</ul>\n<h3>The global Statement</h3>\n<p>If you need to modify a global variable from within a function, use the global statement:</p>\n<pre><code class=\"language-python\">def spam():\n    global eggs\n    eggs = 'spam'\n\neggs = 'global'\nspam()\nprint(eggs)\n</code></pre>\n<p>There are four rules to tell whether a variable is in a local scope or global scope:</p>\n<ol>\n<li>If a variable is being used in the global scope (that is, outside of all functions), then it is always a global variable.</li>\n<li>If there is a global statement for that variable in a function, it is a global variable.</li>\n<li>Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.</li>\n<li>But if the variable is not used in an assignment statement, it is a global variable.</li>\n</ol>"},{"url":"/blog/blogwcomments/","relativePath":"blog/blogwcomments.md","relativeDir":"blog","base":"blogwcomments.md","name":"blogwcomments","frontmatter":{"title":"ExpressJS Apis","subtitle":"lorem-ipsum","date":"2021-07-26","thumb_image_alt":"node and express js","excerpt":"## **Overview**  A **database schema** is the shape of our database. It defines what tables we'll have, which columns should exist within the tables and any restrictions on each column.  A well-designed database schema keeps the data well organized and can help ensure high-quality data.  Note that while schema design is usually left to Database Administrators (DBAs), understanding schema helps when designing APIs and database logic. And in a smaller team, this step may fall on the developer.","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"post","thumb_image":"images/express.png"},"html":"<p><a href=\"https://www.w3schools.com/sql/trysql.asp?filename=trysql_select_where\">SQL Tryit Editor v1.6</a></p>\n<h2>A <strong>database is a collection of data organized for easy retrieval and manipulation</strong>.</h2>\n<p>We're concerned only with digital databases, those that run on computers or other electronic devices. Digital databases have been around since the 1960s. Relational databases, those which store \"related\" data, are the oldest and most common type of database in use today.</p>\n<h3><strong>Data Persistence</strong></h3>\n<p>A database is often necessary because our application or code requires data persistence. This term refers to data that is infrequently accessed and not likely to be modified. In less technical terms, the information will be safely stored and remain untouched unless intentionally modified.</p>\n<p>A familiar example of non-persistent data would be JavaScript objects and arrays, which reset each time the code runs.</p>\n<h3><strong>Relational Databases</strong></h3>\n<p>In relational databases, <strong>the data is stored in tabular format grouped into rows and columns</strong> (similar to spreadsheets). A collection of rows is called a table. Each row represents a single record in the table and is made up of one or more columns.</p>\n<p>These kinds of databases are relational because a <em>relation</em> is a mathematical idea equivalent to a table. So relational databases are databases that store their data in tables.</p>\n<h3><strong>Tables</strong></h3>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2e309a41-e107-46f3-81e7-154d732d3dcf/Untitled.png\"></p>\n<p><strong>Below are some basic facts about tables:</strong></p>\n<ul>\n<li>Tables organize data in rows and columns.</li>\n<li>Each row in a table represents one distinct record.</li>\n<li>Each column represents a field or attribute that is common to all the records.</li>\n<li>Fields should have a descriptive name and a data type appropriate for the attribute it represents.</li>\n<li>Tables usually have more rows than columns.</li>\n<li>Tables have primary keys that uniquely identify each row.</li>\n<li>Foreign keys represent the relationships with other tables.</li>\n</ul>\n<h2><strong>Overview</strong></h2>\n<h3>SQL:</h3>\n<p>SQL is a standard language, which means that it almost certainly will be supported, no matter how your database is managed. That said, be aware that the SQL language can vary depending on database management tools. This lesson focuses on a set of core commands that never change. Learning the standard commands is an excellent introduction since the knowledge transfers between database products.</p>\n<p>The syntax for SQL is English-like and requires fewer symbols than programming languages like C, Java, and JavaScript.</p>\n<p>It is declarative and concise, which means there is a lot less to learn to use it effectively.</p>\n<p>When learning SQL, it is helpful to understand that each command is designed for a different purpose. If we classify the commands by purpose, we'll end up with the following sub-categories of SQL:</p>\n<ul>\n<li><strong>Data Definition Language (DDL)</strong>: used to modify database objects. Some examples are: CREATE TABLE, ALTER TABLE, and DROP TABLE.</li>\n<li><strong>Data Manipulation Language (DML)</strong>: used to manipulate the data stored in the database. Some examples are: INSERT, UPDATE, and DELETE.</li>\n<li><strong>Data Query Language (DQL)</strong>: used to ask questions about the data stored in the database. The most commonly used SQL command is SELECT, and it falls in this category.</li>\n<li><strong>Data Control Language (DCL)</strong>: used to manage database security and user's access to data. These commands fall into the realm of Database Administrators. Some examples are GRANT and REVOKE.</li>\n<li><strong>Transaction Control Commands</strong>: used for managing groups of statements that must execute as a unit or not execute at all. Examples are COMMIT and ROLLBACK.</li>\n</ul>\n<p>As a developer, you'll need to get familiar with DDL and become proficient using DML and DQL. This lesson will cover only DML and DQL commands.</p>\n<h2><strong>Overview</strong></h2>\n<p>The four SQL operations covered in this section will allow a user to <strong>query</strong>, <strong>insert</strong>, and <strong>modify</strong> a database table.</p>\n<h3><strong>Query</strong></h3>\n<p>A <strong>query</strong> is a SQL statement used to retrieve data from a database. The command used to write queries is SELECT, and it is one of the most commonly used SQL commands.</p>\n<p>The basic syntax for a SELECT statement is this:</p>\n<p>To see all the fields on a table, we can use a * as the selection.</p>\n<p>The preceding statement would show all the records and all the columns for each record in the employees table.</p>\n<p>To pick the fields we want to see, we use a comma-separated list:</p>\n<p>The return of that statement would hold all records from the listed fields.</p>\n<p>We can extend the SELECT command's capabilities using clauses for things like filtering, sorting, pagination, and more.</p>\n<p>It is possible to query multiple tables in a single query. But, in this section, we only perform queries on a single table. We will cover performing queries on multiple tables in another section.</p>\n<h3><strong>Insert</strong></h3>\n<p>To <strong>insert</strong> new data into a table, we'll use the INSERT command. The basic syntax for an INSERT statement is this:</p>\n<p>Using this formula, we can specify which values will be inserted into which fields like so:</p>\n<h3><strong>Modify</strong></h3>\n<p><strong>Modifying</strong> a database consists of updating and removing records. For these operations, we'll use UPDATE and DELETE commands, respectively.</p>\n<p>The basic syntax for an UPDATE statement is:</p>\n<p>The basic syntax for a DELETE statement is:</p>\n<h2><strong>Follow Along</strong></h2>\n<h3><strong>Filtering results using WHERE clause</strong></h3>\n<p>When querying a database, the default result will be every entry in the given table. However, often, we are looking for a specific record or a set of records that meets certain criteria.</p>\n<p>A WHERE clause can help in both cases.</p>\n<p>Here's an example where we might only want to find customers living in Berlin.</p>\n<p>We can also chain together WHERE clauses using OR and AND to limit our results further.</p>\n<p>The following query includes only records that match both criteria.</p>\n<p>And this query includes records that match either criteria.</p>\n<p>These operators can be combined and grouped with parentheses to add complex selection logic. They behave similarly to what you're used to in programming languages.</p>\n<p>You can read more about SQLite operators from <a href=\"https://www.w3resource.com/sqlite/operators.php\">w3resource (Links to an external site.)</a>.</p>\n<p>To select a single record, we can use a WHERE statement with a uniquely identifying field, like an id:</p>\n<p>Other comparison operators also work in WHERE conditions, such as >, &#x3C;, &#x3C;=, and >=.</p>\n<h3><strong>Ordering results using the ORDER BY clause</strong></h3>\n<p>Query results are shown in the same order the data was inserted. To control how the data is sorted, we can use the ORDER BY clause. Let's see an example.</p>\n<p>We can pass a list of field names to order by and optionally choose asc or desc for the sort direction. The default is asc, so it doesn't need to be specified.</p>\n<p>Some SQL engines also support using field abbreviations when sorting.</p>\n<p>In this case, the results are sorted by the department in ascending order first and then by salary in descending order. The numbers refer to the fields' position in the <em>selection</em> portion of the query, so 1 would be <em>name</em>, 2 would be <em>salary</em>, and so on.</p>\n<p>Note that the WHERE clause should come after the FROM clause. The ORDER BY clause always goes last.</p>\n<h3><strong>Limiting results using the LIMIT clause</strong></h3>\n<p>When we wish to see only a limited number of records, we can use a LIMIT clause.</p>\n<p>The following returns the first ten records in the products table:</p>\n<p>LIMIT clauses are often used in conjunction with ORDER BY. The following shows us the five cheapest products:</p>\n<h3><strong>Inserting data using INSERT</strong></h3>\n<p>An insert statement adds a new record to the database. All non-null fields must be listed out in the same order as their values. Some fields, like ids and timestamps, may be auto-generated and do not need to be included in an INSERT statement.</p>\n<p>The values in an insert statement must not violate any restrictions and constraints that the database has in place, such as expected datatypes. We will learn more about constraints and schema design in a later section.</p>\n<h3><strong>Modifying recording using UPDATE</strong></h3>\n<p>When modifying a record, we identify a single record or a set of records to update using a WHERE clause. Then we can set the new value(s) in place.</p>\n<p>Technically the WHERE clause is not required, but leaving it off would result in every record within the table receiving the update.</p>\n<h3><strong>Removing records using DELETE</strong></h3>\n<p>When removing a record or set of records, we need only identify which record(s) to remove using a WHERE clause:</p>\n<p>Once again, the WHERE clause is not required, but leaving it off would remove every record in the table, so it's essential.</p>\n<h2><strong>Overview</strong></h2>\n<p>Raw SQL is a critical baseline skill. However, Node developers generally use an <strong>Object Relational Mapper (ORM)</strong> or <strong>query builder</strong> to write database commands in a backend codebase. Both <strong>ORMs</strong> and <strong>query builders</strong> are JavaScript libraries that allow us to interface with the database using a JavaScript version of the SQL language.</p>\n<p>For example, instead of a raw SQL SELECT:</p>\n<p>We could use a query builder to write the same logic in JavaScript:</p>\n<p><strong>Query builders</strong> are lightweight and easy to get off the ground, whereas <strong>ORMs</strong> use an object-oriented model and provide more heavy lifting within their rigid structure.</p>\n<p>We will use a <strong>query builder</strong> called <a href=\"https://knexjs.org/\">knex.js (Links to an external site.)</a>.</p>\n<h2><strong>Follow Along</strong></h2>\n<h3><strong>Knex Setup</strong></h3>\n<p>To use Knex in a repository, we'll need to add two libraries:</p>\n<p>knex is our query builder library, and sqlite3 allows us to interface with a sqlite database. We'll learn more about sqlite and other <strong>database management systems</strong> in the following module. For now, know that you need both libraries.</p>\n<p>Next, we use Knex to set up a config file:</p>\n<p>To use the query builder elsewhere in our code, we need to call knex and pass in a config object. We'll be discussing Knex configuration more in a future module. Still, we only need the client, connection, and useNullAsDefault keys as shown above. The filename should point towards the pre-existing database file, which can be recognized by the .db3 extension.</p>\n<p><strong>GOTCHA</strong>: The file path to the database should be with respect to the <strong>root</strong> of the repo, not the configuration file itself.</p>\n<p>Once Knex is configured, we can import the above config file anywhere in our codebase to access the database.</p>\n<p>The db object provides methods that allow us to begin building queries.</p>\n<h3><strong>SELECT using Knex</strong></h3>\n<p>In Knex, the equivalent of SELECT * FROM users is:</p>\n<p>There's a simpler way to write the same command:</p>\n<p>Using this, we could write a GET endpoint.</p>\n<p><strong>NOTE</strong>: All Knex queries return promises.</p>\n<p>Knex also allows for a where clause. In Knex, we could write SELECT * FROM users WHERE id=1 as</p>\n<p>This method will resolve to an array containing a single entry like so: [{ id: 1, name: 'bill' }].</p>\n<p>Using this, we might add a GET endpoint where a specific user:</p>\n<h3><strong>INSERT using Knex</strong></h3>\n<p>In Knex, the equivalent of INSERT INTO users (name, age) VALUES ('Eva', 32) is:</p>\n<p>The insert method in Knex will resolve to an array containing the newly created id for that user like so: [3].</p>\n<h3><strong>UPDATE using Knex</strong></h3>\n<p>In knex, the equivalent of UPDATE users SET name='Ava', age=33 WHERE id=3; is:</p>\n<p>Note that the where method comes before update, unlike in SQL.</p>\n<p>Update will resolve to a count of rows updated.</p>\n<h3><strong>DELETE using Knex</strong></h3>\n<p>In Knex, the equivalent of DELETE FROM users WHERE age=33; is:</p>\n<p>Once again, the where must come before the del. This method will resolve to a count of records removed.</p>\n<h1>Day #2:</h1>\n<h2><strong>Overview</strong></h2>\n<p>SQLlite Studio is an application that allows us to create, open, view, and modify SQLite databases. To fully understand what SQLite Studio is and how it works, we must also understand the concept of the Database Management Systems (DBMS).</p>\n<h2><strong>Follow Along</strong></h2>\n<h3><strong>What is a DBMS?</strong></h3>\n<p>To manage digital databases we use specialized software called <strong>D</strong>ata<strong>B</strong>ase <strong>M</strong>anagement <strong>S</strong>ystems (DBMS). These systems typically run on servers and are managed by <strong>D</strong>ata<strong>B</strong>ase <strong>A</strong>dministrators (DBAs).</p>\n<p>In less technical terms, we need a type of software that will allow us to create, access, and generally manage our databases. In the world of relational databases, we specifically use Relational Database Mangement Systems (RDBMs). Some examples are Postgres, SQLite, MySQL, and Oracle.</p>\n<p>Choosing a DBMS determines everything from how you set up your database, to where and how the data is stored, to what SQL commands you can use. Most systems share the core of the SQL language that you've already learned.</p>\n<p>In other words, you can expect SELECT, UPDATE, INSERT, WHERE , and the like to be the same across all DBMSs, but the subtleties of the language may vary.</p>\n<h3><strong>What is SQLite?</strong></h3>\n<p><strong>SQLite</strong> is the DBMS, as the name suggests, it is a more lightweight system and thus easier to get set up than some others.</p>\n<p>SQLite allows us to store databases as single files. SQLite projects have a .db3 extension. That is the database.</p>\n<p>SQLite is <em>not a database</em> (like relational, graph, or document are databases) but rather <em>a database management system</em>.</p>\n<h3><strong>Opening an existing database in SQLite Studio</strong></h3>\n<p>One useful visual interface we might use with a SQLite database is called <strong>SQLite Studio</strong>. <a href=\"https://sqlitestudio.pl/\">Install SQLITE Studio here. (Links to an external site.)</a></p>\n<p>Once installed, we can use SQLite Studio to open any .db3 file from a previous lesson. We may view the tables, view the data, and even make changes to the database.</p>\n<p>For a more detailed look at SQLite Studio, follow along in the video above.</p>\n<h2><strong>Overview</strong></h2>\n<p>A <strong>database schema</strong> is the shape of our database. It defines what tables we'll have, which columns should exist within the tables and any restrictions on each column.</p>\n<p>A well-designed database schema keeps the data well organized and can help ensure high-quality data.</p>\n<p>Note that while schema design is usually left to Database Administrators (DBAs), understanding schema helps when designing APIs and database logic. And in a smaller team, this step may fall on the developer.</p>\n<h2><strong>Follow Along</strong></h2>\n<p>For a look at schema design in SQLite Studio, follow along in the video above.</p>\n<p>When designing a single table, we need to ask three things:</p>\n<ul>\n<li>What fields (or columns) are present?</li>\n<li>What type of data do we expect for each field?</li>\n<li>Are there other restrictions needed for each column?</li>\n</ul>\n<p>Looking at the following schema diagram for an accounts table, we can the answer to each other those questions:</p>\n<p><a href=\"https://www.notion.so/9790405dda624818822293a383eec2d2\">Untitled</a></p>\n<h3><strong>Table Fields</strong></h3>\n<p>Choosing which fields to include in a table is relatively straight forward. What information needs to be tracked regarding this resource? In the real world, this is determined by the intended use of the product or app.</p>\n<p>However, this is one requirement every table should satisfy: a <strong>primary key</strong>. A primary key is a way to identify each entry in the database uniquely. It is most often represented as a auto-incrementing integer called id or [tablename]Id.</p>\n<h3><strong>Datatypes</strong></h3>\n<p>Each field must also have a specified datatype. The datatype available depends on our DBMS. Some supported datatype in SQLite include:</p>\n<ul>\n<li><strong>Null:</strong> Missing or unknown information.</li>\n<li><strong>Integer:</strong> Whole numbers.</li>\n<li><strong>Real:</strong> Any number, including decimals.</li>\n<li><strong>Text:</strong> Character data.</li>\n<li><strong>Blob:</strong> a large binary object that can be used to store miscellaneous data.</li>\n</ul>\n<p>Any data inserted into the table must match the datatypes determined in schema design.</p>\n<h3><strong>Constraints</strong></h3>\n<p>Beyond datatypes, we may add additional <strong>constraints</strong> on each field. Some examples include:</p>\n<ul>\n<li><strong>Not Null:</strong> The field cannot be left empty</li>\n<li><strong>Unique:</strong> No two records can have the same value in this field</li>\n<li><strong>Primary key:</strong> - Indicates this field is the primary key. Both the not null and unique constraints will be enforced.</li>\n<li><strong>Default:</strong> - Sets a default value if none is provided.</li>\n</ul>\n<p>As with data types, any data that does not satisfy the schema constraints will be rejected from the database.</p>\n<h3><strong>Multi-Table Design</strong></h3>\n<p>Another critical component of schema design is to understand how different tables relate to each other. This will be covered in later lesson.</p>\n<h2><strong>Overview</strong></h2>\n<p>Knex provides a <strong>schema builder</strong>, which allows us to write code to design our database schema. However, beyond thinking about columns and constraints, we must also consider updates.</p>\n<p>When a schema needs to be updated, a developer must feel confident that the changes go into effect everywhere. This means schema updates on the developer's local machine, on any testing or staging versions, on the production database, and then on any other developer's local machines. This is where <strong>migrations</strong> come into play.</p>\n<p>A database migration describes changes made to the structure of a database. Migrations include things like adding new objects, adding new tables, and modifying existing objects or tables.</p>\n<h2><strong>Follow Along</strong></h2>\n<h3><strong>Knex Cli</strong></h3>\n<p>To use migrations (and to make Knex setup easier), we need to use <strong>knex cli</strong>. Install knex globally with npm install -g knex.</p>\n<p>This allows you to use Knex commands within any repo that has knex as a local dependency. If you have any issues with this global install, you can use the npx knex command instead.</p>\n<h3><strong>Initializing Knex</strong></h3>\n<p>To start, add the knex and sqlite3 libraries to your repository.</p>\n<p>npm install knex sqlite3</p>\n<p>We've seen how to use manually create a config object to get started with Knex, but the best practice is to use the following command:</p>\n<p>Or, if Knex isn't globally installed:</p>\n<p>This command will generate a file in your root folder called knexfile.js. It will be auto populated with three config objects, based on different environments. We can delete all except for the development object.</p>\n<p>We'll need to update the location (or desired location) of the database as well as add the useNullAsDefault option. The latter option prevents crashes when working with sqlite3.</p>\n<p>Now, wherever we configure our database, we may use the following syntax instead of hardcoding in a config object.</p>\n<h3><strong>Knex Migrations</strong></h3>\n<p>Once our knexfile is set up, we can begin creating <strong>migrations</strong>. Though it's not required, we are going to add an addition option to the config object to specify a directory for the migration files.</p>\n<p>We can generate a new migration with the following command:</p>\n<p>knex migrate:make [migration-name]</p>\n<p>If we needed to create an accounts table, we might run:</p>\n<p>knex migrate:make create-accounts</p>\n<p>Note that inside data/migrations/ a new file has appeared. Migrations have a timestamp in their filenames automatically. Wither you like this or not, <strong>do not edit migration names.</strong></p>\n<p>The migration file should have both an up and a down function. Within the up function, we write the ended database changes. Within the down function, we write the code to undo the up functions. This allows us to undo any changes made to the schema if necessary.</p>\n<p>References for these methods are found in the <strong>schema builder</strong> section of the <a href=\"https://knexjs.org/\">Knex docs (Links to an external site.)</a>.</p>\n<p>At this point, the table is <strong>not</strong> yet created. To run this (and any other) migrations, use the command:</p>\n<p>knex migrate:latest</p>\n<p>Note if the database does not exist, this command will auto-generate one. We can use SQLite Studio to confirm that the accounts table has been created.</p>\n<h3><strong>Changes and Rollbacks</strong></h3>\n<p>If later down the road, we realize you need to update your schema, you shouldn't edit the migration file. Instead, you will want to create a new migration with the command:</p>\n<p>knex migrate:make accounts-schema-update</p>\n<p>Once we've written our updates into this file we save and close with:</p>\n<p>knex migrate:latest</p>\n<p>If we migrate our database and then quickly realize something isn't right, we can edit the migration file. However, first, we need to <strong>rolllback</strong> (or undo) our last migration with:</p>\n<p>knex migrate:rollback</p>\n<p>Finally, we are free to rerun that file with knex migrate latest.</p>\n<p><strong>NOTE</strong>: A rollback should not be used to edit an old migration file once that file has accepted into a main branch. However, an entire team may use a rollback to return to a previous version of a database.</p>\n<h2><strong>Overview</strong></h2>\n<p>Knex provides a <strong>schema builder</strong>, which allows us to write code to design our database schema. However, beyond thinking about columns and constraints, we must also consider updates.</p>\n<p>When a schema needs to be updated, a developer must feel confident that the changes go into effect everywhere. This means schema updates on the developer's local machine, on any testing or staging versions, on the production database, and then on any other developer's local machines. This is where <strong>migrations</strong> come into play.</p>\n<p>A database migration describes changes made to the structure of a database. Migrations include things like adding new objects, adding new tables, and modifying existing objects or tables.</p>\n<h2><strong>Follow Along</strong></h2>\n<h3><strong>Knex Cli</strong></h3>\n<p>To use migrations (and to make Knex setup easier), we need to use <strong>knex cli</strong>. Install knex globally with npm install -g knex.</p>\n<p>This allows you to use Knex commands within any repo that has knex as a local dependency. If you have any issues with this global install, you can use the npx knex command instead.</p>\n<h3><strong>Initializing Knex</strong></h3>\n<p>To start, add the knex and sqlite3 libraries to your repository.</p>\n<p>npm install knex sqlite3</p>\n<p>We've seen how to use manually create a config object to get started with Knex, but the best practice is to use the following command:</p>\n<p>Or, if Knex isn't globally installed:</p>\n<p>This command will generate a file in your root folder called knexfile.js. It will be auto populated with three config objects, based on different environments. We can delete all except for the development object.</p>\n<p>We'll need to update the location (or desired location) of the database as well as add the useNullAsDefault option. The latter option prevents crashes when working with sqlite3.</p>\n<p>Now, wherever we configure our database, we may use the following syntax instead of hardcoding in a config object.</p>\n<h3><strong>Knex Migrations</strong></h3>\n<p>Once our knexfile is set up, we can begin creating <strong>migrations</strong>. Though it's not required, we are going to add an addition option to the config object to specify a directory for the migration files.</p>\n<p>We can generate a new migration with the following command:</p>\n<p>knex migrate:make [migration-name]</p>\n<p>If we needed to create an accounts table, we might run:</p>\n<p>knex migrate:make create-accounts</p>\n<p>Note that inside data/migrations/ a new file has appeared. Migrations have a timestamp in their filenames automatically. Wither you like this or not, <strong>do not edit migration names.</strong></p>\n<p>The migration file should have both an up and a down function. Within the up function, we write the ended database changes. Within the down function, we write the code to undo the up functions. This allows us to undo any changes made to the schema if necessary.</p>\n<p>References for these methods are found in the <strong>schema builder</strong> section of the <a href=\"https://knexjs.org/\">Knex docs (Links to an external site.)</a>.</p>\n<p>At this point, the table is <strong>not</strong> yet created. To run this (and any other) migrations, use the command:</p>\n<p>knex migrate:latest</p>\n<p>Note if the database does not exist, this command will auto-generate one. We can use SQLite Studio to confirm that the accounts table has been created.</p>\n<h3><strong>Changes and Rollbacks</strong></h3>\n<p>If later down the road, we realize you need to update your schema, you shouldn't edit the migration file. Instead, you will want to create a new migration with the command:</p>\n<p>knex migrate:make accounts-schema-update</p>\n<p>Once we've written our updates into this file we save and close with:</p>\n<p>knex migrate:latest</p>\n<p>If we migrate our database and then quickly realize something isn't right, we can edit the migration file. However, first, we need to <strong>rolllback</strong> (or undo) our last migration with:</p>\n<p>knex migrate:rollback</p>\n<p>Finally, we are free to rerun that file with knex migrate latest.</p>\n<p><strong>NOTE</strong>: A rollback should not be used to edit an old migration file once that file has accepted into a main branch. However, an entire team may use a rollback to return to a previous version of a database.</p>\n<h2><strong>Overview</strong></h2>\n<p>Often we want to pre-populate our database with sample data for testing. <strong>Seeds</strong> allow us to add and reset sample data easily.</p>\n<h2><strong>Follow Along</strong></h2>\n<p>The Knex command-line tool offers a way to <strong>seed</strong> our database; in other words, pre-populate our tables.</p>\n<p>Similarly to migrations, we want to customize where our seed files are generated using our knexfile</p>\n<p>To create a seed run: knex seed:make 001-seedName</p>\n<p>Numbering is a good idea because Knex doesn't attach a timestamp to the name like migrate does. Adding numbers to the file name, we can control the order in which they run.</p>\n<p>We want to create seeds for our accounts table:</p>\n<p>knex seed:make 001-accounts</p>\n<p>A file will appear in the designated seed folder.</p>\n<p>Run the seed files by typing:</p>\n<p>knex seed:run</p>\n<p>You can now use SQLite Studio to confirm that the accounts table has two entries.</p>\n<h1>Day #3:</h1>\n<h2><strong>Overview</strong></h2>\n<p><strong>Foreign keys</strong> are a type of table field used for creating links between tables. Like <strong>primary keys</strong>, they are most often integers that identify (rather than store) data. However, whereas a primary key is used to id rows in a table, foreign keys are used to connect a record in one table to a record in a second table.</p>\n<h2><strong>Follow Along</strong></h2>\n<p>Consider the following farms and ranchers tables.</p>\n<p><a href=\"https://www.notion.so/5b20c5e233dd4a70a33d6ab2c2e1c8bb\">Untitled</a></p>\n<p><a href=\"https://www.notion.so/0b0a909c24a9474fb9df80938546f12a\">Untitled</a></p>\n<p>The farm<em>id in the ranchers table is an example of a foreign key. Each entry in the farm</em>id (foreign key) column corresponds to an id (primary key) in the farms table. This allows us to track which farm each rancher belongs to while keeping the tables normalized.</p>\n<p>If we could only see the ranchers table, we would know that John, Jane, and Jen all work together and that Jim and Jay also work together. However, to know where any of them work, we would need to look at the farms table.</p>\n<p>Now that we understand the basics of querying data from a single table, let's move on to selecting data from multiple tables using JOIN operations.</p>\n<h2><strong>Overview</strong></h2>\n<p>We can use a JOIN to combine query data from multiple tables using a single SELECT statement.</p>\n<p>There are different types of joins; some are listed below:</p>\n<ul>\n<li>inner joins.</li>\n<li>outer joins.</li>\n<li>left joins.</li>\n<li>right joins.</li>\n<li>cross joins.</li>\n<li>non-equality joins.</li>\n<li>self joins.</li>\n</ul>\n<p>Using joins requires that the two tables of interest contain at least one field with shared information. For example, if a <em>departments</em> table has an <em>id</em> field, and an employee table has a <em>department_id</em> field, and the values that exist in the <em>id</em> column of the <em>departments</em> table live in the <em>department_id</em> field of the employee table, we can use those fields to join both tables like so:</p>\n<p>This query will return the data from both tables for every instance where the ON condition is true. If there are employees with no value for department<em>id or where the value stored in the field does not correspond to an existing id in the</em> departments <em>table, then that record will NOT be returned. In a similar fashion, any records from the</em> departments <em>table that don't have an employee associated with them will also be omitted from the results. Basically, if the</em> id* does not show as the value of department_id for an employee, it won't be able to join.</p>\n<p>We can shorten the condition by giving the table names an alias. This is a common practice. Below is the same example using aliases, picking which fields to return and sorting the results:</p>\n<p>Notice that we can take advantage of white space and indentation to make queries more readable.</p>\n<p>There are several ways of writing joins, but the one shown here should work on all database management systems and avoid some pitfalls, so we recommend it.</p>\n<p>The syntax for performing a similar join using Knex is as follows:</p>\n<h2><strong>Follow Along</strong></h2>\n<p>A good explanation of how the different types of joins can be seen <a href=\"https://www.w3resource.com/sql/joins/sql-joins.php\">in this article from w3resource.com (Links to an external site.)</a>.</p>\n<h1>What is SQL Joins?</h1>\n<p>An SQL JOIN clause combines rows from two or more tables. It creates a set of rows in a temporary table.</p>\n<h1>How to Join two tables in SQL?</h1>\n<p>A JOIN works on two or more tables if they have at least one common field and have a relationship between them.</p>\n<p>JOIN keeps the base tables (structure and data) unchanged.</p>\n<h1>Join vs. Subquery</h1>\n<ul>\n<li>JOINs are faster than a subquery and it is very rare that the opposite.</li>\n<li>In JOINs the RDBMS calculates an execution plan, that can predict, what data should be loaded and how much it will take to processed and as a result this process save some times, unlike the subquery there is no pre-process calculation and run all the queries and load all their data to do the processing.</li>\n<li>A JOIN is checked conditions first and then put it into table and displays; where as a subquery take separate temp table internally and checking condition.</li>\n<li>When joins are using, there should be connection between two or more than two tables and each table has a relation with other while subquery means query inside another query, has no need to relation, it works on columns and conditions.</li>\n</ul>\n<h1>SQL JOINS: EQUI JOIN and NON EQUI JOIN</h1>\n<p>The are two types of SQL JOINS - EQUI JOIN and NON EQUI JOIN</p>\n<ol>\n<li>SQL EQUI JOIN :</li>\n</ol>\n<p>The SQL EQUI JOIN is a simple SQL join uses the equal sign(=) as the comparison operator for the condition. It has two types - SQL Outer join and SQL Inner join.</p>\n<ol>\n<li>SQL NON EQUI JOIN :</li>\n</ol>\n<p>The <strong>SQL NON EQUI JOIN</strong> is a join uses comparison operator other than the equal sign like >, &#x3C;, >=, &#x3C;= with the condition.</p>\n<p><strong>SQL EQUI JOIN : INNER JOIN and OUTER JOIN</strong></p>\n<p>The SQL EQUI JOIN can be classified into two types - INNER JOIN and OUTER JOIN</p>\n<ol>\n<li>SQL INNER JOIN</li>\n</ol>\n<p>This type of EQUI JOIN returns all rows from tables where the key record of one table is equal to the key records of another table.</p>\n<ol>\n<li>SQL OUTER JOIN</li>\n</ol>\n<p>This type of EQUI JOIN returns all rows from one table and only those rows from the secondary table where the joined condition is satisfying i.e. the columns are equal in both tables.</p>\n<p>In order to perform a JOIN query, the required information we need are:</p>\n<p><strong>a)</strong> The name of the tables<strong>b)</strong> Name of the columns of two or more tables, based on which a condition will perform.</p>\n<p><strong>Syntax:</strong></p>\n<p><strong>Parameters:</strong></p>\n<p><a href=\"https://www.notion.so/5522c3e6d5d0443eb870f7a34f60c7ff\">Untitled</a></p>\n<p><strong>Pictorial Presentation of SQL Joins:</strong></p>\n<p><img src=\"https://www.w3resource.com/w3r_images/sql-joins-all.gif\"></p>\n<p><strong>Example:</strong></p>\n<p><strong>Sample table: company</strong></p>\n<p><strong>Sample table: foods</strong></p>\n<p>To join two tables 'company' and 'foods', the following SQL statement can be used :</p>\n<p><strong>SQL Code:</strong></p>\n<p>Copy</p>\n<p>Output:</p>\n<h2><strong>Overview</strong></h2>\n<p>While we can write database code directly into our endpoints, best practices dictate that all database logic exists in separate, modular methods. These files containing database access helpers are often called <strong>models</strong></p>\n<h2><strong>Follow Along</strong></h2>\n<p>To handle CRUD operations for a single resource, we would want to create a <strong>model</strong> (or database access file) containing the following methods:</p>\n<p>Each of these functions would use Knex logic to perform the necessary database operation.</p>\n<p>For each method, we can choose what value to return. For example, we may prefer findById() to return a single user object rather than an array.</p>\n<p>We can also use existing methods like findById() to help add() return the new user (instead of just the id).</p>\n<p>Once all methods are written as desired, we can export them like so:</p>\n<p>…and use the helpers in our endpoints</p>\n<p>There should no be knex code in the endpoints themselves.</p>\n<h1>Day #4:</h1>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/5ecaf43d-ee27-4da1-aa3c-aa1d9d96cc40/Untitled.png\"></p>\n<h2><strong>Overview</strong></h2>\n<p>Normalization is the process of designing or refactoring database tables for maximum consistency and minimum redundancy.</p>\n<p>With objects, we're used to <em>denormalized</em> data, stored with ease of use and speed in mind. Non-normalized tables are considered ineffective in relational databases.</p>\n<h2><strong>Follow Along</strong></h2>\n<p><strong>Data normalization</strong> is a deep topic in database design. To begin thinking about it, we'll explore a few basic guidelines and some data examples that violate these rules.</p>\n<h3><strong>Normalization Guidelines</strong></h3>\n<ul>\n<li>Each record has a primary key.</li>\n<li>No fields are repeated.</li>\n<li>All fields relate directly to the key data.</li>\n<li>Each field entry contains a single data point.</li>\n<li>There are no redundant entries.</li>\n</ul>\n<h3><strong>Denormalized Data</strong></h3>\n<p><a href=\"https://www.notion.so/19a01f68a659470fb85bbe6906fb4bad\">Untitled</a></p>\n<p>This table has two issues. There is no proper id field (as multiple farms may have the same name), and multiple fields are representing the same type of data: animals.</p>\n<p><a href=\"https://www.notion.so/075ad6dd99ac48698625d7b56ca67bef\">Untitled</a></p>\n<p>While we have now eliminated the first two issues, we now have multiple entries in one field, separated by commas. This isn't good either, as its another example of denormalization. There is no \"array\" data type in a relational database, so each field must contain only one data point.</p>\n<p><a href=\"https://www.notion.so/375a15b0cb3f444a8698cd6cb3a08fe0\">Untitled</a></p>\n<p>Now we've solved the multiple fields issue, but we created repeating data (the farm field), which is also an example of denormalization. As well, we can see that if we were tracking additional ranch information (such as annual revenue), that field is only vaguely related to the animal information.</p>\n<p><strong>When these issues begin arising in your schema design, it means that you should separate information into two or more tables.</strong></p>\n<h3><strong>Anomalies</strong></h3>\n<p>Obeying the above guidelines prevent <strong>anomalies</strong> in your database when inserting, updating, or deleting. For example, imagine if the revenue of Beech Ranch changed. With our denormalized schema, it may get updated in some records but not others:</p>\n<p><a href=\"https://www.notion.so/e05f5b2e8ff141798adc6f188f56f31e\">Untitled</a></p>\n<p>Similarly, if Beech Ranch shut down, there would be three (if not more) records that needed to be deleted to remove a single farm.</p>\n<p>Thus a denormalized table opens the door for contradictory, confusing, and unusable data.</p>\n<h2><strong>Challenge</strong></h2>\n<p>What issues does the following table have?</p>\n<p><a href=\"https://www.notion.so/2793e8f6b70a47f48f9208779366e69e\">Untitled</a></p>\n<h2><strong>Overview</strong></h2>\n<p>There are three types of relationships:</p>\n<ul>\n<li>One to one.</li>\n<li>One to many.</li>\n<li>Many to many.</li>\n</ul>\n<p>Determining how data is related can provide a set of guidelines for table representation and guides the use of foreign keys to connect said tables.</p>\n<h2><strong>Follow Along</strong></h2>\n<h3><strong>One to One Relationships</strong></h3>\n<p>Imagine we are storing the financial projections for a series of farms.</p>\n<p>We may wish to attach fields like farm name, address, description, projected revenue, and projected expenses. We could divide these fields into two categories: information related to the farm directly (name, address, description) and information related to the financial projections (revenue, expenses).</p>\n<p>We would say that farms and projections have a <strong>one-to-one</strong> relationship. This is to say that every farm has exactly one projection, and every project corresponds to exactly one farm.</p>\n<p>This data can be represented in two tables: farms and projections</p>\n<p><a href=\"https://www.notion.so/944e594f3464473ea06383bfdea13265\">Untitled</a></p>\n<p><a href=\"https://www.notion.so/de32fcf6760e45f284707274433fee92\">Untitled</a></p>\n<p>The farm_id is the foreign key that links farms and projections together.</p>\n<p>Notes about one-to-one relationships:</p>\n<ul>\n<li>The foreign key should always have a unique constraint to prevent duplicate entries. In the example above, we wouldn't want to allow multiple projections records for one farm.</li>\n<li>The foreign key can be in either table. For example, we may have had a projection_id in the farms table instead. A good rule of thumb is to put the foreign key in whichever table is more auxiliary to the other.</li>\n<li>You can represent one-to-one data in a single table <em>without</em> creating anomalies. However, it is sometimes prudent to use two tables as shown above to keep separate concerns in separate tables.</li>\n</ul>\n<h3><strong>One to Many Relationships</strong></h3>\n<p>Now imagine, we are storing the full-time ranchers employed at each farm. In this case, each rancher would only work at one farm however, each farm may have multiple ranchers.</p>\n<p>This is called a <strong>one-to-many</strong> relationship.</p>\n<p>This is the most common type of relationship between entities. Some other examples:</p>\n<ul>\n<li>One customer can have many orders.</li>\n<li>One user can have many posts.</li>\n<li>One post can have many comments.</li>\n</ul>\n<p>Manage this type of relationship by adding a foreign key on the \"many\" table of the relationship that points to the primary key on the \"one\" table. Consider the farms and ranchers tables.</p>\n<p><a href=\"https://www.notion.so/7dfd2e69c9804a01845f2e9b716a5ac2\">Untitled</a></p>\n<p><a href=\"https://www.notion.so/c95f3d418db94ab4b4532eeba0e4f918\">Untitled</a></p>\n<p>In a many-to-many relationship, the foreign key (in this case farm_id) should <em>not</em> be unique.</p>\n<h3><strong>Many to Many Relationships</strong></h3>\n<p>If we want to track animals on a farm as well, we must explore the <strong>many-to-many</strong> relationship. A farm has multiple animals, and multiple of each type of animal is present at multiple different farms.</p>\n<p>Some other examples:</p>\n<ul>\n<li>an order can have many products and the same product will appear in many orders.</li>\n<li>a book can have more than one author, and an author can write more than one book.</li>\n</ul>\n<p>To model this relationship, we need to introduce an <strong>intermediary table</strong> that holds foreign keys that reference the primary key on the related tables. We now have a farms, animals, and farm_animals table.</p>\n<p><a href=\"https://www.notion.so/3269812d7c2a4578b1a9f6bc27e485b1\">Untitled</a></p>\n<p><a href=\"https://www.notion.so/c2642c7f632f489cb1b9639c80b8400d\">Untitled</a></p>\n<p><a href=\"https://www.notion.so/d0b0042c5e104edd9ed55e122af89084\">Untitled</a></p>\n<p>While each foreign key on the intermediary table is not unique, the combinations of keys should be unique.</p>\n<h2><strong>Overview</strong></h2>\n<p>The Knex query builder library also allows us to create multi-table schemas include foreign keys. However, there are a few extra things to keep in mind when designing a multi-table schema, such as using the correct order when creating tables, dropping tables, seeding data, and removing data.</p>\n<p>We have to consider the way that delete and updates through our API will impact related data.</p>\n<h2><strong>Follow Along</strong></h2>\n<h3><strong>Foreign Key Setup</strong></h3>\n<p>In Knex, foreign key restrictions don't automatically work. Whenever using foreign keys in your schema, add the following code to your knexfile. This will prevent users from entering bad data into a foreign key column.</p>\n<h3><strong>Migrations</strong></h3>\n<p>Let's look at how we might track our farms and ranchers using Knex. In our migration file's up function, we would want to create two tables:</p>\n<p>Note that the foreign key can only be created <em>after</em> the reference table.</p>\n<p>In the down function, the opposite is true. We always want to drop a table with a foreign key <em>before</em> dropping the table it references.</p>\n<p>In the case of a many-to-many relationship, the syntax for creating an intermediary table is identical, except for one additional piece. We need a way to make sure our combination of foreign keys is unique.</p>\n<h3><strong>Seeds</strong></h3>\n<p>Order is also a concern when seeding. We want to create seeds in the <strong>same</strong> order we created our tables. In other words, don't create a seed with a foreign key, until that reference record exists.</p>\n<p>In our example, make sure to write the 01-farms seed file and then the 02-ranchers seed file.</p>\n<p>However, we run into a problem with truncating our seeds, because we want to truncate 02-ranchers <em>before</em> 01-farms. A library called knex-cleaner provides an easy solution for us.</p>\n<p>Run knex seed:make 00-cleanup and npm install knex-cleaner. Inside the cleanup seed, use the following code.</p>\n<p>This removes all tables (excluding the two tables that track migrations) in the correct order before any seed files run.</p>\n<h3><strong>Cascading</strong></h3>\n<p>If a user attempt to delete a record that is referenced by another record (such as attempting to delete Morton Ranch when entries in our ranchers table reference that record), by default, the database will block the action. The same thing can happen when updating a record when a foreign key reference.</p>\n<p>If we want that to override this default, we can delete or update with <strong>cascade</strong>. With cascade, deleting a record also deletes all referencing records, we can set that up in our schema.</p>"},{"url":"/blog/","relativePath":"blog/index.md","relativeDir":"blog","base":"index.md","name":"index","frontmatter":{"title":"Blog","subtitle":"Exclusive Blog Content","image":"images/maroon-onion.gif","has_more_link":true,"more_link_text":"Read more","seo":{"title":"Blog","description":"These are blog posts... not nescisarily different from the docs section except these pieces are more subject to my own opinions.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Blog","keyName":"property"},{"name":"og:description","value":"This is the blog page","keyName":"property"},{"name":"og:image","value":"images/5.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Blog"},{"name":"twitter:description","value":"This is the blog page"},{"name":"twitter:image","value":"images/5.jpg","relativeUrl":true}]},"template":"blog"},"html":""},{"url":"/blog/my-medium/","relativePath":"blog/my-medium.md","relativeDir":"blog","base":"my-medium.md","name":"my-medium","frontmatter":{"title":"My Medium Articles","date":"2021-05-23","image":"images/medium.png","seo":{"title":"Medium Articles","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"Medium Articles","keyName":"property"},{"name":"og:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit","keyName":"property"},{"name":"og:image","value":"images/medium.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Medium Articles"},{"name":"twitter:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit"},{"name":"twitter:image","value":"images/medium.png","relativeUrl":true}]},"template":"post","thumb_image":"images/web-dev-back.jpg"},"html":"<h1>A list of all of my articles to link to future posts</h1>\n<p>You should probably skip this one… seriously it’s just for internal use!</p>\n<hr>\n<h3>A list of all of my articles to link to future posts</h3>\n<p>You should probably skip this one… seriously it’s just for internal use!</p>\n<p><a href=\"https://bryanguner.medium.com/\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/\"><strong>Bryan Guner - Medium</strong><br />\n<em>A plethora of front-end code playgrounds have appeared over the years. They offer a convenient way to experiment with…</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/codex/postgresql-cheat-sheet-718b813d3e31\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/codex/postgresql-cheat-sheet-718b813d3e31\"><strong>Postgresql Cheat Sheet</strong><br />\n<em>PostgreSQL commands</em>medium.com</a><a href=\"https://medium.com/codex/postgresql-cheat-sheet-718b813d3e31\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/everything-you-need-to-get-started-with-vscode-extensions-resources-b9f4c8d91931\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/everything-you-need-to-get-started-with-vscode-extensions-resources-b9f4c8d91931\"><strong>Everything You Need to Get Started With VSCode + Extensions &#x26; Resources</strong><br />\n<em>Commands:</em>levelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/everything-you-need-to-get-started-with-vscode-extensions-resources-b9f4c8d91931\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/super-simple-intro-to-html-651d695f9bc\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/super-simple-intro-to-html-651d695f9bc\"><strong>Super Simple Intro To HTML</strong><br />\n<em>What is HTML, CSS &#x26; JS and why do we need all three?</em>levelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/super-simple-intro-to-html-651d695f9bc\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/understanding-git-a-beginners-guide-containing-cheat-sheets-resources-b50c9c01a107\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/understanding-git-a-beginners-guide-containing-cheat-sheets-resources-b50c9c01a107\"><strong>Understanding Git (A Beginners Guide Containing Cheat Sheets &#x26; Resources)</strong><br />\n<em>Basic Git Work Flow.</em>levelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/understanding-git-a-beginners-guide-containing-cheat-sheets-resources-b50c9c01a107\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/git-tricks-57e8d0292285\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/git-tricks-57e8d0292285\"><strong>Git-Tricks</strong><br />\n<em>Refs</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/git-tricks-57e8d0292285\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/star-gazers/a-quick-guide-to-big-o-notation-memoization-tabulation-and-sorting-algorithms-by-example-803ff193c522\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/star-gazers/a-quick-guide-to-big-o-notation-memoization-tabulation-and-sorting-algorithms-by-example-803ff193c522\"><strong>A Quick Guide to Big-O Notation, Memoization, Tabulation, and Sorting Algorithms by Example</strong><br />\n<em>Curating Complexity: A Guide to Big-O Notation</em>medium.com</a><a href=\"https://medium.com/star-gazers/a-quick-guide-to-big-o-notation-memoization-tabulation-and-sorting-algorithms-by-example-803ff193c522\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/python-study-guide-for-a-native-javascript-developer-5cfdf3d2bdfb\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/python-study-guide-for-a-native-javascript-developer-5cfdf3d2bdfb\"><strong>Python Study Guide for a JavaScript Programmer</strong><br />\n<em>A guide to commands in Python from what you know in JavaScript</em>levelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/python-study-guide-for-a-native-javascript-developer-5cfdf3d2bdfb\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/lists-stacks-and-queues-in-javascript-88466fae0fbb\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/lists-stacks-and-queues-in-javascript-88466fae0fbb\"><strong>Lists Stacks and Queue’s In JavaScript</strong><br />\n<em>A simple to follow guide to these fundamental data structures with animated gifs, diagrams, and code examples!</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/lists-stacks-and-queues-in-javascript-88466fae0fbb\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/web-development-resources-part-3-f862ceb2b82a\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/web-development-resources-part-3-f862ceb2b82a\"><strong>Web Development Resources Part 3</strong><br />\n<em>I’m the psychological equivalent of a physical hoarder only instead of empty soda cans and dead racoons it’s lists of…</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/web-development-resources-part-3-f862ceb2b82a\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://javascript.plainenglish.io/my-take-on-awesome-javascript-243255451e74\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://javascript.plainenglish.io/my-take-on-awesome-javascript-243255451e74\"><strong>My ‘awesome’ list of JavaScript resources</strong><br />\n<em>Everyone’s seen the ‘Awesome’ lists on GitHub… and they are indeed awesome… so today I am going to attempt to curate my…</em>javascript.plainenglish.io</a><a href=\"https://javascript.plainenglish.io/my-take-on-awesome-javascript-243255451e74\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/star-gazers/web-developer-resource-list-part-2-9c5cb56ab263\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/star-gazers/web-developer-resource-list-part-2-9c5cb56ab263\"><strong>Web Developer Resource List Part 2</strong><br />\n<em>Because I compile these things compulsively anyway…</em>medium.com</a><a href=\"https://medium.com/star-gazers/web-developer-resource-list-part-2-9c5cb56ab263\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/web-development-interview-part-3-826ae81a9107\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/web-development-interview-part-3-826ae81a9107\"><strong>Web Development Interview Part 3💻</strong><br />\n<em>This installment is going to be the least technically demanding thus far however these questions are a more realistic…</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/web-development-interview-part-3-826ae81a9107\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/star-gazers/the-web-developers-technical-interview-e347d7db3822\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/star-gazers/the-web-developers-technical-interview-e347d7db3822\"><strong>The Web Developer’s Technical Interview</strong><br />\n<em>Questions…. Answers… and links to the missing pieces.</em>medium.com</a><a href=\"https://medium.com/star-gazers/the-web-developers-technical-interview-e347d7db3822\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/codex/front-end-interview-questions-part-2-86ddc0e91443\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/codex/front-end-interview-questions-part-2-86ddc0e91443\"><strong>Front End Interview Questions Part 2</strong><br />\n<em>These will focus more on vocabulary and concepts than the application driven approach in my last post!</em>medium.com</a><a href=\"https://medium.com/codex/front-end-interview-questions-part-2-86ddc0e91443\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/running-list-of-interesting-articles-tools-and-ideas-as-i-explore-them-b87a2f04d9a6\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/running-list-of-interesting-articles-tools-and-ideas-as-i-explore-them-b87a2f04d9a6\"><strong>Running List Of Interesting Articles, Tools and Ideas… as I Explore Them</strong><br />\n<em>Translation if you read this today (3/21/2021) it will be exceedingly short… because it’s just gonna accumulate entries…</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/running-list-of-interesting-articles-tools-and-ideas-as-i-explore-them-b87a2f04d9a6\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/the-best-cloud-based-code-playgrounds-of-2021-part-1-cdae9448db24\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/the-best-cloud-based-code-playgrounds-of-2021-part-1-cdae9448db24\"><strong>The Best Cloud-Based Code Playgrounds of 2021 (Part 1)</strong><br />\n<em>A plethora of front-end code playgrounds have appeared over the years. They offer a convenient way to experiment with…</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/the-best-cloud-based-code-playgrounds-of-2021-part-1-cdae9448db24\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/codex/fundamental-data-structures-in-javascript-8f9f709c15b4\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/codex/fundamental-data-structures-in-javascript-8f9f709c15b4\"><strong>Fundamental Data Structures In JavaScript</strong><br />\n<em>Data structures in JavaScript</em>medium.com</a><a href=\"https://medium.com/codex/fundamental-data-structures-in-javascript-8f9f709c15b4\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/http-basics-8f02a96a834a\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/http-basics-8f02a96a834a\"><strong>HTTP Basics</strong><br />\n<em>“If you want to build a ship, don’t drum up the men and women to gather wood, divide the work, and give orders…</em>levelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/http-basics-8f02a96a834a\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://javascript.plainenglish.io/javascript-frameworks-libraries-35931e187a35\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://javascript.plainenglish.io/javascript-frameworks-libraries-35931e187a35\"><strong>JavaScript Frameworks &#x26; Libraries</strong><br />\n<em>My Awesome JavaScript List Part 2</em>javascript.plainenglish.io</a><a href=\"https://javascript.plainenglish.io/javascript-frameworks-libraries-35931e187a35\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://github.com/bgoonz/Cumulative-Resource-List/tree/master/README-s\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz/Cumulative-Resource-List/tree/master/README-s\"><strong>bgoonz/Cumulative-Resource-List</strong><br />\n<em>List of useful cheatsheets Inspired by @sindresorhus awesome and improved by these amazing contributors . If you see a…</em>github.com</a><a href=\"https://github.com/bgoonz/Cumulative-Resource-List/tree/master/README-s\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/my-favorite-vscode-themes-9bab65af3f0f\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/my-favorite-vscode-themes-9bab65af3f0f\"><strong>My Favorite VSCode <em>Themes</em></strong><br />\nThemeslevelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/my-favorite-vscode-themes-9bab65af3f0f\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/codex/javascript-rotate-array-problemwalkthrough-31deb19ebba1\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/codex/javascript-rotate-array-problemwalkthrough-31deb19ebba1\"><strong>JavaScript Rotate (Array) ProblemWalkthrough</strong><br />\n<em>Explanation for Rotate Right</em>medium.com</a><a href=\"https://medium.com/codex/javascript-rotate-array-problemwalkthrough-31deb19ebba1\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/everything-you-need-to-know-about-relational-databases-sql-postgresql-and-sequelize-to-build-8acb68284a98\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/everything-you-need-to-know-about-relational-databases-sql-postgresql-and-sequelize-to-build-8acb68284a98\"><strong>Everything You Need To Know About Relational Databases, SQL, PostgreSQL and Sequelize To Build…</strong><br />\n<em>For Front end developers who like myself struggle with making the jump to fullstack.</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/everything-you-need-to-know-about-relational-databases-sql-postgresql-and-sequelize-to-build-8acb68284a98\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://javascript.plainenglish.io/complete-javascript-reference-guide-64306cd6b0db\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://javascript.plainenglish.io/complete-javascript-reference-guide-64306cd6b0db\"><strong>The Complete JavaScript Reference Guide</strong><br />\n<em>You will want to bookmark this</em>javascript.plainenglish.io</a><a href=\"https://javascript.plainenglish.io/complete-javascript-reference-guide-64306cd6b0db\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/geekculture/modules-in-javascript-a55333e35978\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/geekculture/modules-in-javascript-a55333e35978\"><strong>Modules in Javascript</strong><br />\n<em>Differences between Node.js and browsers</em>medium.com</a><a href=\"https://medium.com/geekculture/modules-in-javascript-a55333e35978\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/an-introduction-to-markdown-bonus-markdown-templates-included-3497ce56de3\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/an-introduction-to-markdown-bonus-markdown-templates-included-3497ce56de3\"><strong>An Introduction to Markdown (Bonus Markdown Templates Included)</strong><br />\n<em>Basic Syntax Guide</em>levelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/an-introduction-to-markdown-bonus-markdown-templates-included-3497ce56de3\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/web-dev-resources-ec1975773d7d\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/web-dev-resources-ec1975773d7d\"><strong>Web Dev Resources</strong><br />\n<em>Web Development</em>levelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/web-dev-resources-ec1975773d7d\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<p><a href=\"https://medium.com/codex/regular-expressions-4d8fb3eb146b\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/codex/regular-expressions-4d8fb3eb146b\"><strong>Regular Expressions</strong><br />\n<em>description:</em>medium.com</a><a href=\"https://medium.com/codex/regular-expressions-4d8fb3eb146b\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/a-collection-of-my-most-useful-gist-entries-f4314f3ba3ab\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/a-collection-of-my-most-useful-gist-entries-f4314f3ba3ab\"><strong>A Collection of my most useful Gist Entries</strong><br />\n<em>This list is in no particular order!</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/a-collection-of-my-most-useful-gist-entries-f4314f3ba3ab\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/vscode-extension-readme-compilation-92c60342cc8a\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/vscode-extension-readme-compilation-92c60342cc8a\"><strong>VsCode Extension Readme Compilation</strong><br />\n<em>Markdown PDF</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/vscode-extension-readme-compilation-92c60342cc8a\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://javascript.plainenglish.io/learn-css-so-that-your-site-doesnt-look-like-garbage-938871b4521a\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://javascript.plainenglish.io/learn-css-so-that-your-site-doesnt-look-like-garbage-938871b4521a\"><strong>Learn CSS So That Your Site Doesn’t Look Like Garbage</strong><br />\n<em>CSS Selectors</em>javascript.plainenglish.io</a><a href=\"https://javascript.plainenglish.io/learn-css-so-that-your-site-doesnt-look-like-garbage-938871b4521a\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/postgresql-setup-for-windows-wsl-ubuntu-801672ab7089\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/postgresql-setup-for-windows-wsl-ubuntu-801672ab7089\"><strong>PostgreSQL Setup For Windows &#x26; WSL/Ubuntu</strong><br />\n<em>If you follow this guide to a tee… you will install PostgreSQL itself on your Windows installation. Then, you will…</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/postgresql-setup-for-windows-wsl-ubuntu-801672ab7089\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/emmet-cheat-sheet-24758e628d37\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/emmet-cheat-sheet-24758e628d37\"><strong>Emmet Cheat Sheet</strong><br />\n<em>EMMET</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/emmet-cheat-sheet-24758e628d37\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/express-quick-sheet-8f93762c59ca\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/express-quick-sheet-8f93762c59ca\"><strong>Express Quick Sheet</strong><br />\n<em>Settings</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/express-quick-sheet-8f93762c59ca\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/deploy-react-app-to-heroku-using-postgres-express-70b7ea807986\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/deploy-react-app-to-heroku-using-postgres-express-70b7ea807986\"><strong>Deploy React App To Heroku Using Postgres &#x26; Express</strong><br />\n<em>Heroku is an web application that makes deploying applications easy for a beginner.</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/deploy-react-app-to-heroku-using-postgres-express-70b7ea807986\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<p><a href=\"https://levelup.gitconnected.com/basic-web-development-environment-setup-9f36c3f15afe\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://levelup.gitconnected.com/basic-web-development-environment-setup-9f36c3f15afe\"><strong>Basic Web Development Environment Setup</strong><br />\n<em>Windows Subsystem for Linux (WSL) and Ubuntu</em>levelup.gitconnected.com</a><a href=\"https://levelup.gitconnected.com/basic-web-development-environment-setup-9f36c3f15afe\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><a href=\"https://bryanguner.medium.com/fetch-quick-sheet-8872650742b4\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/fetch-quick-sheet-8872650742b4\"><strong><em>Fetch</em> Quick Sheet</strong><br />\nFetchbryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/fetch-quick-sheet-8872650742b4\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<p>By <a href=\"https://medium.com/@bryanguner\" class=\"p-author h-card\">Bryan Guner</a> on <a href=\"https://medium.com/p/1f6f88ebdf5b\">March 22, 2021</a>.</p>\n<p><a href=\"https://medium.com/@bryanguner/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b\" class=\"p-canonical\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on May 23, 2021.</p>"},{"url":"/blog/git-gateway/","relativePath":"blog/git-gateway.md","relativeDir":"blog","base":"git-gateway.md","name":"git-gateway","frontmatter":{"title":"Git Bash","subtitle":"understanding git bsh","date":"2021-09-30","thumb_image_alt":"lorem-ipsum","excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post"},"html":"<h2>Lorem ipsum</h2>\n<p>Lorem ipsum dolor sit amet, <strong>consectetur adipiscing elit</strong>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<ul>\n<li>Lorem ipsum</li>\n<li>dolor sit amet</li>\n</ul>"},{"url":"/blog/platform-docs/","relativePath":"blog/platform-docs.md","relativeDir":"blog","base":"platform-docs.md","name":"platform-docs","frontmatter":{"title":"Netlify CMS Intro","date":"2021-05-23","image":"images/curious-europa.gif","seo":{"title":"Platform Docs","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"Platform Docs","keyName":"property"},{"name":"og:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit","keyName":"property"},{"name":"og:image","value":"images/curious-europa.gif","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Platform Docs"},{"name":"twitter:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit"},{"name":"twitter:image","value":"images/curious-europa.gif","relativeUrl":true}]},"template":"post","thumb_image":"images/redu-squarex.jpg"},"html":"<h1>Add to Your Site | Netlify CMS</h1>\n<blockquote>\n<p>Open source content management for your Git workflow</p>\n</blockquote>\n<p>You can adapt Netlify CMS to a wide variety of projects. It works with any content written in markdown, JSON, YAML, or TOML files, stored in a repo on <a href=\"https://github.com/\">GitHub</a>, <a href=\"https://about.gitlab.com/\">GitLab</a>, or <a href=\"https://bitbucket.org/\">Bitbucket</a>. You can also create your own custom backend.</p>\n<p>This tutorial guides you through the steps for adding Netlify CMS to a site that's built with a common <a href=\"https://www.staticgen.com/\">static site generator</a>, like Jekyll, Hugo, Hexo, or Gatsby. Alternatively, you can <a href=\"chrome-extension://cjedbglnccaioiolemnfhjncicchinao/start-with-a-template\">start from a template</a> or dive right into <a href=\"chrome-extension://cjedbglnccaioiolemnfhjncicchinao/configuration-options\">configuration options</a>.</p>\n<h2><a href=\"#app-file-structure\"></a>App File Structure</h2>\n<p>A static <code>admin</code> folder contains all Netlify CMS files, stored at the root of your published site. Where you store this folder in the source files depends on your static site generator. Here's the static file location for a few of the most popular static site generators:</p>\n<table>\n<thead>\n<tr>\n<th>These generators</th>\n<th>store static files in</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Jekyll, GitBook</td>\n<td><code>/</code> (project root)</td>\n</tr>\n<tr>\n<td>Hugo, Gatsby, Nuxt, Gridsome, Zola, Sapper</td>\n<td><code>/static</code></td>\n</tr>\n<tr>\n<td>Next</td>\n<td><code>/public</code></td>\n</tr>\n<tr>\n<td>Hexo, Middleman, Jigsaw</td>\n<td><code>/source</code></td>\n</tr>\n<tr>\n<td>Spike</td>\n<td><code>/views</code></td>\n</tr>\n<tr>\n<td>Wyam</td>\n<td><code>/input</code></td>\n</tr>\n<tr>\n<td>Pelican</td>\n<td><code>/content</code></td>\n</tr>\n<tr>\n<td>VuePress</td>\n<td><code>/.vuepress/public</code></td>\n</tr>\n<tr>\n<td>Elmstatic</td>\n<td><code>/_site</code></td>\n</tr>\n<tr>\n<td>11ty</td>\n<td><code>/_site</code></td>\n</tr>\n<tr>\n<td>preact-cli</td>\n<td><code>/src/static</code></td>\n</tr>\n</tbody>\n</table>\n<p>If your generator isn't listed here, you can check its documentation, or as a shortcut, look in your project for a <code>css</code> or <code>images</code> folder. The contents of folders like that are usually processed as static files, so it's likely you can store your <code>admin</code> folder next to those. (When you've found the location, feel free to add it to these docs by <a href=\"https://github.com/netlify/netlify-cms/blob/master/CONTRIBUTING.md#pull-requests\">filing a pull request</a>!)</p>\n<p>Inside the <code>admin</code> folder, you'll create two files:</p>\n<pre><code>admin\n ├ index.html\n └ config.yml\n</code></pre>\n<p>The first file, <code>admin/index.html</code>, is the entry point for the Netlify CMS admin interface. This means that users navigate to <code>yoursite.com/admin/</code> to access it. On the code side, it's a basic HTML starter page that loads the Netlify CMS JavaScript file. In this example, we pull the file from a public CDN:</p>\n<pre><code>&#x3C;!doctype html>\n&#x3C;html>\n&#x3C;head>\n  &#x3C;meta charset=\"utf-8\" />\n  &#x3C;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  &#x3C;title>Content Manager&#x3C;/title>\n&#x3C;/head>\n&#x3C;body>\n\n  &#x3C;script src=\"https://unpkg.com/netlify-cms@^2.0.0/dist/netlify-cms.js\">&#x3C;/script>\n&#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<p>In the code above the <code>script</code> is loaded from the <code>unpkg</code> CDN. Should there be any issue, <code>jsDelivr</code> can be used as an alternative source. Simply set the <code>src</code> to <code>https://cdn.jsdelivr.net/npm/netlify-cms@^2.0.0/dist/netlify-cms.js</code></p>\n<p>The second file, <code>admin/config.yml</code>, is the heart of your Netlify CMS installation, and a bit more complex. The <a href=\"#configuration\">Configuration</a> section covers the details.</p>\n<h3><a href=\"#installing-with-npm\"></a>Installing with npm</h3>\n<p>You can also use Netlify CMS as an npm module. Wherever you import Netlify CMS, it automatically runs, taking over the current page. Make sure the script that imports it only runs on your CMS page. First install the package and save it to your project:</p>\n<pre><code>npm install netlify-cms-app --save\n</code></pre>\n<p>Then import it (assuming your project has tooling for imports):</p>\n<pre><code>import CMS from 'netlify-cms-app'\n\nCMS.init()\n\nCMS.registerPreviewTemplate('my-template', MyTemplate)\n</code></pre>\n<h2><a href=\"#configuration\"></a>Configuration</h2>\n<p>Configuration is different for every site, so we'll break it down into parts. Add all the code snippets in this section to your <code>admin/config.yml</code> file.</p>\n<h3><a href=\"#backend\"></a>Backend</h3>\n<p>We're using <a href=\"https://www.netlify.com/\">Netlify</a> for our hosting and authentication in this tutorial, so backend configuration is fairly straightforward.</p>\n<p>For GitHub and GitLab repositories, you can start your Netlify CMS <code>config.yml</code> file with these lines:</p>\n<pre><code>backend:\n  name: git-gateway\n  branch: master\n</code></pre>\n<p><em>(For Bitbucket repositories, use the <a href=\"chrome-extension://cjedbglnccaioiolemnfhjncicchinao/docs/bitbucket-backend\">Bitbucket backend</a> instructions instead.)</em></p>\n<p>The configuration above specifies your backend protocol and your publication branch. Git Gateway is an open source API that acts as a proxy between authenticated users of your site and your site repo. (We'll get to the details of that in the <a href=\"#authentication\">Authentication section</a> below.) If you leave out the <code>branch</code> declaration, it defaults to <code>master</code>.</p>\n<h3><a href=\"#editorial-workflow\"></a>Editorial Workflow</h3>\n<p><strong>Note:</strong> Editorial workflow works with GitHub repositories, and support for GitLab and Bitbucket is <a href=\"chrome-extension://cjedbglnccaioiolemnfhjncicchinao/docs/beta-features/#gitlab-and-bitbucket-editorial-workflow-support\">in beta</a>.</p>\n<p>By default, saving a post in the CMS interface pushes a commit directly to the publication branch specified in <code>backend</code>. However, you also have the option to enable the <a href=\"chrome-extension://cjedbglnccaioiolemnfhjncicchinao/configuration-options/#publish-mode\">Editorial Workflow</a>, which adds an interface for drafting, reviewing, and approving posts. To do this, add the following line to your Netlify CMS <code>config.yml</code>:</p>\n<pre><code>publish_mode: editorial_workflow\n</code></pre>\n<h3><a href=\"#media-and-public-folders\"></a>Media and Public Folders</h3>\n<p>Netlify CMS allows users to upload images directly within the editor. For this to work, the CMS needs to know where to save them. If you already have an <code>images</code> folder in your project, you could use its path, possibly creating an <code>uploads</code> sub-folder, for example:</p>\n<pre><code>media_folder: \"images/uploads\"\n</code></pre>\n<p>If you're creating a new folder for uploaded media, you'll need to know where your static site generator expects static files. You can refer to the paths outlined above in <a href=\"#app-file-structure\">App File Structure</a>, and put your media folder in the same location where you put the <code>admin</code> folder.</p>\n<p>Note that the<code>media_folder</code> file path is relative to the project root, so the example above would work for Jekyll, GitBook, or any other generator that stores static files at the project root. However, it would not work for Hugo, Hexo, Middleman or others that store static files in a subfolder. Here's an example that could work for a Hugo site:</p>\n<pre><code>media_folder: \"static/images/uploads\"\npublic_folder: \"/images/uploads\"\n</code></pre>\n<p>The configuration above adds a new setting, <code>public_folder</code>. While <code>media_folder</code> specifies where uploaded files are saved in the repo, <code>public_folder</code> indicates where they are found in the published site. Image <code>src</code> attributes use this path, which is relative to the file where it's called. For this reason, we usually start the path at the site root, using the opening <code>/</code>.</p>\n<p><em>If `public</em>folder<code>is not set, Netlify CMS defaults to the same value as</code>media<em>folder<code>, adding an opening</code>/` if one is not included.</em></p>\n<h3><a href=\"#collections\"></a>Collections</h3>\n<p>Collections define the structure for the different content types on your static site. Since every site is different, the <code>collections</code> settings differ greatly from one site to the next.</p>\n<p>Let's say your site has a blog, with the posts stored in <code>_posts/blog</code>, and files saved in a date-title format, like <code>1999-12-31-lets-party.md</code>. Each post begins with settings in yaml-formatted front matter, like so:</p>\n<pre><code>---\nlayout: blog\ntitle: \"Let's Party\"\ndate: 1999-12-31 11:59:59 -0800\nthumbnail: \"/images/prince.jpg\"\nrating: 5\n---\n\nThis is the post body, where I write about our last chance to party before the Y2K bug destroys us all.\n</code></pre>\n<p>Given this example, our <code>collections</code> settings would look like this in your NetlifyCMS <code>config.yml</code> file:</p>\n<pre><code>collections:\n  - name: \"blog\"\n    label: \"Blog\"\n    folder: \"_posts/blog\"\n    create: true\n    slug: \"{{year}}-{{month}}-{{day}}-{{slug}}\"\n    fields:\n      - {label: \"Layout\", name: \"layout\", widget: \"hidden\", default: \"blog\"}\n      - {label: \"Title\", name: \"title\", widget: \"string\"}\n      - {label: \"Publish Date\", name: \"date\", widget: \"datetime\"}\n      - {label: \"Featured Image\", name: \"thumbnail\", widget: \"image\"}\n      - {label: \"Rating (scale of 1-5)\", name: \"rating\", widget: \"number\"}\n      - {label: \"Body\", name: \"body\", widget: \"markdown\"}\n</code></pre>\n<p>Let's break that down:</p>\n<table><tbody><tr><td><code>name</code></td><td>Post type identifier, used in routes. Must be unique.</td></tr><tr><td><code>label</code></td><td>What the admin UI calls the post type.</td></tr><tr><td><code>folder</code></td><td>Where files of this type are stored, relative to the repo root.</td></tr><tr><td><code>create</code></td><td>Set to <code>true</code> to allow users to create new files in this collection.</td></tr><tr><td><code>slug</code></td><td>Template for filenames. <code>{{year}}</code>, <code>{{month}}</code>, and <code>{{day}}</code> pulls from the post's <code>date</code> field or save date. <code>{{slug}}</code> is a url-safe version of the post's <code>title</code>. Default is simply <code>{{slug}}</code>.</td></tr><tr><td><code>fields</code></td><td>Fields listed here are shown as fields in the content editor, then saved as front matter at the beginning of the document (except for <code>body</code>, which follows the front matter). Each field contains the following properties:<ul><li><code>label</code>: Field label in the editor UI.</li><li><code>name</code>: Field name in the document front matter.</li><li><code>widget</code>: Determines UI style and value data type (details below).</li><li><code>default</code> (optional): Sets a default value for the field.</li></ul></td></tr></tbody></table>\n<p>As described above, the <code>widget</code> property specifies a built-in or custom UI widget for a given field. When a content editor enters a value into a widget, that value is saved in the document front matter as the value for the <code>name</code> specified for that field. A full listing of available widgets can be found in the <a href=\"chrome-extension://cjedbglnccaioiolemnfhjncicchinao/widgets\">Widgets doc</a>.</p>\n<p>Based on this example, you can go through the post types in your site and add the appropriate settings to your Netlify CMS <code>config.yml</code> file. Each post type should be listed as a separate node under the <code>collections</code> field. See the <a href=\"chrome-extension://cjedbglnccaioiolemnfhjncicchinao/configuration-options/#collections\">Collections reference doc</a> for more configuration options.</p>\n<h3><a href=\"#filter\"></a>Filter</h3>\n<p>The entries for any collection can be filtered based on the value of a single field. The example collection below only shows post entries with the value <code>en</code> in the <code>language</code> field.</p>\n<pre><code>collections:\n  - name: \"posts\"\n    label: \"Post\"\n    folder: \"_posts\"\n    filter:\n      field: language\n      value: en\n    fields:\n      - {label: \"Language\", name: \"language\"}\n</code></pre>\n<h2><a href=\"#authentication\"></a>Authentication</h2>\n<p>Now that you have your Netlify CMS files in place and configured, all that's left is to enable authentication. We're using the <a href=\"https://www.netlify.com/\">Netlify</a> platform here because it's one of the quickest ways to get started, but you can learn about other authentication options in the <a href=\"chrome-extension://cjedbglnccaioiolemnfhjncicchinao/docs/backends-overview\">Backends</a> doc.</p>\n<h3><a href=\"#setup-on-netlify\"></a>Setup on Netlify</h3>\n<p>Netlify offers a built-in authentication service called Identity. In order to use it, connect your site repo with Netlify. Netlify has published a general <a href=\"https://www.netlify.com/blog/2016/10/27/a-step-by-step-guide-deploying-a-static-site-or-single-page-app/\">Step-by-Step Guide</a> for this, along with detailed guides for many popular static site generators, including <a href=\"https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/\">Jekyll</a>, <a href=\"https://www.netlify.com/blog/2016/09/21/a-step-by-step-guide-victor-hugo-on-netlify/\">Hugo</a>, <a href=\"https://www.netlify.com/blog/2015/10/26/a-step-by-step-guide-hexo-on-netlify/\">Hexo</a>, <a href=\"https://www.netlify.com/blog/2015/10/01/a-step-by-step-guide-middleman-on-netlify/\">Middleman</a>, <a href=\"https://www.netlify.com/blog/2016/02/24/a-step-by-step-guide-gatsby-on-netlify/\">Gatsby</a>, and more.</p>\n<h3><a href=\"#enable-identity-and-git-gateway\"></a>Enable Identity and Git Gateway</h3>\n<p>Netlify's Identity and Git Gateway services allow you to manage CMS admin users for your site without requiring them to have an account with your Git host or commit access on your repo. From your site dashboard on Netlify:</p>\n<ol>\n<li>Go to <strong>Settings > Identity</strong>, and select <strong>Enable Identity service</strong>.</li>\n<li>Under <strong>Registration preferences</strong>, select <strong>Open</strong> or <strong>Invite only</strong>. In most cases, you want only invited users to access your CMS, but if you're just experimenting, you can leave it open for convenience.</li>\n<li>If you'd like to allow one-click login with services like Google and GitHub, check the boxes next to the services you'd like to use, under <strong>External providers</strong>.</li>\n<li>Scroll down to <strong>Services > Git Gateway</strong>, and click <strong>Enable Git Gateway</strong>. This authenticates with your Git host and generates an API access token. In this case, we're leaving the <strong>Roles</strong> field blank, which means any logged in user may access the CMS. For information on changing this, check the <a href=\"https://www.netlify.com/docs/identity/\">Netlify Identity documentation</a>.</li>\n</ol>\n<h3><a href=\"#add-the-netlify-identity-widget\"></a>Add the Netlify Identity Widget</h3>\n<p>With the backend set to handle authentication, now you need a frontend interface to connect to it. The open source Netlify Identity Widget is a drop-in widget made for just this purpose. To include the widget in your site, add the following script tag in two places:</p>\n<pre><code>&#x3C;script src=\"https://identity.netlify.com/v1/netlify-identity-widget.js\">&#x3C;/script>\n</code></pre>\n<p>Add this to the <code>&#x3C;head></code> of your CMS index page at <code>/admin/index.html</code>, as well as the <code>&#x3C;head></code> of your site's main index page. Depending on how your site generator is set up, this may mean you need to add it to the default template, or to a \"partial\" or \"include\" template. If you can find where the site stylesheet is linked, that's probably the right place. Alternatively, you can include the script in your site using Netlify's <a href=\"https://www.netlify.com/docs/inject-analytics-snippets/\">Script Injection</a> feature.</p>\n<p>When a user logs in with the Netlify Identity widget, an access token directs to the site homepage. In order to complete the login and get back to the CMS, redirect the user back to the <code>/admin/</code> path. To do this, add the following script before the closing <code>body</code> tag of your site's main index page:</p>\n<pre><code>&#x3C;script>\n  if (window.netlifyIdentity) {\n    window.netlifyIdentity.on(\"init\", user => {\n      if (!user) {\n        window.netlifyIdentity.on(\"login\", () => {\n          document.location.href = \"/admin/\";\n        });\n      }\n    });\n  }\n&#x3C;/script>\n</code></pre>\n<p>Note: This example script requires modern JavaScript and does not work on IE11. For legacy browser support, use function expressions (<code>function () {}</code>) in place of the arrow functions (<code>() => {}</code>), or use a transpiler such as <a href=\"https://babeljs.io/\">Babel</a>.</p>\n<h2><a href=\"#accessing-the-cms\"></a>Accessing the CMS</h2>\n<p>Your site CMS is now fully configured and ready for login!</p>\n<p>If you set your registration preference to \"Invite only,\" invite yourself (and anyone else you choose) as a site user. To do this, select the <strong>Identity</strong> tab from your site dashboard, and then select the <strong>Invite users</strong> button. Invited users receive an email invitation with a confirmation link. Clicking the link will take you to your site with a login prompt.</p>\n<p>If you left your site registration open, or for return visits after confirming an email invitation, access your site's CMS at <code>yoursite.com/admin/</code>.</p>\n<p><strong>Note:</strong> No matter where you access Netlify CMS — whether running locally, in a staging environment, or in your published site — it always fetches and commits files in your hosted repository (for example, on GitHub), on the branch you configured in your Netlify CMS config.yml file. This means that content fetched in the admin UI matches the content in the repository, which may be different from your locally running site. It also means that content saved using the admin UI saves directly to the hosted repository, even if you're running the UI locally or in staging.</p>\n<p>Happy posting!</p>\n<p><a href=\"https://www.netlifycms.org/docs/add-to-your-site/\">Source</a></p>"},{"url":"/blog/data-structures/","relativePath":"blog/data-structures.md","relativeDir":"blog","base":"data-structures.md","name":"data-structures","frontmatter":{"title":"Leetcode (Data Structures)","subtitle":"practice","date":"2021-09-14","thumb_image_alt":"Big O Cheat Sheet","excerpt":"A guide to computational complexity","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"post","image":"images/ds.PNG","thumb_image":"images/bigo-446eaa35.png"},"html":"<h1>Leetcode</h1>\n<h2>Data Structures &#x26; Algorithms</h2>\n<p><a href=\"https://github.com/bgoonz/Data-Structures-Algos-Codebase\">DS Algo Codebase</a></p>\n<p><a href=\"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/distinct-subsequences/description/\">115. Distinct Subsequences</a></h2>\n<h3>Problem:</h3>\n<p>Given a string <strong>S</strong> and a string <strong>T</strong>, count the number of distinct subsequences of <strong>S</strong> which equals <strong>T</strong>.</p>\n<p>A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, <code>\"ACE\"</code> is a subsequence of <code>\"ABCDE\"</code> while <code>\"AEC\"</code> is not).</p>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^\n</code></pre>\n<h3>Solution:</h3>\n<p>Define <code>f(i, j)</code> to be the number of ways that generate <code>T[0...j)</code> from <code>S[0...i)</code>.</p>\n<p>For <code>f(i, j)</code> you can always skip <code>S[i-1]</code>, but can only take it when <code>S[i-1] === T[j-1]</code>.</p>\n<pre><code class=\"language-javascript\">f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)\n</code></pre>\n<p>Dynamic array can be used.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i &#x3C;= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};\n</code></pre>\n<hr>\n<p>Difficulty: Medium\nRelated Topics:\n\"Tree\": <a href=\"https://leetcode.com/tag/tree\">https://leetcode.com/tag/tree</a>\n\"Depth-first Search\": <a href=\"https://leetcode.com/tag/depth-first-search\">https://leetcode.com/tag/depth-first-search</a>\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": <a href=\"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii\">https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii</a>\n\"Binary Tree Right Side View\": <a href=\"https://leetcode.com/problems/binary-tree-right-side-view\">https://leetcode.com/problems/binary-tree-right-side-view</a></p>\n<hr>\n<p><a href=\"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/\">116. Populating Next Right Pointers in Each Node</a></h2>\n<h3>Problem:</h3>\n<p>Given a binary tree</p>\n<pre><code>struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}\n</code></pre>\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>You may only use constant extra space.</li>\n<li>Recursive approach is fine, implicit stack space does not count as extra space for this problem.</li>\n<li>You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).</li>\n</ul>\n<p><strong>Example:</strong></p>\n<p>Given the following perfect binary tree,</p>\n<pre><code>     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7\n</code></pre>\n<p>After calling your function, the tree should look like:</p>\n<pre><code>     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL\n</code></pre>\n<h3>Solution:</h3>\n<h4>ONE</h4>\n<p>Recursive.</p>\n<p>For every <code>node</code>:</p>\n<ul>\n<li>Left child: points to <code>node.right</code>.</li>\n<li>Right child: points to <code>node.next.left</code> if <code>node.next</code> exists.</li>\n</ul>\n<pre><code class=\"language-javascript\">/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};\n</code></pre>\n<h4>TWO</h4>\n<p>Level order traversal.</p>\n<pre><code class=\"language-javascript\">/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i &#x3C; queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};\n</code></pre>\n<hr>\n<p>Difficulty: Medium\nRelated Topics:\n\"Tree\": <a href=\"https://leetcode.com/tag/tree\">https://leetcode.com/tag/tree</a>\n\"Depth-first Search\": <a href=\"https://leetcode.com/tag/depth-first-search\">https://leetcode.com/tag/depth-first-search</a>\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": <a href=\"https://leetcode.com/problems/populating-next-right-pointers-in-each-node\">https://leetcode.com/problems/populating-next-right-pointers-in-each-node</a></p>\n<hr>\n<p><a href=\"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/\">117. Populating Next Right Pointers in Each Node II</a></h2>\n<h3>Problem:</h3>\n<p>Given a binary tree</p>\n<pre><code>struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}\n</code></pre>\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n<p><strong>Note:</strong></p>\n<ul>\n<li>You may only use constant extra space.</li>\n<li>Recursive approach is fine, implicit stack space does not count as extra space for this problem.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<p>Given the following binary tree,</p>\n<pre><code>     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7\n</code></pre>\n<p>After calling your function, the tree should look like:</p>\n<pre><code>     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL\n</code></pre>\n<h3>Solution:</h3>\n<h4>ONE</h4>\n<p>Recursive. See <a href=\"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md\">116. Populating Next Right Pointers in Each Node</a>.</p>\n<p>The tree may not be perfect now. So keep finding <code>next</code> until there is a node with children, or <code>null</code>.</p>\n<p>This also means post-order traversal is required.</p>\n<pre><code class=\"language-javascript\">/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};\n</code></pre>\n<h4>TWO</h4>\n<p>Level order traversal. Exact same as <a href=\"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md\">116. Populating Next Right Pointers in Each Node</a>.</p>\n<pre><code class=\"language-javascript\">/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i &#x3C; queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};\n</code></pre>\n<hr>\n<p>Difficulty: Easy\nRelated Topics:\n\"Array\": <a href=\"https://leetcode.com/tag/array\">https://leetcode.com/tag/array</a>\nSimilar Questions:\n\"Pascal's Triangle II\": <a href=\"https://leetcode.com/problems/pascals-triangle-ii\">https://leetcode.com/problems/pascals-triangle-ii</a></p>\n<hr>\n<p><a href=\"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/pascals-triangle/description/\">118. Pascal's Triangle</a></h2>\n<h3>Problem:</h3>\n<p>Given a non-negative integer <em>numRows</em>, generate the first <em>numRows</em> of Pascal's triangle.</p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif\" alt=\"PascalTriangleAnimated2.gif\"></p>\n<p>In Pascal's triangle, each number is the sum of the two numbers directly above it.</p>\n<p><strong>Example:</strong></p>\n<pre><code>Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n</code></pre>\n<h3>Solution:</h3>\n<p>Dynamic Programming 101.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows &#x3C;= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i &#x3C; numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j &#x3C; i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};\n</code></pre>\n<hr>\n<p>Difficulty: Easy\nRelated Topics:\n\"Array\": <a href=\"https://leetcode.com/tag/array\">https://leetcode.com/tag/array</a>\nSimilar Questions:\n\"Pascal's Triangle\": <a href=\"https://leetcode.com/problems/pascals-triangle\">https://leetcode.com/problems/pascals-triangle</a></p>\n<hr>\n<p><a href=\"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/pascals-triangle-ii/description/\">119. Pascal's Triangle II</a></h2>\n<h3>Problem:</h3>\n<p>Given a non-negative index <em>k</em> where <em>k</em> ≤ 33, return the <em>k</em>th index row of the Pascal's triangle.</p>\n<p>Note that the row index starts from 0.</p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif\" alt=\"PascalTriangleAnimated2.gif\"></p>\n<p>In Pascal's triangle, each number is the sum of the two numbers directly above it.</p>\n<p><strong>Example:</strong></p>\n<pre><code>Input: 3\nOutput: [1,3,3,1]\n</code></pre>\n<p><strong>Follow up:</strong></p>\n<p>Could you optimize your algorithm to use only <em>O</em>(<em>k</em>) extra space?</p>\n<h3>Solution:</h3>\n<p>Dynamic Programming 101 with dynamic array.</p>\n<p>State <code>(i, j)</code> depends on <code>(i-1, j)</code> and <code>(i-1, j-1)</code>. So to access <code>(i-1, j-1)</code> iteration must be from right to left.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex &#x3C; 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i &#x3C;= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};\n</code></pre>\n<hr>\n<p>Difficulty: Medium\nRelated Topics:\n\"Array\": <a href=\"https://leetcode.com/tag/array\">https://leetcode.com/tag/array</a>\n\"Dynamic Programming\": <a href=\"https://leetcode.com/tag/dynamic-programming\">https://leetcode.com/tag/dynamic-programming</a></p>\n<hr>\n<p><a href=\"#120-trianglehttpsleetcodecomproblemstriangledescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/triangle/description/\">120. Triangle</a></h2>\n<h3>Problem:</h3>\n<p>Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.</p>\n<p>For example, given the following triangle</p>\n<pre><code>[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n</code></pre>\n<p>The minimum path sum from top to bottom is <code>11</code> (i.e., <strong>2</strong> + <strong>3</strong> + <strong>5</strong> + <strong>1</strong> = 11).</p>\n<p><strong>Note:</strong></p>\n<p>Bonus point if you are able to do this using only <em>O</em>(<em>n</em>) extra space, where <em>n</em> is the total number of rows in the triangle.</p>\n<h3>Solution:</h3>\n<p>Define <code>f(i, j)</code> to be the minimum path sum from <code>triangle[0][0]</code> to <code>triangle[i][j]</code>.</p>\n<pre><code>f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 &#x3C; j &#x3C; i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0\n</code></pre>\n<p>Dynamic array can be used.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length &#x3C;= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i &#x3C; triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};\n</code></pre>\n<hr>\n<p>Difficulty: Easy\nRelated Topics:\n\"Array\": <a href=\"https://leetcode.com/tag/array\">https://leetcode.com/tag/array</a>\n\"Dynamic Programming\": <a href=\"https://leetcode.com/tag/dynamic-programming\">https://leetcode.com/tag/dynamic-programming</a>\nSimilar Questions:\n\"Maximum Subarray\": <a href=\"https://leetcode.com/problems/maximum-subarray\">https://leetcode.com/problems/maximum-subarray</a>\n\"Best Time to Buy and Sell Stock II\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii</a>\n\"Best Time to Buy and Sell Stock III\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii</a>\n\"Best Time to Buy and Sell Stock IV\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv</a>\n\"Best Time to Buy and Sell Stock with Cooldown\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown</a></p>\n<hr>\n<p><a href=\"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/\">121. Best Time to Buy and Sell Stock</a></h2>\n<h3>Problem:</h3>\n<p>Say you have an array for which the <em>i</em>th element is the price of a given stock on day <em>i</em>.</p>\n<p>If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p>\n<p>Note that you cannot sell a stock before you buy one.</p>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n</code></pre>\n<h3>Solution:</h3>\n<p>Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item <code>j</code> whose price <code>price[j]</code> is lower than the base (which means if we sell now the profit would be negative), we sell <code>j-1</code> instead and make <code>j</code> the new base.</p>\n<p>Because <code>price[j]</code> is lower that the base, using <code>j</code> as new base is guaranteed to gain more profit comparing to the old one.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i &#x3C; prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit &#x3C; 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};\n</code></pre>\n<hr>\n<p>Difficulty: Easy\nRelated Topics:\n\"Array\": <a href=\"https://leetcode.com/tag/array\">https://leetcode.com/tag/array</a>\n\"Greedy\": <a href=\"https://leetcode.com/tag/greedy\">https://leetcode.com/tag/greedy</a>\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock</a>\n\"Best Time to Buy and Sell Stock III\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii</a>\n\"Best Time to Buy and Sell Stock IV\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv</a>\n\"Best Time to Buy and Sell Stock with Cooldown\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown</a>\n\"Best Time to Buy and Sell Stock with Transaction Fee\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee</a></p>\n<hr>\n<p><a href=\"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/\">122. Best Time to Buy and Sell Stock II</a></h2>\n<h3>Problem:</h3>\n<p>Say you have an array for which the <em>i</em>th element is the price of a given stock on day <em>i</em>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p>\n<p><strong>Note:</strong> You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n</code></pre>\n<p><strong>Example 3:</strong></p>\n<pre><code>Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n</code></pre>\n<h3>Solution:</h3>\n<p>Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).</p>\n<pre><code class=\"language-javascript\">/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i &#x3C; prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};\n</code></pre>\n<hr>\n<p>Difficulty: Hard\nRelated Topics:\n\"Array\": <a href=\"https://leetcode.com/tag/array\">https://leetcode.com/tag/array</a>\n\"Dynamic Programming\": <a href=\"https://leetcode.com/tag/dynamic-programming\">https://leetcode.com/tag/dynamic-programming</a>\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock</a>\n\"Best Time to Buy and Sell Stock II\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii</a>\n\"Best Time to Buy and Sell Stock IV\": <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv\">https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv</a>\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": <a href=\"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays\">https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays</a></p>\n<hr>\n<p><a href=\"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/\">123. Best Time to Buy and Sell Stock III</a></h2>\n<h3>Problem:</h3>\n<p>Say you have an array for which the <em>i</em>th element is the price of a given stock on day <em>i</em>.</p>\n<p>Design an algorithm to find the maximum profit. You may complete at most <em>two</em> transactions.</p>\n<p>**Note:**You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n</code></pre>\n<p><strong>Example 3:</strong></p>\n<pre><code>Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n</code></pre>\n<h3>Solution:</h3>\n<p>Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most <em>two</em> transactions, so divide the days into two groups, <code>[0...k]</code> and <code>[k...n-1]</code>. Notice <code>k</code> exists in both groups because technically we can sell out then immediately buy in at the same day.</p>\n<p>Define <code>p1(i)</code> to be the max profit of day <code>[0...i]</code>. This is just like the problem of <a href=\"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md\">121. Best Time to Buy and Sell Stock</a>.</p>\n<pre><code>p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 &#x3C; i &#x3C;= n-1\n</code></pre>\n<p>Define <code>p2(i)</code> to be the max profit of day <code>[i...n-1]</code>. This is the mirror of <code>p1</code>.</p>\n<pre><code>p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0\n</code></pre>\n<p>Define <code>f(k)</code> to be <code>p1(k) + p2(k)</code>. We need to get <code>max( f(0), ..., f(n-1) )</code>.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len &#x3C;= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i &#x3C; len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};\n</code></pre>\n<hr>\n<p>Difficulty: Hard\nRelated Topics:\n\"Tree\": <a href=\"https://leetcode.com/tag/tree\">https://leetcode.com/tag/tree</a>\n\"Depth-first Search\": <a href=\"https://leetcode.com/tag/depth-first-search\">https://leetcode.com/tag/depth-first-search</a>\nSimilar Questions:\n\"Path Sum\": <a href=\"https://leetcode.com/problems/path-sum\">https://leetcode.com/problems/path-sum</a>\n\"Sum Root to Leaf Numbers\": <a href=\"https://leetcode.com/problems/sum-root-to-leaf-numbers\">https://leetcode.com/problems/sum-root-to-leaf-numbers</a>\n\"Path Sum IV\": <a href=\"https://leetcode.com/problems/path-sum-iv\">https://leetcode.com/problems/path-sum-iv</a>\n\"Longest Univalue Path\": <a href=\"https://leetcode.com/problems/longest-univalue-path\">https://leetcode.com/problems/longest-univalue-path</a></p>\n<hr>\n<p><a href=\"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/\">124. Binary Tree Maximum Path Sum</a></h2>\n<h3>Problem:</h3>\n<p>Given a <strong>non-empty</strong> binary tree, find the maximum path sum.</p>\n<p>For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain <strong>at least one node</strong> and does not need to go through the root.</p>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42\n</code></pre>\n<h3>Solution:</h3>\n<p>For every <code>node</code>, there are six possible ways to get the max path sum:</p>\n<ul>\n<li>\n<p>With <code>node.val</code></p>\n<ol>\n<li><code>node.val</code> plus the max sum of a path that ends with <code>node.left</code>.</li>\n<li><code>node.val</code> plus the max sum of a path that starts with <code>node.right</code>.</li>\n<li><code>node.val</code> plus the max sum of both paths.</li>\n<li>Just <code>node.val</code> (the max sum of both paths are negative).</li>\n</ol>\n</li>\n<li>\n<p>Without<code>node.val</code> (disconnected)</p>\n<ol>\n<li>The max-sum path is somewhere under the <code>node.left</code> subtree.</li>\n<li>The max-sum path is somewhere under the <code>node.right</code> subtree.</li>\n</ol>\n</li>\n</ul>\n<p>There are two ways to implement this.</p>\n<h4>ONE</h4>\n<p>Define a function that returns two values. The max sum of a path that may or may not end with <code>root</code> node, and the max sum of the path that ends with <code>root</code> node.</p>\n<pre><code class=\"language-javascript\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}\n</code></pre>\n<h4>TWO</h4>\n<p>Just return the later (max sum of a path that ends with <code>root</code>). Maintain a global variable to store the disconnected max sum.</p>\n<pre><code class=\"language-javascript\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}\n</code></pre>\n<hr>\n<p>Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": <a href=\"https://leetcode.com/tag/two-pointers\">https://leetcode.com/tag/two-pointers</a>\n\"String\": <a href=\"https://leetcode.com/tag/string\">https://leetcode.com/tag/string</a>\nSimilar Questions:\n\"Palindrome Linked List\": <a href=\"https://leetcode.com/problems/palindrome-linked-list\">https://leetcode.com/problems/palindrome-linked-list</a>\n\"Valid Palindrome II\": <a href=\"https://leetcode.com/problems/valid-palindrome-ii\">https://leetcode.com/problems/valid-palindrome-ii</a></p>\n<hr>\n<p><a href=\"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/valid-palindrome/description/\">125. Valid Palindrome</a></h2>\n<h3>Problem:</h3>\n<p>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.</p>\n<p><strong>Note:</strong> For the purpose of this problem, we define empty string as valid palindrome.</p>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input: \"A man, a plan, a canal: Panama\"\nOutput: true\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: \"race a car\"\nOutput: false\n</code></pre>\n<h3>Solution:</h3>\n<h4>ONE</h4>\n<pre><code class=\"language-javascript\">/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};\n</code></pre>\n<h4>TWO</h4>\n<p>Remove non-alphanumeric characters then compare.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i &#x3C; j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};\n</code></pre>\n<h4>THREE</h4>\n<p>Compare the char codes.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i &#x3C; j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i &#x3C; j &#x26;&#x26; (left &#x3C; 48 || (left > 57 &#x26;&#x26; left &#x3C; 65) || (left > 90 &#x26;&#x26; left &#x3C; 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 &#x26;&#x26; left &#x3C;= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i &#x3C; j &#x26;&#x26; (right &#x3C; 48 || (right > 57 &#x26;&#x26; right &#x3C; 65) || (right > 90 &#x26;&#x26; right &#x3C; 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 &#x26;&#x26; right &#x3C;= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};\n</code></pre>\n<hr>\n<p>Difficulty: Hard\nRelated Topics:\n\"Array\": <a href=\"https://leetcode.com/tag/array\">https://leetcode.com/tag/array</a>\n\"String\": <a href=\"https://leetcode.com/tag/string\">https://leetcode.com/tag/string</a>\n\"Backtracking\": <a href=\"https://leetcode.com/tag/backtracking\">https://leetcode.com/tag/backtracking</a>\n\"Breadth-first Search\": <a href=\"https://leetcode.com/tag/breadth-first-search\">https://leetcode.com/tag/breadth-first-search</a>\nSimilar Questions:\n\"Word Ladder\": <a href=\"https://leetcode.com/problems/word-ladder\">https://leetcode.com/problems/word-ladder</a></p>\n<hr>\n<p><a href=\"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/word-ladder-ii/description/\">126. Word Ladder II</a></h2>\n<h3>Problem:</h3>\n<p>Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary's word list, find all shortest transformation sequence(s) from <em>beginWord</em> to <em>endWord</em>, such that:</p>\n<ol>\n<li>Only one letter can be changed at a time</li>\n<li>Each transformed word must exist in the word list. Note that <em>beginWord</em> is <em>not</em> a transformed word.</li>\n</ol>\n<p><strong>Note:</strong></p>\n<ul>\n<li>Return an empty list if there is no such transformation sequence.</li>\n<li>All words have the same length.</li>\n<li>All words contain only lowercase alphabetic characters.</li>\n<li>You may assume no duplicates in the word list.</li>\n<li>You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.</li>\n</ul>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n</code></pre>\n<h3>Solution:</h3>\n<p>This is just like <a href=\"./127.%20Word%20Ladder\">127. Word Ladder</a>.</p>\n<p>The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).</p>\n<p>The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c &#x3C; 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}\n</code></pre>\n<hr>\n<p>Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": <a href=\"https://leetcode.com/tag/breadth-first-search\">https://leetcode.com/tag/breadth-first-search</a>\nSimilar Questions:\n\"Word Ladder II\": <a href=\"https://leetcode.com/problems/word-ladder-ii\">https://leetcode.com/problems/word-ladder-ii</a>\n\"Minimum Genetic Mutation\": <a href=\"https://leetcode.com/problems/minimum-genetic-mutation\">https://leetcode.com/problems/minimum-genetic-mutation</a></p>\n<hr>\n<p><a href=\"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/word-ladder/description/\">127. Word Ladder</a></h2>\n<h3>Problem:</h3>\n<p>Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary's word list, find the length of shortest transformation sequence from <em>beginWord</em> to <em>endWord</em>, such that:</p>\n<ol>\n<li>Only one letter can be changed at a time.</li>\n<li>Each transformed word must exist in the word list. Note that <em>beginWord</em> is <em>not</em> a transformed word.</li>\n</ol>\n<p><strong>Note:</strong></p>\n<ul>\n<li>Return 0 if there is no such transformation sequence.</li>\n<li>All words have the same length.</li>\n<li>All words contain only lowercase alphabetic characters.</li>\n<li>You may assume no duplicates in the word list.</li>\n<li>You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.</li>\n</ul>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n</code></pre>\n<h3>Solution:</h3>\n<p>Think of it as building a tree, with <code>begineWord</code> as root and <code>endWord</code> as leaves.</p>\n<p>The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).</p>\n<p>We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level <code>i</code>) we encounter a word that turns out to be in a shortest path, then level <code>i</code> is the lowest level this word could ever get. We can safely remove it from the <code>wordList</code>.</p>\n<p>To find all the next words, instead of filtering the <code>wordList</code>, enumerate all 25 possible words and check if in <code>wordList</code>.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c &#x3C; 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};\n</code></pre>\n<hr>\n<p>Difficulty: Hard\nRelated Topics:\n\"Array\": <a href=\"https://leetcode.com/tag/array\">https://leetcode.com/tag/array</a>\n\"Union Find\": <a href=\"https://leetcode.com/tag/union-find\">https://leetcode.com/tag/union-find</a>\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": <a href=\"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence\">https://leetcode.com/problems/binary-tree-longest-consecutive-sequence</a></p>\n<hr>\n<p><a href=\"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/longest-consecutive-sequence/description/\">128. Longest Consecutive Sequence</a></h2>\n<h3>Problem:</h3>\n<p>Given an unsorted array of integers, find the length of the longest consecutive elements sequence.</p>\n<p>Your algorithm should run in O(<em>n</em>) complexity.</p>\n<p><strong>Example:</strong></p>\n<pre><code>Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.\n</code></pre>\n<h3>Solution:</h3>\n<p>Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).</p>\n<pre><code class=\"language-javascript\">/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};\n</code></pre>\n<hr>\n<p>Difficulty: Medium\nRelated Topics:\n\"Tree\": <a href=\"https://leetcode.com/tag/tree\">https://leetcode.com/tag/tree</a>\n\"Depth-first Search\": <a href=\"https://leetcode.com/tag/depth-first-search\">https://leetcode.com/tag/depth-first-search</a>\nSimilar Questions:\n\"Path Sum\": <a href=\"https://leetcode.com/problems/path-sum\">https://leetcode.com/problems/path-sum</a>\n\"Binary Tree Maximum Path Sum\": <a href=\"https://leetcode.com/problems/binary-tree-maximum-path-sum\">https://leetcode.com/problems/binary-tree-maximum-path-sum</a></p>\n<hr>\n<p><a href=\"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/\">129. Sum Root to Leaf Numbers</a></h2>\n<h3>Problem:</h3>\n<p>Given a binary tree containing digits from <code>0-9</code> only, each root-to-leaf path could represent a number.</p>\n<p>An example is the root-to-leaf path <code>1->2->3</code> which represents the number <code>123</code>.</p>\n<p>Find the total sum of all root-to-leaf numbers.</p>\n<p><strong>Note:</strong> A leaf is a node with no children.</p>\n<p><strong>Example:</strong></p>\n<pre><code>Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.\n</code></pre>\n<h3>Solution:</h3>\n<p>To write a clean solution for this promblem, use <code>0</code> as indicator of leaf node. If all the children get <code>0</code>, it is a leaf node, return the sum of current level.</p>\n<pre><code class=\"language-javascript\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};\n</code></pre>\n<hr>\n<p>Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": <a href=\"https://leetcode.com/tag/depth-first-search\">https://leetcode.com/tag/depth-first-search</a>\n\"Breadth-first Search\": <a href=\"https://leetcode.com/tag/breadth-first-search\">https://leetcode.com/tag/breadth-first-search</a>\n\"Union Find\": <a href=\"https://leetcode.com/tag/union-find\">https://leetcode.com/tag/union-find</a>\nSimilar Questions:\n\"Number of Islands\": <a href=\"https://leetcode.com/problems/number-of-islands\">https://leetcode.com/problems/number-of-islands</a>\n\"Walls and Gates\": <a href=\"https://leetcode.com/problems/walls-and-gates\">https://leetcode.com/problems/walls-and-gates</a></p>\n<hr>\n<p><a href=\"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/surrounded-regions/description/\">130. Surrounded Regions</a></h2>\n<h3>Problem:</h3>\n<p>Given a 2D board containing <code>'X'</code> and <code>'O'</code> (<strong>the letter O</strong>), capture all regions surrounded by <code>'X'</code>.</p>\n<p>A region is captured by flipping all <code>'O'</code>s into <code>'X'</code>s in that surrounded region.</p>\n<p><strong>Example:</strong></p>\n<pre><code>X X X X\nX O O X\nX X O X\nX O X X\n</code></pre>\n<p>After running your function, the board should be:</p>\n<pre><code>X X X X\nX X X X\nX X X X\nX O X X\n</code></pre>\n<p><strong>Explanation:</strong></p>\n<p>Surrounded regions shouldn't be on the border, which means that any <code>'O'</code> on the border of the board are not flipped to <code>'X'</code>. Any <code>'O'</code> that is not on the border and it is not connected to an <code>'O'</code> on the border will be flipped to <code>'X'</code>. Two cells are connected if they are adjacent cells connected horizontally or vertically.</p>\n<h3>Solution:</h3>\n<p>Find all the <code>O</code>s that are connected to the <code>O</code>s on the border, change them to <code>#</code>. Then scan the board, change <code>O</code> to <code>X</code> and <code>#</code> back to <code>O</code>.</p>\n<p>The process of finding the connected <code>O</code>s is just like tree traversal. <code>O</code>s on the border are the same level. Their children are the second level. And so on.</p>\n<p>So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.</p>\n<pre><code class=\"language-javascript\">/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height &#x3C;= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width &#x3C;= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row &#x3C; height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col &#x3C; width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row &#x3C; rowend &#x26;&#x26; board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 &#x26;&#x26; board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row &#x3C; height; row++) {\n        for (let col = 0; col &#x3C; width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};\n</code></pre>\n<hr>\n<p>Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": <a href=\"https://leetcode.com/tag/depth-first-search\">https://leetcode.com/tag/depth-first-search</a>\n\"Breadth-first Search\": <a href=\"https://leetcode.com/tag/breadth-first-search\">https://leetcode.com/tag/breadth-first-search</a>\n\"Graph\": <a href=\"https://leetcode.com/tag/graph\">https://leetcode.com/tag/graph</a>\nSimilar Questions:\n\"Copy List with Random Pointer\": <a href=\"https://leetcode.com/problems/copy-list-with-random-pointer\">https://leetcode.com/problems/copy-list-with-random-pointer</a></p>\n<hr>\n<p><a href=\"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ <a href=\"https://leetcode.com/problems/clone-graph/description/\">133. Clone Graph</a></h2>\n<h3>Problem:</h3>\n<p>Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a <code>label</code> (<code>int</code>) and a list (<code>List[UndirectedGraphNode]</code>) of its <code>neighbors</code>. There is an edge between the given node and each of the nodes in its neighbors.</p>\n<p>OJ's undirected graph serialization (so you can understand error output):</p>\n<p>Nodes are labeled uniquely.</p>\n<p>We use <code>#</code> as a separator for each node, and <code>,</code> as a separator for node label and each neighbor of the node.</p>\n<p>As an example, consider the serialized graph <code>{0,1,2#1,2#2,2}</code>.</p>\n<p>The graph has a total of three nodes, and therefore contains three parts as separated by <code>#</code>.</p>\n<ol>\n<li>First node is labeled as <code>0</code>. Connect node <code>0</code> to both nodes <code>1</code> and <code>2</code>.</li>\n<li>Second node is labeled as <code>1</code>. Connect node <code>1</code> to node <code>2</code>.</li>\n<li>Third node is labeled as <code>2</code>. Connect node <code>2</code> to node <code>2</code> (itself), thus forming a self-cycle.</li>\n</ol>\n<p>Visually, the graph looks like the following:</p>\n<pre><code>       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/\n</code></pre>\n<p><strong>Note</strong>: The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.</p>\n<h3>Solution:</h3>\n<p>DFS. Cache the visited node before entering the next recursion.</p>\n<pre><code class=\"language-javascript\">/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};\n</code></pre>\n<p><img src=\"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp\" alt=\"alt text\" title=\"binary-tree-upside-down\"></p>\n<pre><code class=\"language-js\">/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};\n</code></pre>\n<p><img src=\"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png\" alt=\"alt text\" title=\"maximum-sum-circular-subarray\"></p>\n<pre><code class=\"language-js\">/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};\n</code></pre>\n<p><a href=\"#balanced-binary-tree---leetcode\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h1>➤ Balanced Binary Tree - LeetCode</h1>\n<blockquote>\n<p>Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.</p>\n</blockquote>\n<p>Given a binary tree, determine if it is height-balanced.</p>\n<p>For this problem, a height-balanced binary tree is defined as:</p>\n<blockquote>\n<p>a binary tree in which the left and right subtrees of <em>every</em> node differ in height by no more than 1.</p>\n</blockquote>\n<p><strong>Example 1:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg\"></p>\n<p><strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> true</p>\n<p><strong>Example 2:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg\"></p>\n<p><strong>Input:</strong> root = [1,2,2,3,3,null,null,4,4]\n<strong>Output:</strong> false</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> root = []\n<strong>Output:</strong> true</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 5000]</code>.</li>\n<li><code>-104 &#x3C;= Node.val &#x3C;= 104</code></li>\n</ul>\n<p><a href=\"https://leetcode.com/problems/balanced-binary-tree/\">Source</a># Convert Sorted Array to Binary Search Tree</p>\n<blockquote>\n<p>Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.</p>\n</blockquote>\n<p>Given an array where elements are sorted in ascending order, convert it to a height balanced BST.</p>\n<p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p>\n<p><strong>Example:</strong></p>\n<p>Given the sorted array: [-10,-3,0,5,9],</p>\n<p>One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:</p>\n<pre><code>  0\n / \\\\\n</code></pre>\n<p>-3 9\n/ /\n-10 5</p>\n<p><a href=\"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/\">Source</a># Delete Node in a BST</p>\n<blockquote>\n<p>Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.</p>\n</blockquote>\n<p>Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.</p>\n<p>Basically, the deletion can be divided into two stages:</p>\n<ol>\n<li>Search for a node to remove.</li>\n<li>If the node is found, delete the node.</li>\n</ol>\n<p><strong>Follow up:</strong> Can you solve it with time complexity <code>O(height of tree)</code>?</p>\n<p><strong>Example 1:</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg\"></p>\n<p><strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 3\n<strong>Output:</strong> [5,4,6,2,null,null,7]\n<strong>Explanation:</strong> Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it's also accepted.\n<img src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg\"></p>\n<p><strong>Example 2:</strong></p>\n<p><strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 0\n<strong>Output:</strong> [5,3,6,2,4,null,7]\n<strong>Explanation:</strong> The tree does not contain a node with value = 0.</p>\n<p><strong>Example 3:</strong></p>\n<p><strong>Input:</strong> root = [], key = 0\n<strong>Output:</strong> []</p>\n<p><strong>Constraints:</strong></p>\n<ul>\n<li>The number of nodes in the tree is in the range <code>[0, 104]</code>.</li>\n<li><code>-105 &#x3C;= Node.val &#x3C;= 105</code></li>\n<li>Each node has a <strong>unique</strong> value.</li>\n<li><code>root</code> is a valid binary search tree.</li>\n<li><code>-105 &#x3C;= key &#x3C;= 105</code></li>\n</ul>\n<p><a href=\"https://leetcode.com/problems/delete-node-in-a-bst/\">Source</a><img src=\"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg\" alt=\"alt text\" title=\"meeting-room-ii\">\n<img src=\"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg\" alt=\"alt text\" title=\"meeting-room-ii\"></p>\n<pre><code class=\"language-javascript\">/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i &#x3C; len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i &#x3C; len; i++) {\n        if (starts[i] &#x3C; ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};\n</code></pre>\n<p><a href=\"#-\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>"},{"url":"/blog/netlify-cms/","relativePath":"blog/netlify-cms.md","relativeDir":"blog","base":"netlify-cms.md","name":"netlify-cms","frontmatter":{"title":"Netlify CMS Reference Sheet","subtitle":"lorem-ipsum","date":"2021-09-30","thumb_image_alt":"lorem-ipsum","excerpt":"lorem-ipsum","seo":{"title":"","description":"Netlify CMS is an open source content management system for your Git workflow that enables you to provide editors with a friendly UI and intuitive workflows","robots":[],"extra":[{"name":"og:image","value":"images/netlify-dee8d6ae.svg","keyName":"property","relativeUrl":true},{"name":"og:title","value":"Intro to Netlify CMS","keyName":"property","relativeUrl":false},{"name":"twitter:card","value":"Intro to Netlify CMS","keyName":"name","relativeUrl":false}]},"template":"post","thumb_image":"images/netlify.svg","image":"images/netlify-26904b46.svg"},"html":"<h1>Overview\n\n</h1>\n<p>Netlify CMS is an open source content management system for your Git workflow that enables you to provide editors with a friendly UI and intuitive workflows. You can use it with any static site generator to create faster, more flexible web projects. Content is stored in your Git repository alongside your code for easier versioning, multi-channel publishing, and the option to handle content updates directly in Git.</p>\n<p>At its core, Netlify CMS is an open-source React app that acts as a wrapper for the Git workflow, using the GitHub, GitLab, or Bitbucket API. This provides many advantages, including:</p>\n<ul>\n<li><strong>Fast, web-based UI:</strong> With rich-text editing, real-time preview, and drag-and-drop media uploads.</li>\n<li><strong>Platform agnostic:</strong> Works with most static site generators.</li>\n<li><strong>Easy installation:</strong> Add two files to your site and hook up the backend by including those files in your build process or linking to our Content Delivery Network (CDN).</li>\n<li><strong>Modern authentication:</strong> Using GitHub, GitLab, or Bitbucket and JSON web tokens.</li>\n<li><strong>Flexible content types:</strong> Specify an unlimited number of content types with custom fields.</li>\n<li><strong>Fully extensible:</strong> Create custom-styled previews, UI widgets, and editor plugins.</li>\n</ul>\n<h2>Netlify CMS vs. Netlify</h2>\n<p><a href=\"https://www.netlify.com/\">Netlify.com</a> is a platform you can use to automatically build, deploy, serve, and manage your frontend sites and web apps. It also provides a variety of other features like form processing, serverless functions, and split testing. Not all Netlify sites use Netlify CMS, and not all sites using Netlify CMS are on Netlify.</p>\n<p>The folks at Netlify created Netlify CMS to fill a gap in the static site generation pipeline. There were some great proprietary headless CMS options, but no real contenders that were open source and extensible—that could turn into a community-built ecosystem like WordPress or Drupal. For that reason, Netlify CMS is <em>made</em> to be community-driven, and has never been locked to the Netlify platform (despite the name).</p>\n<p>With this in mind, you can:</p>\n<ul>\n<li>Use Netlify CMS without Netlify and deploy your site where you always have, hooking up your own CI, site hosting, CDN, etc.</li>\n<li>Use Netlify without Netlify CMS and edit your static site in your code editor.</li>\n<li>Or, use them together and have a fully-working CMS-enabled site with <a href=\"https://www.netlifycms.org/docs/start-with-a-template/\">one click</a>!</li>\n</ul>\n<p>If you hook up Netlify CMS to your website, you're basically adding a tool for content editors to make commits to your site repository without touching code or learning Git.</p>\n<ul>\n<li>Add to Your Site<strong>These generatorsstore static files in</strong>Jekyll, GitBook/ (project root)Hugo, Gatsby, Nuxt, Gridsome, Zola, Sapper/staticNext/publicHexo, Middleman, Jigsaw/sourceSpike/viewsWyam/inputPelican/contentVuePress/.vuepress/publicElmstatic/_site11ty/_sitepreact-cli/src/staticnamePost type identifier, used in routes. Must be unique.labelWhat the admin UI calls the post type.folderWhere files of this type are stored, relative to the repo root.createSet to true to allow users to create new files in this collection.slugTemplate for filenames. {{year}}, {{month}}, and {{day}} pulls from the post's date field or save date. {{slug}} is a url-safe version of the post's title. Default is simply {{slug}}.fieldsFields listed here are shown as fields in the content editor, then saved as front matter at the beginning of the document (except for body, which follows the front matter). Each field contains the following properties:</li>\n</ul>\n<p>You can adapt Netlify CMS to a wide variety of projects. It works with any content written in markdown, JSON, YAML, or TOML files, stored in a repo on <a href=\"https://github.com/\">GitHub</a>, <a href=\"https://about.gitlab.com/\">GitLab</a>, or <a href=\"https://bitbucket.org/\">Bitbucket</a>. You can also create your own custom backend.</p>\n<p>This tutorial guides you through the steps for adding Netlify CMS to a site that's built with a common <a href=\"https://www.staticgen.com/\">static site generator</a>, like Jekyll, Hugo, Hexo, or Gatsby. Alternatively, you can <a href=\"https://www.netlifycms.org/docs/start-with-a-template\">start from a template</a> or dive right into <a href=\"https://www.netlifycms.org/docs/configuration-options\">configuration options</a>.</p>\n<h2>App File Structure</h2>\n<p>A static admin folder contains all Netlify CMS files, stored at the root of your published site. Where you store this folder in the source files depends on your static site generator. Here's the static file location for a few of the most popular static site generators:</p>\n<p>If your generator isn't listed here, you can check its documentation, or as a shortcut, look in your project for a css or images folder. The contents of folders like that are usually processed as static files, so it's likely you can store your admin folder next to those. (When you've found the location, feel free to add it to these docs by <a href=\"https://github.com/netlify/netlify-cms/blob/master/CONTRIBUTING.md#pull-requests\">filing a pull request</a>!)</p>\n<p>Inside the admin folder, you'll create two files:</p>\n<p>The first file, admin/index.html, is the entry point for the Netlify CMS admin interface. This means that users navigate to yoursite.com/admin/ to access it. On the code side, it's a basic HTML starter page that loads the Netlify CMS JavaScript file. The second file, admin/config.yml, is the heart of your Netlify CMS installation, and a bit more complex. The <a href=\"https://www.netlifycms.org/docs/add-to-your-site/#configuration\">Configuration</a> section covers the details.</p>\n<p>In this example, we pull the admin/index.html file from a public CDN.</p>\n<p>In the code above the script is loaded from the unpkg CDN. Should there be any issue, jsDelivr can be used as an alternative source. Simply set the src to <a href=\"https://cdn.jsdelivr.net/npm/netlify-cms@%5E2.0.0/dist/netlify-cms.js\">https://cdn.jsdelivr.net/npm/netlify-cms@^2.0.0/dist/netlify-cms.js</a></p>\n<h3>Installing with npm</h3>\n<p>You can also use Netlify CMS as an npm module. Wherever you import Netlify CMS, it automatically runs, taking over the current page. Make sure the script that imports it only runs on your CMS page. First install the package and save it to your project:</p>\n<p>Then import it (assuming your project has tooling for imports):</p>\n<h2>Configuration</h2>\n<p>Configuration is different for every site, so we'll break it down into parts. Add all the code snippets in this section to your admin/config.yml file.</p>\n<h3>Backend</h3>\n<p>We're using <a href=\"https://www.netlify.com/\">Netlify</a> for our hosting and authentication in this tutorial, so backend configuration is fairly straightforward.</p>\n<p>For GitHub and GitLab repositories, you can start your Netlify CMS config.yml file with these lines:</p>\n<p><em>(For Bitbucket repositories, use the _[</em>Bitbucket backend<em>](<a href=\"https://www.netlifycms.org/docs/bitbucket-backend\">https://www.netlifycms.org/docs/bitbucket-backend</a>)</em> instructions instead.)_</p>\n<p>The configuration above specifies your backend protocol and your publication branch. Git Gateway is an open source API that acts as a proxy between authenticated users of your site and your site repo. (We'll get to the details of that in the <a href=\"https://www.netlifycms.org/docs/add-to-your-site/#authentication\">Authentication section</a> below.) If you leave out the branch declaration, it defaults to master.</p>\n<h3>Editorial Workflow</h3>\n<p><strong>Note:</strong> Editorial workflow works with GitHub repositories, and support for GitLab and Bitbucket is <a href=\"https://www.netlifycms.org/docs/beta-features/#gitlab-and-bitbucket-editorial-workflow-support\">in beta</a>.</p>\n<p>By default, saving a post in the CMS interface pushes a commit directly to the publication branch specified in backend. However, you also have the option to enable the <a href=\"https://www.netlifycms.org/docs/configuration-options/#publish-mode\">Editorial Workflow</a>, which adds an interface for drafting, reviewing, and approving posts. To do this, add the following line to your Netlify CMS config.yml:</p>\n<h3>Media and Public Folders</h3>\n<p>Netlify CMS allows users to upload images directly within the editor. For this to work, the CMS needs to know where to save them. If you already have an images folder in your project, you could use its path, possibly creating an uploads sub-folder, for example:</p>\n<p>If you're creating a new folder for uploaded media, you'll need to know where your static site generator expects static files. You can refer to the paths outlined above in <a href=\"https://www.netlifycms.org/docs/add-to-your-site/#app-file-structure\">App File Structure</a>, and put your media folder in the same location where you put the admin folder.</p>\n<p>Note that themedia_folder file path is relative to the project root, so the example above would work for Jekyll, GitBook, or any other generator that stores static files at the project root. However, it would not work for Hugo, Hexo, Middleman or others that store static files in a subfolder. Here's an example that could work for a Hugo site:</p>\n<p>The configuration above adds a new setting, public<em>folder. While media</em>folder specifies where uploaded files are saved in the repo, public_folder indicates where they are found in the published site. Image src attributes use this path, which is relative to the file where it's called. For this reason, we usually start the path at the site root, using the opening /.</p>\n<p><em>If public</em>folder is not set, Netlify CMS defaults to the same value as media<em>folder, adding an opening / if one is not included.</em></p>\n<h3>Collections</h3>\n<p>Collections define the structure for the different content types on your static site. Since every site is different, the collections settings differ greatly from one site to the next.</p>\n<p>Let's say your site has a blog, with the posts stored in _posts/blog, and files saved in a date-title format, like 1999-12-31-lets-party.md. Each post begins with settings in yaml-formatted front matter, like so:</p>\n<p>Given this example, our collections settings would look like this in your NetlifyCMS config.yml file:</p>\n<p>Let's break that down:</p>\n<ul>\n<li>label: Field label in the editor UI.</li>\n<li>name: Field name in the document front matter.</li>\n<li>widget: Determines UI style and value data type (details below).</li>\n<li>default (optional): Sets a default value for the field.</li>\n</ul>\n<p>As described above, the widget property specifies a built-in or custom UI widget for a given field. When a content editor enters a value into a widget, that value is saved in the document front matter as the value for the name specified for that field. A full listing of available widgets can be found in the <a href=\"https://www.netlifycms.org/docs/widgets\">Widgets doc</a>.</p>\n<p>Based on this example, you can go through the post types in your site and add the appropriate settings to your Netlify CMS config.yml file. Each post type should be listed as a separate node under the collections field. See the <a href=\"https://www.netlifycms.org/docs/configuration-options/#collections\">Collections reference doc</a> for more configuration options.</p>\n<h3>Filter</h3>\n<p>The entries for any collection can be filtered based on the value of a single field. The example collection below only shows post entries with the value en in the language field.</p>\n<h2>Authentication</h2>\n<p>Now that you have your Netlify CMS files in place and configured, all that's left is to enable authentication. We're using the <a href=\"https://www.netlify.com/\">Netlify</a> platform here because it's one of the quickest ways to get started, but you can learn about other authentication options in the <a href=\"https://www.netlifycms.org/docs/backends-overview\">Backends</a> doc.</p>\n<h3>Setup on Netlify</h3>\n<p>Netlify offers a built-in authentication service called Identity. In order to use it, connect your site repo with Netlify. Netlify has published a general <a href=\"https://www.netlify.com/blog/2016/10/27/a-step-by-step-guide-deploying-a-static-site-or-single-page-app/\">Step-by-Step Guide</a> for this, along with detailed guides for many popular static site generators, including <a href=\"https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/\">Jekyll</a>, <a href=\"https://www.netlify.com/blog/2016/09/21/a-step-by-step-guide-victor-hugo-on-netlify/\">Hugo</a>, <a href=\"https://www.netlify.com/blog/2015/10/26/a-step-by-step-guide-hexo-on-netlify/\">Hexo</a>, <a href=\"https://www.netlify.com/blog/2015/10/01/a-step-by-step-guide-middleman-on-netlify/\">Middleman</a>, <a href=\"https://www.netlify.com/blog/2016/02/24/a-step-by-step-guide-gatsby-on-netlify/\">Gatsby</a>, and more.</p>\n<h3>Enable Identity and Git Gateway</h3>\n<p>Netlify's Identity and Git Gateway services allow you to manage CMS admin users for your site without requiring them to have an account with your Git host or commit access on your repo. From your site dashboard on Netlify:</p>\n<ol>\n<li>Go to <strong>Settings > Identity</strong>, and select <strong>Enable Identity service</strong>.</li>\n<li>Under <strong>Registration preferences</strong>, select <strong>Open</strong> or <strong>Invite only</strong>. In most cases, you want only invited users to access your CMS, but if you're just experimenting, you can leave it open for convenience.</li>\n<li>If you'd like to allow one-click login with services like Google and GitHub, check the boxes next to the services you'd like to use, under <strong>External providers</strong>.</li>\n<li>Scroll down to <strong>Services > Git Gateway</strong>, and click <strong>Enable Git Gateway</strong>. This authenticates with your Git host and generates an API access token. In this case, we're leaving the <strong>Roles</strong> field blank, which means any logged in user may access the CMS. For information on changing this, check the <a href=\"https://www.netlify.com/docs/identity/\">Netlify Identity documentation</a>.</li>\n</ol>\n<h3>Add the Netlify Identity Widget</h3>\n<p>With the backend set to handle authentication, now you need a frontend interface to connect to it. The open source Netlify Identity Widget is a drop-in widget made for just this purpose. To include the widget in your site, add the following script tag in two places:</p>\n<p>Add this to the &#x3C;head> of your CMS index page at /admin/index.html, as well as the &#x3C;head> of your site's main index page. Depending on how your site generator is set up, this may mean you need to add it to the default template, or to a \"partial\" or \"include\" template. If you can find where the site stylesheet is linked, that's probably the right place. Alternatively, you can include the script in your site using Netlify's <a href=\"https://www.netlify.com/docs/inject-analytics-snippets/\">Script Injection</a> feature.</p>\n<p>When a user logs in with the Netlify Identity widget, an access token directs to the site homepage. In order to complete the login and get back to the CMS, redirect the user back to the /admin/ path. To do this, add the following script before the closing body tag of your site's main index page:</p>\n<p>Note: This example script requires modern JavaScript and does not work on IE11. For legacy browser support, use function expressions (function () {}) in place of the arrow functions (() => {}), or use a transpiler such as <a href=\"https://babeljs.io/\">Babel</a>.</p>\n<h2>Accessing the CMS</h2>\n<p>Your site CMS is now fully configured and ready for login!</p>\n<p>If you set your registration preference to \"Invite only,\" invite yourself (and anyone else you choose) as a site user. To do this, select the <strong>Identity</strong> tab from your site dashboard, and then select the <strong>Invite users</strong> button. Invited users receive an email invitation with a confirmation link. Clicking the link will take you to your site with a login prompt.</p>\n<p>If you left your site registration open, or for return visits after confirming an email invitation, access your site's CMS at yoursite.com/admin/.</p>\n<p><strong>Note:</strong> No matter where you access Netlify CMS — whether running locally, in a staging environment, or in your published site — it always fetches and commits files in your hosted repository (for example, on GitHub), on the branch you configured in your Netlify CMS config.yml file. This means that content fetched in the admin UI matches the content in the repository, which may be different from your locally running site. It also means that content saved using the admin UI saves directly to the hosted repository, even if you're running the UI locally or in staging.</p>\n<p>Examples</p>\n<p>Do\nyou have a great, open source example? Submit a pull request to this page!</p>\n<p>Example\nTools\nType\nSource\nMore info</p>\n<p><a href=\"https://github.com/robertcoopercode/gatsby-netlify-cms\">Gatsby &#x26; Netlify\nCMS Meetup Group Template</a>\nGatsby\ndemo\n<a href=\"https://github.com/robertcoopercode/gatsby-netlify-cms\">robertcoopercode/gatsby-netlify-cms</a>\n<a href=\"https://blog.logrocket.com/gatsby-netlify-cms-a-perfect-pairing-d50d59d16f67\">blog\npost</a></p>\n<p><a href=\"https://briandouglas.me/\">This\nDeveloping Journey</a>\nmiddleman\nblog\n<a href=\"https://github.com/bdougie/blog\">bdougie/blog</a>\n<a href=\"https://www.netlify.com/blog/2017/04/20/creating-a-blog-with-middleman-and-netlify-cms/\">blog\npost</a></p>\n<p><a href=\"https://jamstack-cms.netlify.com/\">Jamstack Recipes</a>\nHugo, Azure\ndemo\n<a href=\"https://github.com/hlaueriksson/jamstack-cms\">hlaueriksson/jamstack-cms</a>\n<a href=\"http://conductofcode.io/post/managing-content-for-a-jamstack-site-with-netlify-cms/\">blog\npost</a></p>\n<p><a href=\"https://bael-theme.jake101.com/\">Bael</a>\nVue, Nuxt\nblog\n<a href=\"https://github.com/jake-101/bael-template\">jake-101/bael-template</a>\n<a href=\"https://bael-theme.jake101.com/blog/2018-06-19-top-10-reasons-why\">blog\npost</a></p>\n<p><a href=\"https://www.forestgarden.wales/\">Forest\nGarden Wales</a>\nHugo\nblog\n<a href=\"https://github.com/forestgardenwales/forestgarden.wales\">forestgardenwales/forestgarden.wales</a>\n<a href=\"https://www.forestgarden.wales/blog/now-using-netlify-cms/\">blog\npost</a></p>\n<p><a href=\"https://jekyll-netlifycms.netlify.com/\">Jekyll Demo</a>\nJekyll, Gulp\ndemo\n<a href=\"https://github.com/NickStees/jekyll-cms\">NickStees/jekyll-cms</a>\n<a href=\"https://github.com/NickStees/jekyll-cms\">read me</a></p>\n<p><a href=\"https://alembic-kit-demo.netlify.com/\">Jekyll feat Alembic\nTheme Demo</a>\nJekyll\ndemo\n<a href=\"https://github.com/daviddarnes/alembic-netlifycms-kit\">DavidDarnes/alembic-netlifycms-kit</a>\n<a href=\"https://github.com/daviddarnes/alembic-netlifycms-kit#starter-kit-for-alembic-with-netlify-cms\">read\nme</a></p>\n<p><a href=\"https://eleventy-netlify-boilerplate.netlify.com/\">Eleventy Starter\nProject</a>\nEleventy\ndemo\n<a href=\"https://github.com/danurbanowicz/eleventy-netlify-boilerplate\">danurbanowicz/eleventy-netlify-boilerplate</a>\n<a href=\"https://github.com/danurbanowicz/eleventy-netlify-boilerplate\">read\nme</a></p>\n<p><a href=\"https://yellowcake.netlify.com/\">YellowCake\n- Complete website with blog</a>\nGatsby, Netlify-CMS, Uploadcare\ndemo\n<a href=\"https://github.com/thriveweb/yellowcake/\">thriveweb/yellowcake</a>\n<a href=\"https://thriveweb.com.au/the-lab/yellowcake-gatsby-react-js-starter-project/\">blog\npost</a></p>\n<p><a href=\"https://github.com/renestalder/nuxt-netlify-cms-starter-template\">Vue.js\n- Nuxt.js Starter Project</a>\nVue, Nuxt\ndemo\n<a href=\"https://github.com/renestalder/nuxt-netlify-cms-starter-template\">renestalder/nuxt-netlify-cms-starter-template</a>\n<a href=\"https://github.com/renestalder/nuxt-netlify-cms-starter-template\">read\nme</a></p>\n<p><a href=\"https://hexocms.imst.xyz/\">Hexo\nDemo</a>\nHexo\ndemo\n<a href=\"https://github.com/DemoMacro/Hexo-NetlifyCMS\">DemoMacro/Hexo-NetlifyCMS</a>\n<a href=\"https://github.com/DemoMacro/Hexo-NetlifyCMS\">read me</a></p>\n<p><a href=\"https://gitbook.imst.xyz/\">Gitbook\nDemo</a>\nGitbook\ndemo\n<a href=\"https://github.com/DemoMacro/Gitbook-NetlifyCMS\">DemoMacro/Gitbook-NetlifyCMS</a>\n<a href=\"https://github.com/DemoMacro/Gitbook-NetlifyCMS\">read me</a></p>\n<p><a href=\"https://vuepress.imst.xyz/\">VuePress\nDemo</a>\nVuePress\ndemo\n<a href=\"https://github.com/DemoMacro/VuePress-NetlifyCMS\">DemoMacro/VuePress-NetlifyCMS</a>\n<a href=\"https://github.com/DemoMacro/VuePress-NetlifyCMS\">read\nme</a></p>\n<p><a href=\"https://jigsaw-blog-netlify-netlifycms-template.netlify.com/\">Jigsaw\nBlog Starter Template Demo</a>\nJigsaw\ndemo\n<a href=\"https://github.com/erickpatrick/jigsaw-blog-netlify-netlifycms-template\">erickpatrick/jigsaw-blog-netlify-netlifycms-template</a>\n<a href=\"https://www.erickpatrick.net/blog/augmenting-tightenco-jigsaw-with-netlifycms/\">blog\npost</a></p>\n<p><a href=\"https://nuxt-netlifycms-boilerplate.netlify.com/\">Nuxt &#x26;\nNetlifyCMS Boilerplate</a>\nVue, Nuxt\ndemo\n<a href=\"https://github.com/tylermercer/nuxt-netlifycms-boilerplate\">tylermercer/nuxt-netlifycms-boilerplate</a>\n<a href=\"https://github.com/tylermercer/nuxt-netlifycms-boilerplate\">read\nme</a></p>\n<p><a href=\"https://netlifycms-nextjs.netlify.com/\">Next.js demo</a>\nNext.js\nblog\n<a href=\"https://github.com/masives/netlifycms-nextjs\">masives/netlifycms-nextjs</a>\n<a href=\"https://github.com/masives/netlifycms-nextjs\">read me</a></p>\n<p><a href=\"https://delog-w3layouts.netlify.com/\">Delog - Jamstack\nBlog with Netlify CMS</a>\nGatsby, Netlify-CMS\ndemo\n<a href=\"https://github.com/W3Layouts/gatsby-starter-delog\">W3Layouts/gatsby-starter-delog</a>\n<a href=\"https://w3layouts.com/articles/delog-gatsby-starter-netlify-cms/\">blog\npost</a></p>\n<p><a href=\"https://netlifycms-gridsome.suits.at/\">Netlify CMS template\nfor Gridsome</a>\nGridsome, Vue\ndemo\n<a href=\"https://github.com/suits-at/netlifycms-gridsome\">suits-at/netlifycms-gridsome</a>\n<a href=\"https://github.com/suits-at/netlifycms-gridsome\">read me</a></p>\n<p><a href=\"https://nextjs-netlify-blog-template.netlify.app/\">Next.js blogging\ntemplate for Netlify</a>\nNext.js, Netlify\nblog\n<a href=\"https://github.com/wutali/nextjs-netlify-blog-template\">wutali/nextjs-netlify-blog-template</a>\n<a href=\"https://github.com/wutali/nextjs-netlify-blog-template\">read\nme</a></p>\n<p><a href=\"https://github.com/pulumi/examples/tree/master/aws-ts-netlify-cms-and-oauth\">Netlify\nCMS and OAuth server on AWS</a>\nNetlify, Pulumi, AWS\nblog\n<a href=\"https://github.com/pulumi/examples/tree/master/aws-ts-netlify-cms-and-oauth\">pulumi/examples/aws-ts-netlify-cms-and-oauth</a>\n<a href=\"https://www.pulumi.com/blog/deploying-the-infrastructure-of-oauth-server-for-cms-app/\">blog\npost</a></p>\n<p><a href=\"https://creativedesignsguru.com/demo/Eleventy-Starter-Boilerplate/eleventy-starter-boilerplate-presentation/\">Eleventy\nStarter Boilerplate</a>\nEleventy, Netlify\ndemo\n<a href=\"https://github.com/ixartz/Eleventy-Starter-Boilerplate\">ixartz/Eleventy-Starter-Boilerplate</a>\n<a href=\"https://github.com/ixartz/Eleventy-Starter-Boilerplate\">read\nme</a></p>\n<p><a href=\"https://ntn-boilerplate.netlify.app/\">Nuxt, Tailwind &#x26;\nNetlifyCMS Boilerplate</a>\nVue, Nuxt\ndemo\n<a href=\"https://github.com/Knogobert/ntn-boilerplate\">Knogobert/ntn-boilerplate</a>\n<a href=\"https://github.com/Knogobert/ntn-boilerplate#readme\">read\nme</a></p>\n<p><a href=\"https://kind-mestorf-5a2bc0.netlify.com/\">Gatsby &#x26; Netlify\nCMS Personal Portfolio</a>\nGatsby\nportfolio\n<a href=\"https://github.com/EarlGeorge/React-Gatsby\">EarlGeorge/React-Gatsby</a>\n<a href=\"https://github.com/EarlGeorge/React-Gatsby/blob/master/README.md\">read\nme</a></p>\n<h1>Gatsby\n\n</h1>\n<p>This guide will help you get started using Netlify CMS and Gatsby.</p>\n<p>To get up and running with Gatsby, you’ll need to have <a href=\"https://nodejs.org/\">Node.js</a> installed on your computer. <em>Note: Gatsby's minimum supported Node.js version is Node 8.</em></p>\n<h2>Create a new Gatsby site</h2>\n<p>Let's create a new site using the default Gatsby Starter Blog. Run the following commands in the terminal, in the folder where you'd like to create the blog:</p>\n<h2>Get to know Gatsby</h2>\n<p>In your favorite code editor, open up the code generated for your \"Gatsby Starter Blog\" site, and take a look at the content directory.</p>\n<p>You will see that there are multiple Markdown files that represent blog posts. Open one .md file and you will see something like this:</p>\n<p>We can see above that each blog post has a title, a date, a description and a body. Now, let's recreate this using Netlify CMS.</p>\n<h2>Add Netlify CMS to your site</h2>\n<p>First let's install some dependencies. We'll need netlify-cms-app and gatsby-plugin-netlify-cms. Run the following command in the terminal at the root of your site:</p>\n<h3>Configuration</h3>\n<p>For the purpose of this guide we will deploy to Netlify from a GitHub repository which requires the minimum configuration.</p>\n<p>Create a config.yml file in the directory structure you see below:</p>\n<p>In your config.yml file paste the following configuration:</p>\n<p><strong>Note:</strong> The above configuration allows assets to be stored relative to their content. Therefore posts would be stored in the format below as it is in gatsby-starter-blog.</p>\n<p>Finally, add the plugin to your gatsby-config.js.</p>\n<h3>Push to GitHub</h3>\n<p>It's now time to commit your changes and push to GitHub. The Gatsby starter initializes Git automatically for you, so you only need to do:</p>\n<h3>Add your repo to Netlify</h3>\n<p>Go to Netlify and select 'New Site from Git'. Select GitHub and the repository you just pushed to. Click Configure Netlify on GitHub and give access to your repository. Finish the setup by clicking Deploy Site. Netlify will begin reading your repository and starting building your project.</p>\n<h3>Enable Identity and Git Gateway</h3>\n<p>Netlify's Identity and Git Gateway services allow you to manage CMS admin users for your site without requiring them to have an account with your Git host or commit access on your repo. From your site dashboard on Netlify:</p>\n<ol>\n<li>Go to <strong>Settings > Identity</strong>, and select <strong>Enable Identity service</strong>.</li>\n<li>Under <strong>Registration preferences</strong>, select <strong>Open</strong> or <strong>Invite only</strong>. In most cases, you want only invited users to access your CMS, but if you're just experimenting, you can leave it open for convenience.</li>\n<li>If you'd like to allow one-click login with services like Google and GitHub, check the boxes next to the services you'd like to use, under <strong>External providers</strong>.</li>\n<li>Scroll down to <strong>Services > Git Gateway</strong>, and click <strong>Enable Git Gateway</strong>. This authenticates with your Git host and generates an API access token. In this case, we're leaving the <strong>Roles</strong> field blank, which means any logged in user may access the CMS. For information on changing this, check the <a href=\"https://www.netlify.com/docs/identity/\">Netlify Identity documentation</a>.</li>\n</ol>\n<h2>Start publishing</h2>\n<p>It's time to create your first blog post. Login to your site's /admin/ page and create a new post by clicking New Blog. Add a title, a date and some text. When you click Publish, a new commit will be created in your GitHub repo with this format Create Blog “year-month-date-title”.</p>\n<p>Then Netlify will detect that there was a commit in your repo, and will start rebuilding your project. When your project is deployed you'll be able to see the post you created.</p>\n<h3>Cleanup</h3>\n<p>It is now safe to remove the default Gatsby blog posts.</p>"},{"url":"/blog/web-dev-trends/","relativePath":"blog/web-dev-trends.md","relativeDir":"blog","base":"web-dev-trends.md","name":"web-dev-trends","frontmatter":{"title":"Web Development Tools","subtitle":"In 2021","date":"2021-09-30","thumb_image_alt":"lorem-ipsum","excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post","thumb_image":"images/27697c1a901d3b3673aeb98edae4d2ae (2)-35ae1413.png"},"html":"<p><strong>1. AI Chatbots</strong><img src=\"https://blog.sagipl.com/wp-content/uploads/2019/05/AI-Chatbots-1-1024x573.png\"></p>\n<p>Artificial Intelligence (AI) refers to the intelligence displayed by machines. It is primarily used to replace human intelligence.</p>\n<p>As the demand for AI-powered automation, communication, and analytics solutions will rise this year, more web developers will be focusing on building AI-based chatbots and virtual assistant apps.</p>\n<p><strong>2. Single Page Application</strong></p>\n<p><a href=\"https://www.sagipl.com/ipad-apps-development/\">Single-page applications</a>, being light in weight, faster, and more efficient, increased both in demand and popularity in recent years.</p>\n<p>Developers will continue to use SPA for building responsive sites and apps in 2021.</p>\n<p><strong>3. JavaScript Frameworks</strong></p>\n<p>JavaScript continues to remain one of the <a href=\"https://blog.sagipl.com/top-programming-languages/\"><strong>most preferred web development languages</strong></a> owing to its flexibility, power and evolving frameworks.</p>\n<p>This year too, we will see many new applications being developed in this developer-friendly language.</p>\n<p><strong>4. Progressive Web Apps (PWAs)</strong></p>\n<p>These are special web applications which are designed to load with progressive enhancement.</p>\n<p>Because of its fast-loading and high functionality features, PWA will continue to remain one of the year’s hottest web trends.</p>\n<p><strong>5. Mobile-Friendly Website</strong></p>\n<p>Mobile-responsive sites are the ones that are designed to work smoothly across devices of all sizes.</p>\n<p>Owing to Google’s mobile-first index and other search guidelines, developers will keep offering mobile-optimized sites this year and beyond.</p>\n<p><strong>6. Blockchain Technology</strong></p>\n<p>Blockchain, which was founded as a technology for secure digital payments, is now finding its place as a distributed ledger, which is secure, decentralized and public and will dominate the web development industry in the coming years.</p>\n<p><strong>7. Motion UI</strong></p>\n<p>Motion UI (User Interface) is a technology for creating visually appealing apps, especially animations, graphics, and transitions.</p>\n<p>Owing to its great ability for <a href=\"https://www.sagipl.com/website-design/\">creating an interactive web design</a>, Motion UI will be a primary tool for web developers in 2021.</p>\n<p><strong>8. Accelerated Mobile Pages (AMP)</strong></p>\n<p>Accelerated mobile pages are an initiative by Google to ensure that existing desktop websites give an equally amazing user experience across mobile devices.</p>\n<p>Web developers who are familiar with this tech are helping companies to implement the same on their websites.</p>\n<p><strong>9. Cybersecurity</strong></p>\n<p>Cybersecurity, which is another term for IT security, will continue to have its place in the online space as long as the world of internet is threatened by data breaches, hacking and similar cyber attacks.</p>\n<p>Developers with specialization in IT security will be in high demand this year.</p>\n<p><strong>10. VR and AR</strong></p>\n<p>The Augmented Reality and Virtual Reality Technologies, which were introduced only two years back, have now become a core part of the modern web development frameworks.</p>\n<p>From digital reality to visualization to 3D replicas, AR/VR will be used for enhancing user experience in the online space.</p>\n<p><strong>11. Voice Search</strong></p>\n<p>Following Google’s increased focus on voice search queries, websites based on voice search optimization are now trending more than ever.</p>\n<p>As the number of people using voice searches will increase this year, so will the demand for websites optimized for the same.</p>\n<p><strong>12.</strong> <strong>Push Notification</strong></p>\n<p>Push Notification is replacing the Newsletter service. It is not very old but maintaining a high conversion rate better than Newsletters.</p>\n<p>Services and platforms like Onesignal, ZoPush, Push Engage are improving day by day, so it will be in trend in upcoming years and web developers also have to take care of it.</p>\n<p>SAG IPL is a leading global <a href=\"https://www.sagipl.com/web-development/\">web development company</a> providing modern web/app development services to clients worldwide.</p>"},{"url":"/blog/python-resources/","relativePath":"blog/python-resources.md","relativeDir":"blog","base":"python-resources.md","name":"python-resources","frontmatter":{"title":"Python Resources","date":"2021-06-03","image":"images/best-zebra.gif","seo":{"title":"Python Practice","description":"Commodo ante vis placerat interdum massa massa primis","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"Python Practice","keyName":"property"},{"name":"og:description","value":"Commodo ante vis placerat interdum massa massa primis","keyName":"property"},{"name":"og:image","value":"images/2.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Python Practice"},{"name":"twitter:description","value":"Commodo ante vis placerat interdum massa massa primis"},{"name":"twitter:image","value":"images/2.jpg","relativeUrl":true}]},"template":"post","thumb_image":"images/superb-amaranth.png","thumb_image_alt":"python logo"},"html":"<h1>Beginners Guide To Python<a href=\"https://levelup.gitconnected.com/basic-web-development-environment-setup-9f36c3f15afe\"><strong>Basic Web Development Environment Setup</strong>\n<em>Windows Subsystem for Linux (WSL) and Ubuntu</em>levelup.gitconnected.com</a><img src=\"https://cdn-images-1.medium.com/max/600/1*59V2ZNbyJfsdGR2N20PM7w.png\"><img src=\"https://cdn-images-1.medium.com/max/800/0*oVIDxWdgJXoIt7CI.jpg\"><a href=\"https://trinket.io/python3/2b693977e7\"><strong>Put Python Anywhere on the Web</strong>\n<em>Python in the browser. No installation required.</em>trinket.io</a>\n\n</h1>\n<iframe src=\"https://py-prac-42.netlify.app/\" width=\"100%\" height=\"1200px\"><iframe>\n<p>My favorite language for maintainability is Python. It has simple, clean syntax, object encapsulation, good library support, and optional named parameters.</p>\n<ul>\n<li>Bram Cohen</li>\n</ul>\n<p>Article on basic web development setup… it is geared towards web but VSCode is an incredibly versitile editor and this stack really could suit just about anyone working in the field of computer science.</p>\n<h3>The Repository &#x26; Live Site Behind This Article:</h3>\n<h3>About Python(Taken From Tutorial Page Of Docs):</h3>\n<p><a href=\"https://docs.python.org/3/tutorial/appetite.html\">Python enables programs to be written compactly and readably. Programs written in Python are typically much shorter than equivalent C, C++, or Java programs, for several reasons:</a></p>\n<ul>\n<li>the high-level data types allow you to express complex operations in a single statement;</li>\n<li>statement grouping is done by indentation instead of beginning and ending brackets;</li>\n<li>no variable or argument declarations are necessary.</li>\n</ul>\n<h3>Installing Python:</h3>\n<h3>Windows</h3>\n<p>To determine if your Windows computer already has Python 3:</p>\n<ol>\n<li>Open a command prompt by entering command prompt in the Windows 10 search box and selecting the Command Prompt App in the Best match section of the results.</li>\n<li>Enter the following command and then select the Enter key:</li>\n<li>ConsoleCopy</li>\n</ol>\n<p>python --version</p>\n<ol>\n<li>Running python --version may not return a value, or may return an error message stating <em>'python' is not recognized as an internal or external command, operable program or batch file.</em> This indicates Python is not installed on your Windows system.</li>\n<li>If you see the word Python with a set of numbers separated by . characters, some version of Python is installed.</li>\n</ol>\n<h4>i.e.</h4>\n<blockquote>\n<p>Python 3.8.0</p>\n</blockquote>\n<p><strong>As long as the first number is 3</strong>, you have Python 3 installed.</p>\n<blockquote>\n<p>Download Page:</p>\n<p><a href=\"https://www.python.org/downloads/release/python-395/\">https://www.python.org/downloads/release/python-395/</a></p>\n</blockquote>\n<blockquote>\n<p>Download Link:</p>\n<p><a href=\"https://www.python.org/ftp/python/3.9.5/python-3.9.5-amd64.exe\">https://www.python.org/ftp/python/3.9.5/python-3.9.5-amd64.exe</a></p>\n</blockquote>\n<h3>Install Jupyter Notebooks:</h3>\n<h3>pip</h3>\n<p>If you use pip, you can install it with:</p>\n<p>If installing using pip install --user, you must add the user-level bin directory to your PATH environment variable in order to launch jupyter lab. If you are using a Unix derivative (FreeBSD, GNU / Linux, OS X), you can achieve this by using export PATH=\"$HOME/.local/bin:$PATH\" command.</p>\n<h3>pipenv</h3>\n<p>If you use pipenv, you can install it as:</p>\n<p>or from a git checkout:</p>\n<p>When using pipenv, in order to launch jupyter lab, you must activate the project’s virtualenv. For example, in the directory where pipenv’s Pipfile and Pipfile.lock live (i.e., where you ran the above commands):</p>\n<p>Alternatively, you can run jupyter lab inside the virtualenv with</p>\n<p><a href=\"https://nbviewer.jupyter.org/github/bgoonz/Jupyter-Notebooks/tree/master/\">Jupyter Notebook Viewer</a></p>\n<h3>Python Syntax</h3>\n<p>Python syntax was made for readability, and easy editing. For example, the python language uses a : and indented code, while javascript and others generally use {} and indented code.</p>\n<h3>First Program</h3>\n<p>Lets create a <a href=\"https://repl.it/languages/python3\">python 3</a> repl, and call it <em>Hello World</em>. Now you have a blank file called <em>main.py</em>. Now let us write our first line of code:</p>\n<blockquote>\n<p><em>Brian Kernighan actually wrote the first “Hello, World!” program as part of the documentation for the BCPL programming language developed by Martin Richards.</em></p>\n</blockquote>\n<p>Now, press the run button, which obviously runs the code. If you are not using replit, this will not work. You should research how to run a file with your text editor.</p>\n<h3>Command Line</h3>\n<p>If you look to your left at the console where hello world was just printed, you can see a >, >>>, or $ depending on what you are using. After the prompt, try typing a line of code.</p>\n<p>The command line allows you to execute single lines of code at a time. It is often used when trying out a new function or method in the language.</p>\n<h3>New: Comments!</h3>\n<p>Another cool thing that you can generally do with all languages, are comments. In python, a comment starts with a #. The computer ignores all text starting after the #.</p>\n<p># Write some comments!</p>\n<p>If you have a huge comment, do <strong>not</strong> comment all the 350 lines, just put ''' before it, and ''' at the end. Technically, this is not a comment but a string, but the computer still ignores it, so we will use it.</p>\n<h3>New: Variables!</h3>\n<p>Unlike many other languages, there is no var, let, or const to declare a variable in python. You simply go name = 'value'.</p>\n<p>Remember, there is a difference between integers and strings. <em>Remember: String = \"\".</em> To convert between these two, you can put an int in a str() function, and a string in a int() function. There is also a less used one, called a float. Mainly, these are integers with decimals. Change them using the float() command.</p>\n<p><a href=\"https://repl.it/@bgoonz/second-scr?lite=true&#x26;referrer=https%3A%2F%2Fbryanguner.medium.com\">https://repl.it/@bgoonz/second-scr?lite=true&#x26;referrer=https%3A%2F%2Fbryanguner.medium.com</a></p>\n<p>Instead of using the , in the print function, you can put a + to combine the variables and string.</p>\n<h3>Operators</h3>\n<p>There are many operators in python:</p>\n<ul>\n<li>+</li>\n<li>-</li>\n<li>/</li>\n<li>*\nThese operators are the same in most languages, and allow for addition, subtraction, division, and multiplicaiton.\nNow, we can look at a few more complicated ones:</li>\n</ul>\n<p><em>simpleops.py</em></p>\n<p>You should already know everything shown above, as it is similar to other languages. If you continue down, you will see more complicated ones.</p>\n<p><em>complexop.py</em></p>\n<p>The ones above are to edit the current value of the variable.\nSorry to JS users, as there is no i++; or anything.</p>\n<h3><em>Fun Fact:\nThe python language was named after Monty Python.</em></h3>\n<p>If you really want to know about the others, view <a href=\"https://www.tutorialspoint.com/python/python_basic_operators.htm\">Py Operators</a></p>\n<h3>More Things With Strings</h3>\n<p>Like the title?\nAnyways, a ' and a \" both indicate a string, but <strong>do not combine them!</strong></p>\n<p><em>quotes.py</em></p>\n<p><em>slicing.py</em></p>\n<h3>String Slicing</h3>\n<p>You can look at only certain parts of the string by slicing it, using [num:num].\nThe first number stands for how far in you go from the front, and the second stands for how far in you go from the back.</p>\n<h3>Methods and Functions</h3>\n<p>Here is a list of functions/methods we will go over:</p>\n<ul>\n<li>.strip()</li>\n<li>len()</li>\n<li>.lower()</li>\n<li>.upper()</li>\n<li>.replace()</li>\n<li>.split()</li>\n</ul>\n<h3>New: Input()</h3>\n<p>Input is a function that gathers input entered from the user in the command line. It takes one optional parameter, which is the users prompt.</p>\n<p><em>inp.py</em></p>\n<p>If you wanted to make it smaller, and look neater to the user, you could do…</p>\n<p><em>inp2.py</em></p>\n<p>Running:\n<em>inp.py</em></p>\n<p><em>inp2.py</em></p>\n<h3>New: Importing Modules</h3>\n<p>Python has created a lot of functions that are located in other .py files. You need to import these <strong>modules</strong> to gain access to the,, You may wonder why python did this. The purpose of separate modules is to make python faster. Instead of storing millions and millions of functions, , it only needs a few basic ones. To import a module, you must write input &#x3C;modulename>. Do not add the .py extension to the file name. In this example , we will be using a python created module named random.</p>\n<p><em>module.py</em></p>\n<p>Now, I have access to all functions in the random.py file. To access a specific function in the module, you would do &#x3C;module>.&#x3C;function>. For example:</p>\n<p><em>module2.py</em></p>\n<blockquote>\n<p>*Pro Tip:\nDo from random import randint to not have to do random.randint(), just randint()\nTo import all functions from a module, you could do from random import **</p>\n</blockquote>\n<blockquote>\n</blockquote>\n<h3>New: Loops!</h3>\n<p>Loops allow you to repeat code over and over again. This is useful if you want to print Hi with a delay of one second 100 times.</p>\n<h4>for Loop</h4>\n<p>The for loop goes through a list of variables, making a seperate variable equal one of the list every time.\nLet’s say we wanted to create the example above.</p>\n<p><em>loop.py</em></p>\n<p>This will print Hello with a .3 second delay 100 times. This is just one way to use it, but it is usually used like this:</p>\n<p><em>loop2.py</em></p>\n<p><a href=\"https://storage.googleapis.com/replit/images/1539649280875_37d22e6d49e8e8fbc453631def345387.pn\">https://storage.googleapis.com/replit/images/1539649280875_37d22e6d49e8e8fbc453631def345387.pn</a></p>\n<h4>while Loop</h4>\n<p>The while loop runs the code while something stays true. You would put while &#x3C;expression>. Every time the loop runs, it evaluates if the expression is True. It it is, it runs the code, if not it continues outside of the loop. For example:</p>\n<p><em>while.py</em></p>\n<p>Or you could do:</p>\n<p><em>while2.py</em></p>\n<h3>New: if Statement</h3>\n<p>The if statement allows you to check if something is True. If so, it runs the code, if not, it continues on. It is kind of like a while loop, but it executes <strong>only once</strong>. An if statement is written:</p>\n<p><em>if.py</em></p>\n<p>Now, you may think that it would be better if you could make it print only one message. Not as many that are True. You can do that with an elif statement:</p>\n<p><em>elif.py</em></p>\n<p>Now, you may wonder how to run code if none work. Well, there is a simple statement called else:</p>\n<p><em>else.py</em></p>\n<h3>New: Functions (def)</h3>\n<p>So far, you have only seen how to use functions other people have made. Let use the example that you want to print the a random number between 1 and 9, and print different text every time.\nIt is quite tiring to type:</p>\n<p>Characters: 389</p>\n<p><em>nofunc.py</em></p>\n<p>Now with functions, you can seriously lower the amount of characters:</p>\n<p>Characters: 254</p>\n<p><em>functions.py</em></p>\n<h3>Project Based Learning:</h3>\n<p>The following is a modified version of a tutorial posted By: <a href=\"https://replit.com/@InvisibleOne\">InvisibleOne </a></p>\n<p>I would cite the original tutorial it’s self but at the time of this writing I can no longer find it on his repl.it profile and so the only reference I have are my own notes from following the tutorial when I first found it.</p>\n<h3>1. Adventure Story</h3>\n<p>The first thing you need with an adventure story is a great storyline, something that is exciting and fun. The idea is, that at each pivotal point in the story, you give the player the opportunity to make a choice.\nFirst things first, let’s import the stuff that we need, like this:</p>\n<p>Now, we need some variables to hold some of the player data.</p>\n<p>Ok, now we have the player’s name and nickname, let’s welcome them to the game</p>\n<p>Now for the story. The most important part of all stories is the introduction, so let’s print our introduction</p>\n<p>Now, we’ll give the player their first choice</p>\n<p>There you have it, a pretty simple choose your own ending story. You can make it as complex or uncomplex as you like.</p>\n<h3>2. TEXT ENCODER</h3>\n<p>Ever make secret messages as a kid? I used to. Anyways, here’s the way you can make a program to encode messages! It’s pretty simple. First things first, let’s get the message the user wants to encode, we’ll use input() for that:</p>\n<p>Now we need to split that string into a list of characters, this part is a bit more complicated.</p>\n<p>Now we need to convert the characters into code, well do this with a for loop:</p>\n<p>Once we’ve encoded the text, we’ll print it back for the user</p>\n<p>And if you want to decode something, it is this same process but in reverse!</p>\n<h3>3. Guess my Number</h3>\n<p>Number guessing games are fun and pretty simple, all you need are a few loops. To start, we need to import random.</p>\n<p>That is pretty simple. Now we’ll make a list with the numbers were want available for the game</p>\n<p>Next, we get a random number from the list</p>\n<p>Now, we need to ask the user for input, we’ll to this with a while loop</p>\n<p>Have fun with this!</p>\n<h3>4. Notes</h3>\n<p>Here is a more advanced project, but still pretty easy. This will be using a txt file to save some notes. The first thing we need to do is to create a txt file in your repl, name it ‘notes.txt’\nNow, to open a file in python we use open(‘filename’, type) The type can be ‘r’ for read, or ‘w’ for write. There is another option, but we won’t be using that here. Now, the first thing we are going to do is get what the user would like to save:</p>\n<p>Now we’ll open our file and save that text</p>\n<p>There we go, now the information is in the file. Next, we’ll retrieve it</p>\n<p>There we go, that’s how you can open files and close files with python</p>\n<h3>5. Random Dare Generator</h3>\n<p>Who doesn’t love a good dare? Here is a program that can generate random dares. The first thing we’ll need to do is as always, import random. Then we’ll make some lists of dares</p>"},{"url":"/blog/python-for-js-dev/","relativePath":"blog/python-for-js-dev.md","relativeDir":"blog","base":"python-for-js-dev.md","name":"python-for-js-dev","frontmatter":{"title":"Python Resources","date":"2021-06-03","image":"images/python.png","seo":{"title":"python","description":"Commodo ante vis placerat interdum massa massa primis","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"python","keyName":"property"},{"name":"og:description","value":"Commodo ante vis placerat interdum massa massa primis","keyName":"property"},{"name":"og:image","value":"images/python.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"python"},{"name":"twitter:description","value":"Commodo ante vis placerat interdum massa massa primis"},{"name":"twitter:image","value":"images/python.png","relativeUrl":true}]},"template":"post","thumb_image":"images/superb-triceratops.jpg","thumb_image_alt":"python logo"},"html":"<h1>Python Study Guide for a JavaScript Programmer\n</h1>\n<p><img src=\"https://miro.medium.com/max/1970/1*3V9VOfPk_hrFdbEAd3j-QQ.png\"><img src=\"https://miro.medium.com/max/52/0*eC4EvZcv6hhH88jX.png?q=20\"><img src=\"https://miro.medium.com/max/647/0*eC4EvZcv6hhH88jX.png\"><img src=\"https://miro.medium.com/max/60/0*Ez_1PZ93N4FfvkRr.png?q=20\"><img src=\"https://miro.medium.com/max/608/0*Ez_1PZ93N4FfvkRr.png\"><img src=\"https://miro.medium.com/max/60/0*eE3E5H0AoqkhqK1z.png?q=20\"><img src=\"https://miro.medium.com/max/1648/0*eE3E5H0AoqkhqK1z.png\"><img src=\"https://miro.medium.com/max/60/0*Q0CMqFd4PozLDFPB.png?q=20\"><img src=\"https://miro.medium.com/max/1638/0*Q0CMqFd4PozLDFPB.png\"><img src=\"https://miro.medium.com/max/3216/0*HQpndNhm1Z_xSoHb.png\"><img src=\"https://miro.medium.com/max/60/0*qHzGRLTOMTf30miT.png?q=20\"><img src=\"https://miro.medium.com/max/1614/0*qHzGRLTOMTf30miT.png\">[</p>\n<p>](<a href=\"https://github.com/bgoonz\">https://github.com/bgoonz</a>)</p>\n<iframe src=\"https://py-prac-42.netlify.app/\" width=\"100%\" height=\"1200px\"><iframe>\n<h1>Applications of Tutorial &#x26; Cheat Sheet Respectivley (At Bottom Of Tutorial):</h1>\n<h1>Basics</h1>\n<ul>\n<li><strong>PEP8</strong> : Python Enhancement Proposals, style-guide for Python.</li>\n<li>print is the equivalent of console.log.</li>\n</ul>\n<blockquote>\n<p>‘print() == console.log()’</p>\n</blockquote>\n<h1># is used to make comments in your code.</h1>\n<blockquote>\n<p><em>Python has a built in help function that let’s you see a description of the source code without having to navigate to it… “-SickNasty … Autor Unknown”</em></p>\n</blockquote>\n<h1>Numbers</h1>\n<ul>\n<li>Python has three types of numbers:</li>\n<li><strong>Integer</strong></li>\n<li><strong>Positive and Negative Counting Numbers.</strong></li>\n</ul>\n<p>No Decimal Point</p>\n<blockquote>\n<p>Created by a literal non-decimal point number … <strong>or</strong> … with the <em>int()</em> constructor.</p>\n</blockquote>\n<p><strong>3. Complex Numbers</strong></p>\n<blockquote>\n<p>Consist of a real part and imaginary part.</p>\n</blockquote>\n<h2>Boolean is a subtype of integer in Python.🤷‍♂️</h2>\n<blockquote>\n<p>If you came from a background in JavaScript and learned to accept the premise(s) of the following meme…</p>\n</blockquote>\n<blockquote>\n<p>Than I am sure you will find the means to suspend your disbelief.</p>\n</blockquote>\n<h1>KEEP IN MIND:</h1>\n<blockquote>\n<p><strong>The i is switched to a j in programming.</strong></p>\n</blockquote>\n<p>T*his is because the letter i is common place as the de facto index for any and all enumerable entities so it just makes sense not to compete for name-**space *<em>when there’s another 25 letters that don’t get used for every loop under the sun. My most medium apologies to Leonhard Euler.</em></p>\n<ul>\n<li><strong>Type Casting</strong> : The process of converting one number to another.</li>\n</ul>\n<p><strong>The arithmetic operators are the same between JS and Python, with two additions:</strong></p>\n<ul>\n<li><em>“**” : Double asterisk for exponent.</em></li>\n<li><em>“//” : Integer Division.</em></li>\n<li><strong>There are no spaces between math operations in Python.</strong></li>\n<li><strong>Integer Division gives the other part of the number from Module; it is a way to do round down numbers replacing Math.floor() in JS.</strong></li>\n<li><strong>There are no ++ and -- in Python, the only shorthand operators are:</strong></li>\n</ul>\n<h1>Strings</h1>\n<ul>\n<li>Python uses both single and double quotes.</li>\n<li>You can escape strings like so 'Jodi asked, \"What\\'s up, Sam?\"'</li>\n<li>Multiline strings use triple quotes.</li>\n</ul>\n<p><strong>Use the len() function to get the length of a string.</strong></p>\n<h1><strong>Python uses zero-based indexing</strong></h1>\n<h2>Python allows negative indexing (thank god!)</h2>\n<ul>\n<li>Python let’s you use ranges</li>\n</ul>\n<p>You can think of this as roughly equivalent to the slice method called on a JavaScript object or string… *(mind you that in JS … strings are wrapped in an object (under the hood)… upon which the string methods are actually called. As a immutable privative type <strong>by textbook definition</strong>, a string literal could not hope to invoke most of it’s methods without violating the state it was bound to on initialization if it were not for this bit of syntactic sugar.)*</p>\n<ul>\n<li>The end range is exclusive just like slice in JS.</li>\n</ul>\n<!---->\n<ul>\n<li>The index string function is the equiv. of indexOf() in JS</li>\n</ul>\n<!---->\n<ul>\n<li>The count function finds out how many times a substring appears in a string… pretty nifty for a hard coded feature of the language.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>You can use + to concatenate strings, just like in JS.</strong></li>\n<li><strong>You can also use “*” to repeat strings or multiply strings.</strong></li>\n<li><strong>Use the format() function to use placeholders in a string to input values later on.</strong></li>\n</ul>\n<!---->\n<ul>\n<li>*Shorthand way to use format function is:\n*print(f'Your name is {first<em>name} {last</em>name}')</li>\n</ul>\n<h2>Some useful string methods.</h2>\n<ul>\n<li><strong>Note that in JS join is used on an Array, in Python it is used on String.</strong></li>\n</ul>\n<!---->\n<ul>\n<li>There are also many handy testing methods.</li>\n</ul>\n<h1>Variables and Expressions</h1>\n<ul>\n<li><strong>Duck-Typing</strong> : Programming Style which avoids checking an object’s type to figure out what it can do.</li>\n<li>Duck Typing is the fundamental approach of Python.</li>\n<li>Assignment of a value automatically declares a variable.</li>\n</ul>\n<!---->\n<ul>\n<li><strong><em>You can chain variable assignments to give multiple var names the same value.</em></strong></li>\n</ul>\n<h2>Use with caution as this is highly unreadable</h2>\n<h2>The value and type of a variable can be re-assigned at any time.</h2>\n<ul>\n<li>*NaN does not exist in Python, but you can 'create' it like so:\n<strong>print(float(\"nan\"))*</strong></li>\n<li><em>Python replaces null with none.</em></li>\n<li><strong>*none is an object</strong> and can be directly assigned to a variable.*</li>\n</ul>\n<blockquote>\n<p>Using none is a convenient way to check to see why an action may not be operating correctly in your program.</p>\n</blockquote>\n<h1>Boolean Data Type</h1>\n<ul>\n<li>One of the biggest benefits of Python is that it reads more like English than JS does.</li>\n</ul>\n<!---->\n<ul>\n<li>By default, Python considers an object to be true UNLESS it is one of the following:</li>\n<li>Constant None or False</li>\n<li>Zero of any numeric type.</li>\n<li>Empty Sequence or Collection.</li>\n<li>True and False must be capitalized</li>\n</ul>\n<h1>Comparison Operators</h1>\n<ul>\n<li>Python uses all the same equality operators as JS.</li>\n<li>In Python, equality operators are processed from left to right.</li>\n<li>Logical operators are processed in this order:</li>\n<li><strong>NOT</strong></li>\n<li><strong>AND</strong></li>\n<li><strong>OR</strong></li>\n</ul>\n<blockquote>\n<p>Just like in JS, you can use parentheses to change the inherent order of operations.</p>\n<p><strong>Short Circuit</strong> : Stopping a program when a true or false has been reached.</p>\n</blockquote>\n<h1>Identity vs Equality</h1>\n<ul>\n<li>In the Python community it is better to use is and is not over == or !=</li>\n</ul>\n<h1>If Statements</h1>\n<blockquote>\n<p>Remember the order of elif statements matter.</p>\n</blockquote>\n<h1>While Statements</h1>\n<ul>\n<li>Break statement also exists in Python.</li>\n</ul>\n<!---->\n<ul>\n<li>As are continue statements</li>\n</ul>\n<h1>Try/Except Statements</h1>\n<ul>\n<li>Python equivalent to try/catch</li>\n</ul>\n<!---->\n<ul>\n<li>You can name an error to give the output more specificity.</li>\n</ul>\n<!---->\n<ul>\n<li>You can also use the pass commmand to by pass a certain error.</li>\n</ul>\n<!---->\n<ul>\n<li>The pass method won't allow you to bypass every single error so you can chain an exception series like so:</li>\n</ul>\n<!---->\n<ul>\n<li>You can use an else statement to end a chain of except statements.</li>\n</ul>\n<!---->\n<ul>\n<li>finally is used at the end to clean up all actions under any circumstance.</li>\n</ul>\n<!---->\n<ul>\n<li>Using duck typing to check to see if some value is able to use a certain method.</li>\n</ul>\n<h1>Pass</h1>\n<ul>\n<li>Pass Keyword is required to write the JS equivalent of :</li>\n</ul>\n<h1>Functions</h1>\n<ul>\n<li><strong>Function definition includes:</strong></li>\n<li><strong>The def keyword</strong></li>\n<li><strong>The name of the function</strong></li>\n<li><strong>A list of parameters enclosed in parentheses.</strong></li>\n<li><strong>A colon at the end of the line.</strong></li>\n<li><strong>One tab indentation for the code to run.</strong></li>\n<li><strong>You can use default parameters just like in JS</strong></li>\n</ul>\n<h2><strong>Keep in mind, default parameters must always come after regular parameters.</strong></h2>\n<ul>\n<li><em>You can specify arguments by name without destructuring in Python.</em></li>\n</ul>\n<!---->\n<ul>\n<li>The lambda keyword is used to create anonymous functions and are supposed to be one-liners.</li>\n</ul>\n<p>toUpper = lambda s: s.upper()</p>\n<h1>Notes</h1>\n<h2>Formatted Strings</h2>\n<blockquote>\n<p>Remember that in Python join() is called on a string with an array/list passed in as the argument.\nPython has a very powerful formatting engine.\nformat() is also applied directly to strings.</p>\n</blockquote>\n<h1>Comma Thousands Separator</h1>\n<h1>Date and Time</h1>\n<h1>Percentage</h1>\n<h1>Data Tables</h1>\n<p><strong>Python can be used to display html, css, and JS.</strong>\n<em>It is common to use Python as an API (Application Programming Interface)</em></p>\n<h2>Structured Data</h2>\n<h2>Sequence : The most basic data structure in Python where the index determines the order.</h2>\n<blockquote>\n<p>List\nTuple\nRange\nCollections : Unordered data structures, hashable values.</p>\n</blockquote>\n<h2>Dictionaries\nSets</h2>\n<h2>Iterable : Generic name for a sequence or collection; any object that can be iterated through.</h2>\n<h2>Can be mutable or immutable.\nBuilt In Data Types</h2>\n<h1>Lists are the python equivalent of arrays.</h1>\n<h1>You can instantiate</h1>\n<h2>Test if a value is in a list.</h2>\n<h2>Instantiated with parentheses</h2>\n<h2>Sometimes instantiated without</h2>\n<h2>Tuple() built in can be used to convert other data into a tuple</h2>\n<h2>Ranges : A list of numbers which can’t be changed; often used with for loops.</h2>\n<p><strong>Declared using one to three parameters</strong>.</p>\n<blockquote>\n<p>Start : opt. default 0, first # in sequence.\nStop : required next number past the last number in the sequence.\nStep : opt. default 1, difference between each number in the sequence.</p>\n</blockquote>\n<h2>Dictionaries : Mappable collection where a hashable value is used as a key to ref. an object stored in the dictionary.</h2>\n<h2>Mutable.</h2>\n<p><strong><em>Declared with curly braces of the built in dict()</em></strong></p>\n<blockquote>\n<p><em>Benefit of dictionaries in Python is that it doesn’t matter how it is defined, if the keys and values are the same the dictionaries are considered equal.</em></p>\n</blockquote>\n<p><strong>Use the in operator to see if a key exists in a dictionary.</strong></p>\n<p>S<strong>ets : Unordered collection of distinct objects; objects that need to be hashable.</strong></p>\n<blockquote>\n<p><em>Always be unique, duplicate items are auto dropped from the set.</em></p>\n</blockquote>\n<h2>Common Uses:</h2>\n<blockquote>\n<p>Removing Duplicates\nMembership Testing\nMathematical Operators: Intersection, Union, Difference, Symmetric Difference.</p>\n</blockquote>\n<p><strong>Standard Set is mutable, Python has a immutable version called frozenset.\nSets created by putting comma seperated values inside braces:</strong></p>\n<h2>Also can use set constructor to automatically put it into a set.</h2>\n<p><strong>filter(function, iterable) : creates new iterable of the same type which includes each item for which the function returns true.</strong></p>\n<p><strong>map(function, iterable) : creates new iterable of the same type which includes the result of calling the function on every item of the iterable.</strong></p>\n<p><strong>sorted(iterable, key=None, reverse=False) : creates a new sorted list from the items in the iterable.</strong></p>\n<p><strong>Output is always a list</strong></p>\n<p><strong>key: opt function which coverts and item to a value to be compared.</strong></p>\n<p><strong>reverse: optional boolean.</strong></p>\n<p><strong>enumerate(iterable, start=0) : starts with a sequence and converts it to a series of tuples</strong></p>\n<h2>(0, ‘First’), (1, ‘Second’), (2, ‘Third’), (3, ‘Fourth’)</h2>\n<h2>(1, ‘First’), (2, ‘Second’), (3, ‘Third’), (4, ‘Fourth’)</h2>\n<blockquote>\n<p>zip(*iterables) : creates a zip object filled with tuples that combine 1 to 1 the items in each provided iterable.\nFunctions that analyze iterable</p>\n</blockquote>\n<p><strong>len(iterable) : returns the count of the number of items.</strong></p>\n<p><strong>max(*args, key=None) : returns the largest of two or more arguments.</strong></p>\n<p><strong>max(iterable, key=None) : returns the largest item in the iterable.</strong></p>\n<p><em>key optional function which converts an item to a value to be compared.\nmin works the same way as max</em></p>\n<p><strong>sum(iterable) : used with a list of numbers to generate the total.</strong></p>\n<p><em>There is a faster way to concatenate an array of strings into one string, so do not use sum for that.</em></p>\n<p><strong>any(iterable) : returns True if any items in the iterable are true.</strong></p>\n<p><strong>all(iterable) : returns True is all items in the iterable are true.</strong></p>\n<h1>Working with dictionaries</h1>\n<p><strong>dir(dictionary) : returns the list of keys in the dictionary.\nWorking with sets</strong></p>\n<p><strong>Union : The pipe | operator or union(*sets) function can be used to produce a new set which is a combination of all elements in the provided set.</strong></p>\n<h2>Intersection : The &#x26; operator ca be used to produce a new set of only the elements that appear in all sets.</h2>\n<p><strong>Symmetric Difference : The ^ operator can be used to produce a new set of only the elements that appear in exactly one set and not in both.</strong></p>\n<h1><strong>For Statements\nIn python, there is only one for loop.</strong></h1>\n<p>Always Includes:</p>\n<blockquote>\n<p>1. The for keyword\n2. A variable name\n3. The ‘in’ keyword\n4. An iterable of some kid\n5. A colon\n6. On the next line, an indented block of code called the for clause.</p>\n</blockquote>\n<p><strong>You can use break and continue statements inside for loops as well.</strong></p>\n<p><strong>You can use the range function as the iterable for the for loop.</strong></p>\n<p><strong><em>Common technique is to use the len() on a pre-defined list with a for loop to iterate over the indices of the list.</em></strong></p>\n<p><strong>You can loop and destructure at the same time.</strong></p>\n<blockquote>\n<p>Prints 1, 2</p>\n<p>Prints 3, 4</p>\n<p>Prints 5, 6</p>\n</blockquote>\n<p><strong>You can use values() and keys() to loop over dictionaries.</strong></p>\n<p><em>Prints red</em></p>\n<p><em>Prints 42</em></p>\n<p><em>Prints color</em></p>\n<p><em>Prints age</em></p>\n<p><strong>For loops can also iterate over both keys and values.</strong></p>\n<p><strong>Getting tuples</strong></p>\n<p><em>Prints (‘color’, ‘red’)</em></p>\n<p><em>Prints (‘age’, 42)</em></p>\n<p><em>Destructuring to values</em></p>\n<p><em>Prints Key: age Value: 42</em></p>\n<p><em>Prints Key: color Value: red</em></p>\n<p><strong>Looping over string</strong></p>\n<p><strong>When you order arguments within a function or function call, the args need to occur in a particular order:</strong></p>\n<p><em>formal positional args.</em></p>\n<p>*args</p>\n<p><em>keyword args with default values</em></p>\n<p>**kwargs</p>\n<h1><strong>Importing in Python</strong></h1>\n<p><strong>Modules are similar to packages in Node.js</strong>\nCome in different types:</p>\n<p>Built-In,</p>\n<p>Third-Party,</p>\n<p>Custom.</p>\n<p><strong>All loaded using import statements.</strong></p>\n<h1><strong>Terms</strong></h1>\n<blockquote>\n<p>module : Python code in a separate file.\npackage : Path to a directory that contains modules.\n<a href=\"http://init.py/\"><strong>init.py</strong></a> : Default file for a package.\nsubmodule : Another file in a module’s folder.\nfunction : Function in a module.</p>\n</blockquote>\n<p><strong>A module can be any file but it is usually created by placing a special file init.py into a folder. pic</strong></p>\n<p><em>Try to avoid importing with wildcards in Python.</em></p>\n<p><em>Use multiple lines for clarity when importing.</em></p>\n<h1>Watching Out for Python 2</h1>\n<p><strong>Python 3 removed &#x3C;> and only uses !=</strong></p>\n<p><strong>format() was introduced with P3</strong></p>\n<p><strong>All strings in P3 are unicode and encoded.\nmd5 was removed.</strong></p>\n<p><strong>ConfigParser was renamed to configparser\nsets were killed in favor of set() class.</strong></p>\n<h2><strong>print was a statement in P2, but is a function in P3.</strong></h2>\n<h1>Topics revisited (in python syntax)</h1>\n<h1>Cheat Sheet:</h1>\n<h2>If you found this guide helpful feel free to checkout my github/gists where I host similar content:</h2>\n<p><a href=\"https://gist.github.com/bgoonz\">bgoonz’s gists · GitHub</a></p>\n<p>Or Checkout my personal Resource Site:</p>\n<h1>Python Cheat Sheet:</h1>\n<h1>If you found this guide helpful feel free to checkout my GitHub/gists where I host similar content:</h1>"},{"url":"/docs/gallery/","relativePath":"docs/gallery.md","relativeDir":"docs","base":"gallery.md","name":"gallery","frontmatter":{"title":"my gists","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"Gist Archive","description":"A collection of my github gists","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Gist Archive</h2>\n<h2>Gist Archive</h2>\n<iframe src=\"https://bgoonzgist.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>"},{"url":"/docs/","relativePath":"docs/index.md","relativeDir":"docs","base":"index.md","name":"index","frontmatter":{"title":"Docs","seo":{"title":"Web Dev Hub","description":"Application, Back-end, Bootstrap, Browser, Caching, Code, CSS, Content Management System (CMS) , Cookies, Domain Name ,Frameworks, Front-end, JavaScript, Python","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Web Dev Hub","keyName":"property"},{"name":"og:description","value":"Docs Home","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Web Dev Hub"},{"name":"twitter:description","value":"Docs Home"}]},"template":"docs","weight":900,"excerpt":"docs quick reference"},"html":"<h1>Go To Sitemap: <a href=\"./docs/sitemap/\">Go Now --></a></h1>\n<hr>\n<div id=\"search\"></div>\n<p>&#x3C;div id=\"search\"></div></p>\n<h1>Actual Docs:</h1>\n<br>\n<br>\n       <div id=\"search\" />\n<br>\n               <div id=\"search\" className=\"inner\"></div>\n<br>\n<h1>  Docs</h1>\n<br>\n<iframe class=\"inner\" src=\"https://docs42.netlify.app/#C:/MY-WEB-DEV/__NEW_GIT/DOCS/docs-collection\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<hr>\n<h2>Doc Websites &#x26; Repos</h2>\n<ul>\n<li><a href=\"https://github.com/bgoonz/PYTHON_PRAC\">Python Practice</a></li>\n<li><a href=\"https://lambda-resources.netlify.app/\">Lambda Bootcamp Website</a></li>\n<li><a href=\"https://github.com/bgoonz/React_Notes_V3\">React Notes</a></li>\n<li><a href=\"https://github.com/bgoonz/Project-Showcase\">Project Showcase</a></li>\n<li><a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\">Data Structures &#x26; Algorithms</a></li>\n<li><a href=\"https://github.com/bgoonz/Lambda-Resource-Static-Assets\">Lambda Site Static Content Server</a></li>\n<li><a href=\"https://github.com/bgoonz/mini-project-showcase\">Mini-Project Showcase</a></li>\n<li><a href=\"https://github.com/bgoonz/Useful-Snippets-js\">Useful Snippets</a></li>\n<li><a href=\"https://github.com/bgoonz/Markdown-Templates\">Markdown Templates</a></li>\n<li><a href=\"https://github.com/bgoonz/zumzi-chat-messenger\">Zumzi Video Conferencing App (mesibo api backend)</a></li>\n</ul>"},{"url":"/docs/search/","relativePath":"docs/search.md","relativeDir":"docs","base":"search.md","name":"search","frontmatter":{"title":"lorem-ipsum","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Search:</h2>\n<hr>\n<h1>Actual Docs:</h1>\n<br>\n<br>\n<br>\n<br>\n<h1>  Docs</h1>\n<br>\n<div id=\"search\"></div>\n<div id=\"search\" />"},{"url":"/docs/about/hobbies-n-interests/","relativePath":"docs/about/hobbies-n-interests.md","relativeDir":"docs/about","base":"hobbies-n-interests.md","name":"hobbies-n-interests","frontmatter":{"title":"My Hobbies & Interests","sections":[{"title":"My Hobbies & Interests","section_id":"links","subtitle":"lorem-ipsum","col_number":"three","type":"section_docs"},{"title":"lorem-ipsum","section_id":"lorem-ipsum","subtitle":"lorem-ipsum","col_number":"three","grid_items":[],"type":"section_grid"}],"seo":{"title":"","description":"","robots":[],"extra":[]},"template":"advanced"},"html":""},{"url":"/docs/about/eng-portfolio/","relativePath":"docs/about/eng-portfolio.md","relativeDir":"docs/about","base":"eng-portfolio.md","name":"eng-portfolio","frontmatter":{"title":"Engineering Portfolio","weight":2,"seo":{"title":"Engineering Portfolio","description":"This is an Engineering Portfolio page that contains a powerpoint portfolio of my work as an electrical engineer!","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Engineering Portfolio","keyName":"property"},{"name":"og:description","value":"This is the Engineering Portfolio page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Engineering Portfolio"},{"name":"twitter:description","value":"This is the Engineering Portfolio page"}]},"template":"docs"},"html":"<h1>Portfolio</h1>\n<iframe src=\"https://onedrive.live.com/embed?resid=D21009FDD967A241%21459307&amp;authkey=%21ABwIG4Hz-hsgPLU&amp;em=2&amp;wdAr=1.7777777777777777&amp;wdEaa=1\" width=\"800px\" height=\"691px\" frameborder=\"0\">This is an embedded <a target=\"_blank\" href=\"https://office.com\">Microsoft Office</a> presentation, powered by <a target=\"_blank\" href=\"https://office.com/webapps\">Office</a>.</iframe>"},{"url":"/docs/privacy-policy/","relativePath":"docs/privacy-policy.md","relativeDir":"docs","base":"privacy-policy.md","name":"privacy-policy","frontmatter":{"title":"lorem-ipsum","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<pre><code>PRIVACY NOTICE\n</code></pre>\n<ul>\n<li>Visit our website at <a href=\"https://bgoonz-blog.netlify.app/\">https://bgoonz-blog.netlify.app/</a></li>\n</ul>\n<!---->\n<ul>\n<li>Use our Facebook application — <a href=\"https://bgoonz-blog.netlify.app/\">https://bgoonz-blog.netlify.app/</a></li>\n</ul>\n<!---->\n<ul>\n<li>Engage with us in other related ways ― including any sales, marketing, or events</li>\n</ul>\n<!---->\n<ul>\n<li>\"<strong>Website</strong>,\" we are referring to any website of ours that references or links to this policy</li>\n</ul>\n<!---->\n<ul>\n<li>\"<strong>App</strong>,\" we are referring to any application of ours that references or links to this policy, including any listed above</li>\n</ul>\n<!---->\n<ul>\n<li>\"<strong>Services</strong>,\" we are referring to our Website, App, and other related services, including any sales, marketing, or events</li>\n</ul>\n<!---->\n<ul>\n<li><strong>To facilitate account creation and logon process.</strong> If you choose to link your account with us to a third-party account (such as your Google or Facebook account), we use the information you allowed us to collect from those third parties to facilitate account creation and logon process for the performance of the contract.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>To post testimonials.</strong> We post testimonials on our Services that may contain personal information. Prior to posting a testimonial, we will obtain your consent to use your name and the content of the testimonial. If you wish to update, or delete your testimonial, please contact us at __________ and be sure to include your name, testimonial location, and contact information.</li>\n</ul>\n<!---->\n<ul>\n<li>**Request feedback. **We may use your information to request feedback and to contact you about your use of our Services.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>To enable user-to-user communications.</strong> We may use your information in order to enable user-to-user communications with each user's consent.</li>\n</ul>\n<!---->\n<ul>\n<li>**To manage user accounts. **We may use your information for the purposes of managing our account and keeping it in working order.</li>\n</ul>\n<!---->\n<ul>\n<li>**To send administrative information to you. **We may use your personal information to send you product, service and new feature information and/or information about changes to our terms, conditions, and policies.</li>\n</ul>\n<!---->\n<ul>\n<li>**To protect our Services. **We may use your information as part of our efforts to keep our Services safe and secure (for example, for fraud monitoring and prevention).</li>\n</ul>\n<!---->\n<ul>\n<li><strong>To enforce our terms, conditions and policies for business purposes, to comply with legal and regulatory requirements or in connection with our contract.</strong></li>\n</ul>\n<!---->\n<ul>\n<li>**To respond to legal requests and prevent harm. **If we receive a subpoena or other legal request, we may need to inspect the data we hold to determine how to respond.</li>\n<li>**Fulfill and manage your orders. **We may use your information to fulfill and manage your orders, payments, returns, and exchanges made through the Services.</li>\n<li><strong>Administer prize draws and competitions.</strong> We may use your information to administer prize draws and competitions when you elect to participate in our competitions.</li>\n<li><strong>To deliver and facilitate delivery of services to the user.</strong> We may use your information to provide you with the requested service.</li>\n<li><strong>To respond to user inquiries/offer support to users.</strong> We may use your information to respond to your inquiries and solve any potential issues you might have with the use of our Services.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>To send you marketing and promotional communications.</strong> We and/or our third-party marketing partners may use the personal information you send to us for our marketing purposes, if this is in accordance with your marketing preferences. For example, when expressing an interest in obtaining information about us or our Services, subscribing to marketing or otherwise contacting us, we will collect personal information from you. You can opt-out of our marketing emails at any time (see the \"<a href=\"https://cdpn.io/bgoonz/fullpage/LYLJZrW#privacyrights\">WHAT ARE YOUR PRIVACY RIGHTS?</a>\" below).</li>\n</ul>\n<!---->\n<ul>\n<li><strong>Deliver targeted advertising to you.</strong> We may use your information to develop and display personalized content and advertising (and work with third parties who do so) tailored to your interests and/or location and to measure its effectiveness.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>Consent:</strong> We may process your data if you have given us specific consent to use your personal information for a specific purpose.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>Legitimate Interests:</strong> We may process your data when it is reasonably necessary to achieve our legitimate business interests.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>Performance of a Contract:</strong> Where we have entered into a contract with you, we may process your personal information to fulfill the terms of our contract.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>Legal Obligations:</strong> We may disclose your information where we are legally required to do so in order to comply with applicable law, governmental requests, a judicial proceeding, court order, or legal process, such as in response to a court order or a subpoena (including in response to public authorities to meet national security or law enforcement requirements).</li>\n</ul>\n<!---->\n<ul>\n<li><strong>Vital Interests:</strong> We may disclose your information where we believe it is necessary to investigate, prevent, or take action regarding potential violations of our policies, suspected fraud, situations involving potential threats to the safety of any person and illegal activities, or as evidence in litigation in which we are involved.</li>\n</ul>\n<!---->\n<ul>\n<li><strong>Business Transfers.</strong> We may share or transfer your information in connection with, or during negotiations of, any merger, sale of company assets, financing, or acquisition of all or a portion of our business to another company.</li>\n</ul>\n<!---->\n<ul>\n<li>Receiving help through our customer support channels;</li>\n</ul>\n<!---->\n<ul>\n<li>Participation in customer surveys or contests; and</li>\n</ul>\n<!---->\n<ul>\n<li>Facilitation in the delivery of our Services and to respond to your inquiries.</li>\n</ul>\n<!---->\n<ul>\n<li>whether we collect and use your personal information;</li>\n</ul>\n<!---->\n<ul>\n<li>the categories of personal information that we collect;</li>\n</ul>\n<!---->\n<ul>\n<li>the purposes for which the collected personal information is used;</li>\n</ul>\n<!---->\n<ul>\n<li>whether we sell your personal information to third parties;</li>\n</ul>\n<!---->\n<ul>\n<li>the categories of personal information that we sold or disclosed for a business purpose;</li>\n</ul>\n<!---->\n<ul>\n<li>the categories of third parties to whom the personal information was sold or disclosed for a business purpose; and</li>\n</ul>\n<!---->\n<ul>\n<li>the business or commercial purpose for collecting or selling personal information.</li>\n</ul>\n<!---->\n<ul>\n<li>you may object to the processing of your personal data</li>\n</ul>\n<!---->\n<ul>\n<li>you may request correction of your personal data if it is incorrect or no longer relevant, or ask to restrict the processing of the data</li>\n</ul>\n<!---->\n<ul>\n<li>you can designate an authorized agent to make a request under the CCPA on your behalf. We may deny a request from an authorized agent that does not submit proof that they have been validly authorized to act on your behalf in accordance with the CCPA.</li>\n</ul>\n<!---->\n<ul>\n<li>you may request to opt-out from future selling of your personal information to third parties. Upon receiving a request to opt-out, we will act upon the request as soon as feasibly possible, but no later than 15 days from the date of the request submission.</li>\n</ul>"},{"url":"/docs/about/intrests/","relativePath":"docs/about/intrests.md","relativeDir":"docs/about","base":"intrests.md","name":"intrests","frontmatter":{"title":"Youtube","weight":1,"excerpt":"youtube","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/xGZSWvFess8\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<iframe \n<iframe"},{"url":"/docs/sitemap/","relativePath":"docs/sitemap.md","relativeDir":"docs","base":"sitemap.md","name":"sitemap","frontmatter":{"title":"Navigation","weight":900,"excerpt":"Navigation quick reference","seo":{"title":"Web Dev Hub","description":"This website contains docs, blogs, a personal portfolio spread out across multiple pages as well as interactive animations and tools.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Web Dev Hub","keyName":"property"},{"name":"og:description","value":"Navigation Home","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Web Dev Hub"},{"name":"twitter:description","value":"Navigation Home"},{"name":"og:image","value":"images/background.gif","keyName":"property","relativeUrl":true}]},"template":"docs"},"html":"<h1><span style=\"align-self:center;margin:auto; font-family:Papyrus; font-size:2em;\">Sitemap:</span></h1>\n<hr>\n<div id=\"search\"></div>\n<h1>- <a href=\"https://bgoonz-blog.netlify.app/\"><strong>✅HOME🌍</strong></a></h1>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/\"><strong>✅blog/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/awesome-graphql/\"><strong>✅blog/awesome-graphql/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/big-o-complexity/\"><strong>✅blog/big-o-complexity/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/blog-archive/\"><strong>✅blog/blog-archive/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/blogwcomments/\"><strong>✅blog/blogwcomments/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/data-structures/\"><strong>✅blog/data-structures/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/git-gateway/\"><strong>✅blog/git-gateway/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/interview-questions-js/\"><strong>✅blog/interview-questions-js/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/my-medium/\"><strong>✅blog/my-medium/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/netlify-cms/\"><strong>✅blog/netlify-cms/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/platform-docs/\"><strong>✅blog/platform-docs/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/python-for-js-dev/\"><strong>✅blog/python-for-js-dev/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/python-resources/\"><strong>✅blog/python-resources/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/web-dev-trends/\"><strong>✅blog/web-dev-trends/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/blog/web-scraping/\"><strong>✅blog/web-scraping/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/\"><strong>✅⇒🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/about/\"><strong>✅⇒about/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/about/eng-portfolio/\"><strong>✅⇒about/eng-portfolio/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/about/intrests/\"><strong>✅⇒about/intrests/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/about/job-search/\"><strong>✅⇒about/job-search/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/about/resume/\"><strong>✅⇒about/resume/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/\"><strong>✅⇒articles/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/basic-web-dev/\"><strong>✅⇒articles/basic-web-dev/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/buffers/\"><strong>✅⇒articles/buffers/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/dev-dep/\"><strong>✅⇒articles/dev-dep/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/event-loop/\"><strong>✅⇒articles/event-loop/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/fs-module/\"><strong>✅⇒articles/fs-module/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/how-the-web-works/\"><strong>✅⇒articles/how-the-web-works/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/http/\"><strong>✅⇒articles/http/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/install/\"><strong>✅⇒articles/install/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/intro/\"><strong>✅⇒articles/intro/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/module-exports/\"><strong>✅⇒articles/module-exports/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-api-express/\"><strong>✅⇒articles/node-api-express/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-cli-args/\"><strong>✅⇒articles/node-cli-args/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-common-modules/\"><strong>✅⇒articles/node-common-modules/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-env-variables/\"><strong>✅⇒articles/node-env-variables/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-js-language/\"><strong>✅⇒articles/node-js-language/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-package-manager/\"><strong>✅⇒articles/node-package-manager/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-repl/\"><strong>✅⇒articles/node-repl/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-run-cli/\"><strong>✅⇒articles/node-run-cli/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/nodejs/\"><strong>✅⇒articles/nodejs/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/nodevsbrowser/\"><strong>✅⇒articles/nodevsbrowser/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/npm/\"><strong>✅⇒articles/npm/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/npx/\"><strong>✅⇒articles/npx/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/os-module/\"><strong>✅⇒articles/os-module/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/reading-files/\"><strong>✅⇒articles/reading-files/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/semantic-html/\"><strong>✅⇒articles/semantic-html/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/semantic/\"><strong>✅⇒articles/semantic/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/the-uniform-resource-locator-(url)/\"><strong>✅⇒articles/the-uniform-resource-locator-(url)/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/understanding-firebase/\"><strong>✅⇒articles/understanding-firebase/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/v8/\"><strong>✅⇒articles/v8/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/web-standards-checklist/\"><strong>✅⇒articles/web-standards-checklist/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/webdev-tools/\"><strong>✅⇒articles/webdev-tools/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/writing-files/\"><strong>✅⇒articles/writing-files/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/audio/\"><strong>✅⇒audio/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/audio/dfft/\"><strong>✅⇒audio/dfft/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/audio/discrete-fft/\"><strong>✅⇒audio/discrete-fft/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/audio/dtw-python-explained/\"><strong>✅⇒audio/dtw-python-explained/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/audio/dynamic-time-warping/\"><strong>✅⇒audio/dynamic-time-warping/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/community/\"><strong>✅⇒community/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/community/video-chat/\"><strong>✅⇒community/video-chat/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/\"><strong>✅⇒content/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/algo/\"><strong>✅⇒content/algo/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/archive/\"><strong>✅⇒content/archive/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/data-structures-algo/\"><strong>✅⇒content/data-structures-algo/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/gatsby-queries-mutations/\"><strong>✅⇒content/gatsby-queries-mutations/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/history-api/\"><strong>✅⇒content/history-api/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/js-async-n-callbacks/\"><strong>✅⇒content/js-async-n-callbacks/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/projects/\"><strong>✅⇒content/projects/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/recent-projects/\"><strong>✅⇒content/recent-projects/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/content/trouble-shooting/\"><strong>✅⇒content/trouble-shooting/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/\"><strong>✅⇒docs/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/appendix/\"><strong>✅⇒docs/appendix/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/await-keyword/\"><strong>✅⇒docs/await-keyword/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/bash/\"><strong>✅⇒docs/bash/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/content/\"><strong>✅⇒docs/content/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/css/\"><strong>✅⇒docs/css/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/data-structures-docs/\"><strong>✅⇒docs/data-structures-docs/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/git-repos/\"><strong>✅⇒docs/git-repos/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/no-whiteboarding/\"><strong>✅⇒docs/no-whiteboarding/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/regex-in-js/\"><strong>✅⇒docs/regex-in-js/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/docs/sitemap/\"><strong>✅⇒docs/sitemap/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/faq/\"><strong>✅⇒faq/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/faq/contact/\"><strong>✅⇒faq/contact/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/faq/plug-ins/\"><strong>✅⇒faq/plug-ins/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/gallery/\"><strong>✅⇒gallery/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/interact/\"><strong>✅⇒interact/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/interact/callstack-visual/\"><strong>✅⇒interact/callstack-visual/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/interact/clock/\"><strong>✅⇒interact/clock/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/interact/jupyter-notebooks/\"><strong>✅⇒interact/jupyter-notebooks/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/interact/other-sites/\"><strong>✅⇒interact/other-sites/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/interact/video-chat/\"><strong>✅⇒interact/video-chat/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/javascript/\"><strong>✅⇒javascript/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/javascript/bigo/\"><strong>✅⇒javascript/bigo/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/javascript/constructor-functions/\"><strong>✅⇒javascript/constructor-functions/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/medium/\"><strong>✅⇒medium/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/medium/medium-links/\"><strong>✅⇒medium/medium-links/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/medium/my-websites/\"><strong>✅⇒medium/my-websites/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/python/\"><strong>✅⇒python/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/python/at-length/\"><strong>✅⇒python/at-length/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/python/google-sheets-api/\"><strong>✅⇒python/google-sheets-api/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/python/python-ds/\"><strong>✅⇒python/python-ds/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/python/snippets/\"><strong>✅⇒python/snippets/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/\"><strong>✅⇒quick-reference/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/awesome-lists/\"><strong>✅⇒quick-reference/awesome-lists/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/awesome-static/\"><strong>✅⇒quick-reference/awesome-static/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/create-react-app/\"><strong>✅⇒quick-reference/create-react-app/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/emmet/\"><strong>✅⇒quick-reference/emmet/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/git-bash/\"><strong>✅⇒quick-reference/git-bash/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/github-search/\"><strong>✅⇒quick-reference/github-search/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/google-firebase/\"><strong>✅⇒quick-reference/google-firebase/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/heroku-error-codes/\"><strong>✅⇒quick-reference/heroku-error-codes/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/installation/\"><strong>✅⇒quick-reference/installation/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/minifiction/\"><strong>✅⇒quick-reference/minifiction/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/new-repo-instructions/\"><strong>✅⇒quick-reference/new-repo-instructions/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/notes-template/\"><strong>✅⇒quick-reference/notes-template/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/psql-setup/\"><strong>✅⇒quick-reference/psql-setup/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/psql/\"><strong>✅⇒quick-reference/psql/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/pull-request-rubric/\"><strong>✅⇒quick-reference/pull-request-rubric/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/quick-links/\"><strong>✅⇒quick-reference/quick-links/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/resources/\"><strong>✅⇒quick-reference/resources/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/toprepos/\"><strong>✅⇒quick-reference/toprepos/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/understanding-path/\"><strong>✅⇒quick-reference/understanding-path/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/vscode-themes/\"><strong>✅⇒quick-reference/vscode-themes/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/quick-reference/vscode/\"><strong>✅⇒quick-reference/vscode/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/react/\"><strong>✅⇒react/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/react/createreactapp/\"><strong>✅⇒react/createreactapp/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/react/react-docs/\"><strong>✅⇒react/react-docs/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/react/react-in-depth/\"><strong>✅⇒react/react-in-depth/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/react/react2/\"><strong>✅⇒react/react2/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/sitemap/\"><strong>✅⇒sitemap/🌍</strong></a></h3>\n<hr>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/tools/\"><strong>✅⇒tools/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/tools/cloudstorage/\"><strong>✅⇒tools/cloudstorage/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/tools/data-structures/\"><strong>✅⇒tools/data-structures/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/tools/dev-utilities/\"><strong>✅⇒tools/dev-utilities/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/tools/markdown-html/\"><strong>✅⇒tools/markdown-html/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/tools/more-tools/\"><strong>✅⇒tools/more-tools/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/review/\"><strong>✅review/🌍</strong></a></h3>\n<h3>[<strong>✅showcase/🌍</strong>]<a href=\"https://bgoonz-blog.netlify.app/showcase/\">https://bgoonz-blog.netlify.app/showcase/</a>)</h3>"},{"url":"/docs/about/resume/","relativePath":"docs/about/resume.md","relativeDir":"docs/about","base":"resume.md","name":"resume","frontmatter":{"title":"Resume","weight":1,"seo":{"title":"Resume","description":"Successfully completed and delivered a platform to digitize a guitar signal and perform filtering before executing frequency & time domain analysis to track a current performance against prerecorded performance.","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Resume","keyName":"property"},{"name":"og:description","value":"This is the Resume page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Resume"},{"name":"twitter:description","value":"This is the Resume page"}]},"template":"docs"},"html":"<h1>➤ Technical Skills­­­</h1>\n<table>\n<thead>\n<tr>\n<th><strong>Programming**</strong> Languages:**</th>\n<th>JavaScript ES-6, NodeJS, React, HTML5, CSS3, SCSS, Bash Shell, Excel, SQL, NoSQL, MATLAB, Python, C++</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Databases:</strong></td>\n<td>PostgreSQL, MongoDB</td>\n</tr>\n<tr>\n<td><strong>Cloud:</strong></td>\n<td>Docker, AWS, Google App Engine, Netlify, Digital Ocean, Heroku, Azure Cloud Services</td>\n</tr>\n<tr>\n<td><strong>OS:</strong></td>\n<td>Linux, Windows (WSL), IOS</td>\n</tr>\n<tr>\n<td><strong>Agile:</strong></td>\n<td>GitHub, BitBucket, Jira, Confluence</td>\n</tr>\n<tr>\n<td><strong>IDEs:</strong></td>\n<td>VSCode, Visual Studio, Atom, Code Blocks, Sublime Text 3, Brackets</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h1>➤ Experience</h1>\n<table>\n<thead>\n<tr>\n<th><strong>Relational Concepts:</strong> Hallandale Beach, FL</th>\n<th>March 2020 - Present</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Front End Web Developer</strong></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Responsible for front-end development for a custom real estate application which provides sophisticated and fully customizable filtering to allow investors and real estate professionals to narrow in on exact search targets.</li>\n<li>Designed mock-up screens, wireframes, and workflows for intuitive user experience.</li>\n<li>Migrated existing multi-page user experience into singular page interfaces using React components.</li>\n<li>Participated in every stage of the design from conception through development and iterative improvement.</li>\n<li>Produced user stories and internal documentation for future site development and maintenance.</li>\n<li>Implemented modern frameworks including Bootstrap and Font-Awesome to give the site an aesthetic overhaul.</li>\n<li>Managed all test deployments using a combination of Digital Ocean and Netlify.</li>\n<li>Produced unit tests using a combination of Mocha and Chai.</li>\n<li>Injected Google Analytics to capture pertinent usage data to produce an insightful dashboard experience.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>Environment:</strong></th>\n<th><strong>JavaScript, JQuery, React, HTML5 &#x26; CSS, Bootstrap, DOJO, Google Cloud, Bash Script</strong></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th><strong>Cembre:</strong> Edison, NJ</th>\n<th>Nov 2019 – Mar 2020</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Product Development Engineer</strong></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Converted client's product needs into technical specs to be sent to the development team in Italy.</li>\n<li>Reorganized internal file server structure.</li>\n<li>Conducted remote / in person system integration and product demonstrations.</li>\n<li>Presided over internal and end user software trainings in addition to producing the corresponding documentation.</li>\n<li>Served as the primary point of contact for troubleshooting railroad hardware and software in the North America.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>Environment:</strong></th>\n<th><strong>Excel, AutoCAD, PowerPoint, Word</strong></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<hr>\n<h1>➤ Education</h1>\n<table>\n<thead>\n<tr>\n<th>**B.S. Electrical Engineering, TCNJ, ** Ewing NJ</th>\n<th>2014 – 2019</th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<p><strong>Capstone Project – Team Lead</strong></p>\n<ul>\n<li>Successfully completed and delivered a platform to digitize a guitar signal and perform filtering before executing frequency &#x26; time domain analysis to track a current performance against prerecorded performance.</li>\n<li>Implemented the Dynamic Time Warping algorithm in C++ and Python to autonomously activate or adjust guitar effect at multiple pre-designated section of performance.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>Environment:</strong></th>\n<th><strong>C++, Python, MATLAB, PureData</strong></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>"},{"url":"/blog/web-scraping/","relativePath":"blog/web-scraping.md","relativeDir":"blog","base":"web-scraping.md","name":"web-scraping","frontmatter":{"title":"Webscraping w nodejs","date":"2021-07-26","image":"images/web-development.gif","seo":{"title":"webscraping","description":"There are a lot of use cases for web scraping","extra":[{"name":"og:type","value":"article","keyName":"property"},{"name":"og:title","value":"Platform Docs","keyName":"property"},{"name":"og:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit","keyName":"property"},{"name":"og:image","value":"images/curious-europa.gif","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Platform Docs"},{"name":"twitter:description","value":"Lorem ipsum dolor sit amet, consectetur adipiscing elit"},{"name":"twitter:image","value":"images/web-development.gif","relativeUrl":true}]},"template":"post","thumb_image":"images/blue-plankton.png"},"html":"<h1>Web Scraping with Node.js</h1>\n<blockquote>\n<p>So what’s web scraping anyway? It involves automating away the laborious task of collecting information from websites. There are a lot of use cases for web scraping: you might want to collect prices from various e-commerce sites for a price comparison site. Or perhaps you need flight times and</p>\n</blockquote>\n<p><img src=\"https://cdn-media-1.freecodecamp.org/images/1*KkVKtysvgh2hIVRI1Irk-Q.jpeg\" alt=\"The Ultimate Guide to Web Scraping with Node.js\"></p>\n<p>So what’s web scraping anyway? It involves automating away the laborious task of collecting information from websites.</p>\n<p>There are a lot of use cases for web scraping: you might want to collect prices from various e-commerce sites for a price comparison site. Or perhaps you need flight times and hotel/AirBNB listings for a travel site. Maybe you want to collect emails from various directories for sales leads, or use data from the internet to train machine learning/AI models. Or you could even be wanting to build a search engine like Google!</p>\n<p>Getting started with web scraping is easy, and the process can be broken down into two main parts:</p>\n<ul>\n<li>acquiring the data using an HTML request library or a headless browser,</li>\n<li>and parsing the data to get the exact information you want.</li>\n</ul>\n<p>This guide will walk you through the process with the popular Node.js <a href=\"https://github.com/request/request-promise\">request-promise</a> module, <a href=\"https://github.com/cheeriojs/cheerio\">CheerioJS</a>, and <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>. Working through the examples in this guide, you will learn all the tips and tricks you need to become a pro at gathering any data you need with Node.js!</p>\n<p>We will be gathering a list of all the names and birthdays of U.S. presidents from Wikipedia and the titles of all the posts on the front page of Reddit.</p>\n<p>First things first: Let’s install the libraries we’ll be using in this guide (Puppeteer will take a while to install as it needs to download Chromium as well).</p>\n<h3>Making your first request</h3>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-install-libraries-L1\" data-line-number=\"1\"></td><td id=\"file-install-libraries-LC1\">npm install --save request request-promise cheerio puppeteer</td></tr></tbody></table>\n<p>Next, let’s open a new text file (name the file potusScraper.js), and write a quick function to get the HTML of the Wikipedia “List of Presidents” page.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusscraper-js-v1-L1\" data-line-number=\"1\"></td><td id=\"file-potusscraper-js-v1-LC1\">const rp = require('request-promise');</td></tr><tr><td id=\"file-potusscraper-js-v1-L2\" data-line-number=\"2\"></td><td id=\"file-potusscraper-js-v1-LC2\">const url = 'https://en.wikipedia.org/wiki/List_of_Presidents_of_the_United_States';</td></tr><tr><td id=\"file-potusscraper-js-v1-L3\" data-line-number=\"3\"></td><td id=\"file-potusscraper-js-v1-LC3\"></td></tr><tr><td id=\"file-potusscraper-js-v1-L4\" data-line-number=\"4\"></td><td id=\"file-potusscraper-js-v1-LC4\">rp(url)</td></tr><tr><td id=\"file-potusscraper-js-v1-L5\" data-line-number=\"5\"></td><td id=\"file-potusscraper-js-v1-LC5\">.then(function(html){</td></tr><tr><td id=\"file-potusscraper-js-v1-L6\" data-line-number=\"6\"></td><td id=\"file-potusscraper-js-v1-LC6\">//success!</td></tr><tr><td id=\"file-potusscraper-js-v1-L7\" data-line-number=\"7\"></td><td id=\"file-potusscraper-js-v1-LC7\">console.log(html);</td></tr><tr><td id=\"file-potusscraper-js-v1-L8\" data-line-number=\"8\"></td><td id=\"file-potusscraper-js-v1-LC8\">})</td></tr><tr><td id=\"file-potusscraper-js-v1-L9\" data-line-number=\"9\"></td><td id=\"file-potusscraper-js-v1-LC9\">.catch(function(err){</td></tr><tr><td id=\"file-potusscraper-js-v1-L10\" data-line-number=\"10\"></td><td id=\"file-potusscraper-js-v1-LC10\">//handle error</td></tr><tr><td id=\"file-potusscraper-js-v1-L11\" data-line-number=\"11\"></td><td id=\"file-potusscraper-js-v1-LC11\">});</td></tr></tbody></table>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusscraper-js-v1-output-L1\" data-line-number=\"1\"></td><td id=\"file-potusscraper-js-v1-output-LC1\">&lt;!DOCTYPE html&gt;</td></tr><tr><td id=\"file-potusscraper-js-v1-output-L2\" data-line-number=\"2\"></td><td id=\"file-potusscraper-js-v1-output-LC2\">&lt;html class=\"client-nojs\" lang=\"en\" dir=\"ltr\"&gt;</td></tr><tr><td id=\"file-potusscraper-js-v1-output-L3\" data-line-number=\"3\"></td><td id=\"file-potusscraper-js-v1-output-LC3\">&lt;head&gt;</td></tr><tr><td id=\"file-potusscraper-js-v1-output-L4\" data-line-number=\"4\"></td><td id=\"file-potusscraper-js-v1-output-LC4\">&lt;meta charset=\"UTF-8\"/&gt;</td></tr><tr><td id=\"file-potusscraper-js-v1-output-L5\" data-line-number=\"5\"></td><td id=\"file-potusscraper-js-v1-output-LC5\">&lt;title&gt;List of Presidents of the United States - Wikipedia&lt;/title&gt;</td></tr><tr><td id=\"file-potusscraper-js-v1-output-L6\" data-line-number=\"6\"></td><td id=\"file-potusscraper-js-v1-output-LC6\">...</td></tr></tbody></table>\n<h3>Using Chrome DevTools</h3>\n<p>Cool, we got the raw HTML from the web page! But now we need to make sense of this giant blob of text. To do that, we’ll need to use Chrome DevTools to allow us to easily search through the HTML of a web page.</p>\n<p>Using Chrome DevTools is easy: simply open Google Chrome, and right click on the element you would like to scrape (in this case I am right clicking on George Washington, because we want to get links to all of the individual presidents’ Wikipedia pages):</p>\n<p><img src=\"https://cdn-media-1.freecodecamp.org/images/1*gLKhu_EO-cDqYna1P9WL_w.png\"></p>\n<p>Now, simply click inspect, and Chrome will bring up its DevTools pane, allowing you to easily inspect the page’s source HTML.</p>\n<p><img src=\"https://cdn-media-1.freecodecamp.org/images/1*HSUjFgji22vjwvGi2uZe1A.png\"></p>\n<h3>Parsing HTML with Cheerio.js</h3>\n<p>Awesome, Chrome DevTools is now showing us the exact pattern we should be looking for in the code (a “big” tag with a hyperlink inside of it). Let’s use Cheerio.js to parse the HTML we received earlier to return a list of links to the individual Wikipedia pages of U.S. presidents.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusscraper-js-v2-L1\" data-line-number=\"1\"></td><td id=\"file-potusscraper-js-v2-LC1\">const rp = require('request-promise');</td></tr><tr><td id=\"file-potusscraper-js-v2-L2\" data-line-number=\"2\"></td><td id=\"file-potusscraper-js-v2-LC2\">const $ = require('cheerio');</td></tr><tr><td id=\"file-potusscraper-js-v2-L3\" data-line-number=\"3\"></td><td id=\"file-potusscraper-js-v2-LC3\">const url = 'https://en.wikipedia.org/wiki/List_of_Presidents_of_the_United_States';</td></tr><tr><td id=\"file-potusscraper-js-v2-L4\" data-line-number=\"4\"></td><td id=\"file-potusscraper-js-v2-LC4\"></td></tr><tr><td id=\"file-potusscraper-js-v2-L5\" data-line-number=\"5\"></td><td id=\"file-potusscraper-js-v2-LC5\">rp(url)</td></tr><tr><td id=\"file-potusscraper-js-v2-L6\" data-line-number=\"6\"></td><td id=\"file-potusscraper-js-v2-LC6\">.then(function(html){</td></tr><tr><td id=\"file-potusscraper-js-v2-L7\" data-line-number=\"7\"></td><td id=\"file-potusscraper-js-v2-LC7\">//success!</td></tr><tr><td id=\"file-potusscraper-js-v2-L8\" data-line-number=\"8\"></td><td id=\"file-potusscraper-js-v2-LC8\">console.log($('big &gt; a', html).length);</td></tr><tr><td id=\"file-potusscraper-js-v2-L9\" data-line-number=\"9\"></td><td id=\"file-potusscraper-js-v2-LC9\">console.log($('big &gt; a', html));</td></tr><tr><td id=\"file-potusscraper-js-v2-L10\" data-line-number=\"10\"></td><td id=\"file-potusscraper-js-v2-LC10\">})</td></tr><tr><td id=\"file-potusscraper-js-v2-L11\" data-line-number=\"11\"></td><td id=\"file-potusscraper-js-v2-LC11\">.catch(function(err){</td></tr><tr><td id=\"file-potusscraper-js-v2-L12\" data-line-number=\"12\"></td><td id=\"file-potusscraper-js-v2-LC12\">//handle error</td></tr><tr><td id=\"file-potusscraper-js-v2-L13\" data-line-number=\"13\"></td><td id=\"file-potusscraper-js-v2-LC13\">});</td></tr></tbody></table>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusscraper-js-v2-output-L1\" data-line-number=\"1\"></td><td id=\"file-potusscraper-js-v2-output-LC1\">45</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L2\" data-line-number=\"2\"></td><td id=\"file-potusscraper-js-v2-output-LC2\">{ '0':</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L3\" data-line-number=\"3\"></td><td id=\"file-potusscraper-js-v2-output-LC3\">{ type: 'tag',</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L4\" data-line-number=\"4\"></td><td id=\"file-potusscraper-js-v2-output-LC4\">name: 'a',</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L5\" data-line-number=\"5\"></td><td id=\"file-potusscraper-js-v2-output-LC5\">attribs: { href: '/wiki/George_Washington', title: 'George Washington' },</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L6\" data-line-number=\"6\"></td><td id=\"file-potusscraper-js-v2-output-LC6\">children: [ [Object] ],</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L7\" data-line-number=\"7\"></td><td id=\"file-potusscraper-js-v2-output-LC7\">next: null,</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L8\" data-line-number=\"8\"></td><td id=\"file-potusscraper-js-v2-output-LC8\">prev: null,</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L9\" data-line-number=\"9\"></td><td id=\"file-potusscraper-js-v2-output-LC9\">parent:</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L10\" data-line-number=\"10\"></td><td id=\"file-potusscraper-js-v2-output-LC10\">{ type: 'tag',</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L11\" data-line-number=\"11\"></td><td id=\"file-potusscraper-js-v2-output-LC11\">name: 'big',</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L12\" data-line-number=\"12\"></td><td id=\"file-potusscraper-js-v2-output-LC12\">attribs: {},</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L13\" data-line-number=\"13\"></td><td id=\"file-potusscraper-js-v2-output-LC13\">children: [Array],</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L14\" data-line-number=\"14\"></td><td id=\"file-potusscraper-js-v2-output-LC14\">next: null,</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L15\" data-line-number=\"15\"></td><td id=\"file-potusscraper-js-v2-output-LC15\">prev: null,</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L16\" data-line-number=\"16\"></td><td id=\"file-potusscraper-js-v2-output-LC16\">parent: [Object] } },</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L17\" data-line-number=\"17\"></td><td id=\"file-potusscraper-js-v2-output-LC17\">'1':</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L18\" data-line-number=\"18\"></td><td id=\"file-potusscraper-js-v2-output-LC18\">{ type: 'tag'</td></tr><tr><td id=\"file-potusscraper-js-v2-output-L19\" data-line-number=\"19\"></td><td id=\"file-potusscraper-js-v2-output-LC19\">...</td></tr></tbody></table>\n<p>We check to make sure there are exactly 45 elements returned (the number of U.S. presidents), meaning there aren’t any extra hidden “big” tags elsewhere on the page. Now, we can go through and grab a list of links to all 45 presidential Wikipedia pages by getting them from the “attribs” section of each element.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusscraper-js-v3-L1\" data-line-number=\"1\"></td><td id=\"file-potusscraper-js-v3-LC1\">const rp = require('request-promise');</td></tr><tr><td id=\"file-potusscraper-js-v3-L2\" data-line-number=\"2\"></td><td id=\"file-potusscraper-js-v3-LC2\">const $ = require('cheerio');</td></tr><tr><td id=\"file-potusscraper-js-v3-L3\" data-line-number=\"3\"></td><td id=\"file-potusscraper-js-v3-LC3\">const url = 'https://en.wikipedia.org/wiki/List_of_Presidents_of_the_United_States';</td></tr><tr><td id=\"file-potusscraper-js-v3-L4\" data-line-number=\"4\"></td><td id=\"file-potusscraper-js-v3-LC4\"></td></tr><tr><td id=\"file-potusscraper-js-v3-L5\" data-line-number=\"5\"></td><td id=\"file-potusscraper-js-v3-LC5\">rp(url)</td></tr><tr><td id=\"file-potusscraper-js-v3-L6\" data-line-number=\"6\"></td><td id=\"file-potusscraper-js-v3-LC6\">.then(function(html){</td></tr><tr><td id=\"file-potusscraper-js-v3-L7\" data-line-number=\"7\"></td><td id=\"file-potusscraper-js-v3-LC7\">//success!</td></tr><tr><td id=\"file-potusscraper-js-v3-L8\" data-line-number=\"8\"></td><td id=\"file-potusscraper-js-v3-LC8\">const wikiUrls = [];</td></tr><tr><td id=\"file-potusscraper-js-v3-L9\" data-line-number=\"9\"></td><td id=\"file-potusscraper-js-v3-LC9\">for (let i = 0; i &lt; 45; i++) {</td></tr><tr><td id=\"file-potusscraper-js-v3-L10\" data-line-number=\"10\"></td><td id=\"file-potusscraper-js-v3-LC10\">wikiUrls.push($('big &gt; a', html)[i].attribs.href);</td></tr><tr><td id=\"file-potusscraper-js-v3-L11\" data-line-number=\"11\"></td><td id=\"file-potusscraper-js-v3-LC11\">}</td></tr><tr><td id=\"file-potusscraper-js-v3-L12\" data-line-number=\"12\"></td><td id=\"file-potusscraper-js-v3-LC12\">console.log(wikiUrls);</td></tr><tr><td id=\"file-potusscraper-js-v3-L13\" data-line-number=\"13\"></td><td id=\"file-potusscraper-js-v3-LC13\">})</td></tr><tr><td id=\"file-potusscraper-js-v3-L14\" data-line-number=\"14\"></td><td id=\"file-potusscraper-js-v3-LC14\">.catch(function(err){</td></tr><tr><td id=\"file-potusscraper-js-v3-L15\" data-line-number=\"15\"></td><td id=\"file-potusscraper-js-v3-LC15\">//handle error</td></tr><tr><td id=\"file-potusscraper-js-v3-L16\" data-line-number=\"16\"></td><td id=\"file-potusscraper-js-v3-LC16\">});</td></tr></tbody></table>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusscraper-js-v3-output-L1\" data-line-number=\"1\"></td><td id=\"file-potusscraper-js-v3-output-LC1\"></td></tr><tr><td id=\"file-potusscraper-js-v3-output-L2\" data-line-number=\"2\"></td><td id=\"file-potusscraper-js-v3-output-LC2\">[</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L3\" data-line-number=\"3\"></td><td id=\"file-potusscraper-js-v3-output-LC3\">'/wiki/George_Washington',</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L4\" data-line-number=\"4\"></td><td id=\"file-potusscraper-js-v3-output-LC4\">'/wiki/John_Adams',</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L5\" data-line-number=\"5\"></td><td id=\"file-potusscraper-js-v3-output-LC5\">'/wiki/Thomas_Jefferson',</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L6\" data-line-number=\"6\"></td><td id=\"file-potusscraper-js-v3-output-LC6\">'/wiki/James_Madison',</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L7\" data-line-number=\"7\"></td><td id=\"file-potusscraper-js-v3-output-LC7\">'/wiki/James_Monroe',</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L8\" data-line-number=\"8\"></td><td id=\"file-potusscraper-js-v3-output-LC8\">'/wiki/John_Quincy_Adams',</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L9\" data-line-number=\"9\"></td><td id=\"file-potusscraper-js-v3-output-LC9\">'/wiki/Andrew_Jackson',</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L10\" data-line-number=\"10\"></td><td id=\"file-potusscraper-js-v3-output-LC10\">...</td></tr><tr><td id=\"file-potusscraper-js-v3-output-L11\" data-line-number=\"11\"></td><td id=\"file-potusscraper-js-v3-output-LC11\">]</td></tr></tbody></table>\n<p>Now we have a list of all 45 presidential Wikipedia pages. Let’s create a new file (named potusParse.js), which will contain a function to take a presidential Wikipedia page and return the president’s name and birthday. First things first, let’s get the raw HTML from George Washington’s Wikipedia page.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusparse-js-v1-L1\" data-line-number=\"1\"></td><td id=\"file-potusparse-js-v1-LC1\">const rp = require('request-promise');</td></tr><tr><td id=\"file-potusparse-js-v1-L2\" data-line-number=\"2\"></td><td id=\"file-potusparse-js-v1-LC2\">const url = 'https://en.wikipedia.org/wiki/George_Washington';</td></tr><tr><td id=\"file-potusparse-js-v1-L3\" data-line-number=\"3\"></td><td id=\"file-potusparse-js-v1-LC3\"></td></tr><tr><td id=\"file-potusparse-js-v1-L4\" data-line-number=\"4\"></td><td id=\"file-potusparse-js-v1-LC4\">rp(url)</td></tr><tr><td id=\"file-potusparse-js-v1-L5\" data-line-number=\"5\"></td><td id=\"file-potusparse-js-v1-LC5\">.then(function(html) {</td></tr><tr><td id=\"file-potusparse-js-v1-L6\" data-line-number=\"6\"></td><td id=\"file-potusparse-js-v1-LC6\">console.log(html);</td></tr><tr><td id=\"file-potusparse-js-v1-L7\" data-line-number=\"7\"></td><td id=\"file-potusparse-js-v1-LC7\">})</td></tr><tr><td id=\"file-potusparse-js-v1-L8\" data-line-number=\"8\"></td><td id=\"file-potusparse-js-v1-LC8\">.catch(function(err) {</td></tr><tr><td id=\"file-potusparse-js-v1-L9\" data-line-number=\"9\"></td><td id=\"file-potusparse-js-v1-LC9\">//handle error</td></tr><tr><td id=\"file-potusparse-js-v1-L10\" data-line-number=\"10\"></td><td id=\"file-potusparse-js-v1-LC10\">});</td></tr></tbody></table>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusparse-js-v1-output-L1\" data-line-number=\"1\"></td><td id=\"file-potusparse-js-v1-output-LC1\">&lt;html class=\"client-nojs\" lang=\"en\" dir=\"ltr\"&gt;</td></tr><tr><td id=\"file-potusparse-js-v1-output-L2\" data-line-number=\"2\"></td><td id=\"file-potusparse-js-v1-output-LC2\">&lt;head&gt;</td></tr><tr><td id=\"file-potusparse-js-v1-output-L3\" data-line-number=\"3\"></td><td id=\"file-potusparse-js-v1-output-LC3\">&lt;meta charset=\"UTF-8\"/&gt;</td></tr><tr><td id=\"file-potusparse-js-v1-output-L4\" data-line-number=\"4\"></td><td id=\"file-potusparse-js-v1-output-LC4\">&lt;title&gt;George Washington - Wikipedia&lt;/title&gt;</td></tr><tr><td id=\"file-potusparse-js-v1-output-L5\" data-line-number=\"5\"></td><td id=\"file-potusparse-js-v1-output-LC5\">...</td></tr></tbody></table>\n<p>Let’s once again use Chrome DevTools to find the syntax of the code we want to parse, so that we can extract the name and birthday with Cheerio.js.</p>\n<p><img src=\"https://cdn-media-1.freecodecamp.org/images/1*exzZbuIwfrCcbTM2rr9_bw.png\"></p>\n<p><img src=\"https://cdn-media-1.freecodecamp.org/images/1*yth6AmHpywM77n0wEprpiA.png\"></p>\n<p>So we see that the name is in a class called “firstHeading” and the birthday is in a class called “bday”. Let’s modify our code to use Cheerio.js to extract these two classes.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusparse-js-v2-L1\" data-line-number=\"1\"></td><td id=\"file-potusparse-js-v2-LC1\">const rp = require('request-promise');</td></tr><tr><td id=\"file-potusparse-js-v2-L2\" data-line-number=\"2\"></td><td id=\"file-potusparse-js-v2-LC2\">const $ = require('cheerio');</td></tr><tr><td id=\"file-potusparse-js-v2-L3\" data-line-number=\"3\"></td><td id=\"file-potusparse-js-v2-LC3\">const url = 'https://en.wikipedia.org/wiki/George_Washington';</td></tr><tr><td id=\"file-potusparse-js-v2-L4\" data-line-number=\"4\"></td><td id=\"file-potusparse-js-v2-LC4\"></td></tr><tr><td id=\"file-potusparse-js-v2-L5\" data-line-number=\"5\"></td><td id=\"file-potusparse-js-v2-LC5\">rp(url)</td></tr><tr><td id=\"file-potusparse-js-v2-L6\" data-line-number=\"6\"></td><td id=\"file-potusparse-js-v2-LC6\">.then(function(html) {</td></tr><tr><td id=\"file-potusparse-js-v2-L7\" data-line-number=\"7\"></td><td id=\"file-potusparse-js-v2-LC7\">console.log($('.firstHeading', html).text());</td></tr><tr><td id=\"file-potusparse-js-v2-L8\" data-line-number=\"8\"></td><td id=\"file-potusparse-js-v2-LC8\">console.log($('.bday', html).text());</td></tr><tr><td id=\"file-potusparse-js-v2-L9\" data-line-number=\"9\"></td><td id=\"file-potusparse-js-v2-LC9\">})</td></tr><tr><td id=\"file-potusparse-js-v2-L10\" data-line-number=\"10\"></td><td id=\"file-potusparse-js-v2-LC10\">.catch(function(err) {</td></tr><tr><td id=\"file-potusparse-js-v2-L11\" data-line-number=\"11\"></td><td id=\"file-potusparse-js-v2-LC11\">//handle error</td></tr><tr><td id=\"file-potusparse-js-v2-L12\" data-line-number=\"12\"></td><td id=\"file-potusparse-js-v2-LC12\">});</td></tr></tbody></table>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusparse-js-v2-output-L1\" data-line-number=\"1\"></td><td id=\"file-potusparse-js-v2-output-LC1\">George Washington</td></tr><tr><td id=\"file-potusparse-js-v2-output-L2\" data-line-number=\"2\"></td><td id=\"file-potusparse-js-v2-output-LC2\">1732-02-22</td></tr></tbody></table>\n<h3>Putting it all together</h3>\n<p>Perfect! Now let’s wrap this up into a function and export it from this module.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusparse-js-v3-L1\" data-line-number=\"1\"></td><td id=\"file-potusparse-js-v3-LC1\">const rp = require('request-promise');</td></tr><tr><td id=\"file-potusparse-js-v3-L2\" data-line-number=\"2\"></td><td id=\"file-potusparse-js-v3-LC2\">const $ = require('cheerio');</td></tr><tr><td id=\"file-potusparse-js-v3-L3\" data-line-number=\"3\"></td><td id=\"file-potusparse-js-v3-LC3\"></td></tr><tr><td id=\"file-potusparse-js-v3-L4\" data-line-number=\"4\"></td><td id=\"file-potusparse-js-v3-LC4\">const potusParse = function(url) {</td></tr><tr><td id=\"file-potusparse-js-v3-L5\" data-line-number=\"5\"></td><td id=\"file-potusparse-js-v3-LC5\">return rp(url)</td></tr><tr><td id=\"file-potusparse-js-v3-L6\" data-line-number=\"6\"></td><td id=\"file-potusparse-js-v3-LC6\">.then(function(html) {</td></tr><tr><td id=\"file-potusparse-js-v3-L7\" data-line-number=\"7\"></td><td id=\"file-potusparse-js-v3-LC7\">return {</td></tr><tr><td id=\"file-potusparse-js-v3-L8\" data-line-number=\"8\"></td><td id=\"file-potusparse-js-v3-LC8\">name: $('.firstHeading', html).text(),</td></tr><tr><td id=\"file-potusparse-js-v3-L9\" data-line-number=\"9\"></td><td id=\"file-potusparse-js-v3-LC9\">birthday: $('.bday', html).text(),</td></tr><tr><td id=\"file-potusparse-js-v3-L10\" data-line-number=\"10\"></td><td id=\"file-potusparse-js-v3-LC10\">};</td></tr><tr><td id=\"file-potusparse-js-v3-L11\" data-line-number=\"11\"></td><td id=\"file-potusparse-js-v3-LC11\">})</td></tr><tr><td id=\"file-potusparse-js-v3-L12\" data-line-number=\"12\"></td><td id=\"file-potusparse-js-v3-LC12\">.catch(function(err) {</td></tr><tr><td id=\"file-potusparse-js-v3-L13\" data-line-number=\"13\"></td><td id=\"file-potusparse-js-v3-LC13\">//handle error</td></tr><tr><td id=\"file-potusparse-js-v3-L14\" data-line-number=\"14\"></td><td id=\"file-potusparse-js-v3-LC14\">});</td></tr><tr><td id=\"file-potusparse-js-v3-L15\" data-line-number=\"15\"></td><td id=\"file-potusparse-js-v3-LC15\">};</td></tr><tr><td id=\"file-potusparse-js-v3-L16\" data-line-number=\"16\"></td><td id=\"file-potusparse-js-v3-LC16\"></td></tr><tr><td id=\"file-potusparse-js-v3-L17\" data-line-number=\"17\"></td><td id=\"file-potusparse-js-v3-LC17\">module.exports = potusParse;</td></tr></tbody></table>\n<p>Now let’s return to our original file potusScraper.js and require the potusParse.js module. We’ll then apply it to the list of wikiUrls we gathered earlier.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusparse-js-v4-L1\" data-line-number=\"1\"></td><td id=\"file-potusparse-js-v4-LC1\"></td></tr><tr><td id=\"file-potusparse-js-v4-L2\" data-line-number=\"2\"></td><td id=\"file-potusparse-js-v4-LC2\">const rp = require('request-promise');</td></tr><tr><td id=\"file-potusparse-js-v4-L3\" data-line-number=\"3\"></td><td id=\"file-potusparse-js-v4-LC3\">const $ = require('cheerio');</td></tr><tr><td id=\"file-potusparse-js-v4-L4\" data-line-number=\"4\"></td><td id=\"file-potusparse-js-v4-LC4\">const potusParse = require('./potusParse');</td></tr><tr><td id=\"file-potusparse-js-v4-L5\" data-line-number=\"5\"></td><td id=\"file-potusparse-js-v4-LC5\">const url = 'https://en.wikipedia.org/wiki/List_of_Presidents_of_the_United_States';</td></tr><tr><td id=\"file-potusparse-js-v4-L6\" data-line-number=\"6\"></td><td id=\"file-potusparse-js-v4-LC6\"></td></tr><tr><td id=\"file-potusparse-js-v4-L7\" data-line-number=\"7\"></td><td id=\"file-potusparse-js-v4-LC7\">rp(url)</td></tr><tr><td id=\"file-potusparse-js-v4-L8\" data-line-number=\"8\"></td><td id=\"file-potusparse-js-v4-LC8\">.then(function(html) {</td></tr><tr><td id=\"file-potusparse-js-v4-L9\" data-line-number=\"9\"></td><td id=\"file-potusparse-js-v4-LC9\">//success!</td></tr><tr><td id=\"file-potusparse-js-v4-L10\" data-line-number=\"10\"></td><td id=\"file-potusparse-js-v4-LC10\">const wikiUrls = [];</td></tr><tr><td id=\"file-potusparse-js-v4-L11\" data-line-number=\"11\"></td><td id=\"file-potusparse-js-v4-LC11\">for (let i = 0; i &lt; 45; i++) {</td></tr><tr><td id=\"file-potusparse-js-v4-L12\" data-line-number=\"12\"></td><td id=\"file-potusparse-js-v4-LC12\">wikiUrls.push($('big &gt; a', html)[i].attribs.href);</td></tr><tr><td id=\"file-potusparse-js-v4-L13\" data-line-number=\"13\"></td><td id=\"file-potusparse-js-v4-LC13\">}</td></tr><tr><td id=\"file-potusparse-js-v4-L14\" data-line-number=\"14\"></td><td id=\"file-potusparse-js-v4-LC14\">return Promise.all(</td></tr><tr><td id=\"file-potusparse-js-v4-L15\" data-line-number=\"15\"></td><td id=\"file-potusparse-js-v4-LC15\">wikiUrls.map(function(url) {</td></tr><tr><td id=\"file-potusparse-js-v4-L16\" data-line-number=\"16\"></td><td id=\"file-potusparse-js-v4-LC16\">return potusParse('https://en.wikipedia.org' + url);</td></tr><tr><td id=\"file-potusparse-js-v4-L17\" data-line-number=\"17\"></td><td id=\"file-potusparse-js-v4-LC17\">})</td></tr><tr><td id=\"file-potusparse-js-v4-L18\" data-line-number=\"18\"></td><td id=\"file-potusparse-js-v4-LC18\">);</td></tr><tr><td id=\"file-potusparse-js-v4-L19\" data-line-number=\"19\"></td><td id=\"file-potusparse-js-v4-LC19\">})</td></tr><tr><td id=\"file-potusparse-js-v4-L20\" data-line-number=\"20\"></td><td id=\"file-potusparse-js-v4-LC20\">.then(function(presidents) {</td></tr><tr><td id=\"file-potusparse-js-v4-L21\" data-line-number=\"21\"></td><td id=\"file-potusparse-js-v4-LC21\">console.log(presidents);</td></tr><tr><td id=\"file-potusparse-js-v4-L22\" data-line-number=\"22\"></td><td id=\"file-potusparse-js-v4-LC22\">})</td></tr><tr><td id=\"file-potusparse-js-v4-L23\" data-line-number=\"23\"></td><td id=\"file-potusparse-js-v4-LC23\">.catch(function(err) {</td></tr><tr><td id=\"file-potusparse-js-v4-L24\" data-line-number=\"24\"></td><td id=\"file-potusparse-js-v4-LC24\">//handle error</td></tr><tr><td id=\"file-potusparse-js-v4-L25\" data-line-number=\"25\"></td><td id=\"file-potusparse-js-v4-LC25\">console.log(err);</td></tr><tr><td id=\"file-potusparse-js-v4-L26\" data-line-number=\"26\"></td><td id=\"file-potusparse-js-v4-LC26\">});</td></tr></tbody></table>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-potusparse-js-v4-output-L1\" data-line-number=\"1\"></td><td id=\"file-potusparse-js-v4-output-LC1\"></td></tr><tr><td id=\"file-potusparse-js-v4-output-L2\" data-line-number=\"2\"></td><td id=\"file-potusparse-js-v4-output-LC2\">[</td></tr><tr><td id=\"file-potusparse-js-v4-output-L3\" data-line-number=\"3\"></td><td id=\"file-potusparse-js-v4-output-LC3\">{ name: 'George Washington', birthday: '1732-02-22' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L4\" data-line-number=\"4\"></td><td id=\"file-potusparse-js-v4-output-LC4\">{ name: 'John Adams', birthday: '1735-10-30' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L5\" data-line-number=\"5\"></td><td id=\"file-potusparse-js-v4-output-LC5\">{ name: 'Thomas Jefferson', birthday: '1743-04-13' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L6\" data-line-number=\"6\"></td><td id=\"file-potusparse-js-v4-output-LC6\">{ name: 'James Madison', birthday: '1751-03-16' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L7\" data-line-number=\"7\"></td><td id=\"file-potusparse-js-v4-output-LC7\">{ name: 'James Monroe', birthday: '1758-04-28' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L8\" data-line-number=\"8\"></td><td id=\"file-potusparse-js-v4-output-LC8\">{ name: 'John Quincy Adams', birthday: '1767-07-11' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L9\" data-line-number=\"9\"></td><td id=\"file-potusparse-js-v4-output-LC9\">{ name: 'Andrew Jackson', birthday: '1767-03-15' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L10\" data-line-number=\"10\"></td><td id=\"file-potusparse-js-v4-output-LC10\">{ name: 'Martin Van Buren', birthday: '1782-12-05' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L11\" data-line-number=\"11\"></td><td id=\"file-potusparse-js-v4-output-LC11\">{ name: 'William Henry Harrison', birthday: '1773-02-09' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L12\" data-line-number=\"12\"></td><td id=\"file-potusparse-js-v4-output-LC12\">{ name: 'John Tyler', birthday: '1790-03-29' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L13\" data-line-number=\"13\"></td><td id=\"file-potusparse-js-v4-output-LC13\">{ name: 'James K. Polk', birthday: '1795-11-02' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L14\" data-line-number=\"14\"></td><td id=\"file-potusparse-js-v4-output-LC14\">{ name: 'Zachary Taylor', birthday: '1784-11-24' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L15\" data-line-number=\"15\"></td><td id=\"file-potusparse-js-v4-output-LC15\">{ name: 'Millard Fillmore', birthday: '1800-01-07' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L16\" data-line-number=\"16\"></td><td id=\"file-potusparse-js-v4-output-LC16\">{ name: 'Franklin Pierce', birthday: '1804-11-23' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L17\" data-line-number=\"17\"></td><td id=\"file-potusparse-js-v4-output-LC17\">{ name: 'James Buchanan', birthday: '1791-04-23' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L18\" data-line-number=\"18\"></td><td id=\"file-potusparse-js-v4-output-LC18\">{ name: 'Abraham Lincoln', birthday: '1809-02-12' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L19\" data-line-number=\"19\"></td><td id=\"file-potusparse-js-v4-output-LC19\">{ name: 'Andrew Johnson', birthday: '1808-12-29' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L20\" data-line-number=\"20\"></td><td id=\"file-potusparse-js-v4-output-LC20\">{ name: 'Ulysses S. Grant', birthday: '1822-04-27' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L21\" data-line-number=\"21\"></td><td id=\"file-potusparse-js-v4-output-LC21\">{ name: 'Rutherford B. Hayes', birthday: '1822-10-04' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L22\" data-line-number=\"22\"></td><td id=\"file-potusparse-js-v4-output-LC22\">{ name: 'James A. Garfield', birthday: '1831-11-19' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L23\" data-line-number=\"23\"></td><td id=\"file-potusparse-js-v4-output-LC23\">{ name: 'Chester A. Arthur', birthday: '1829-10-05' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L24\" data-line-number=\"24\"></td><td id=\"file-potusparse-js-v4-output-LC24\">{ name: 'Grover Cleveland', birthday: '1837-03-18' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L25\" data-line-number=\"25\"></td><td id=\"file-potusparse-js-v4-output-LC25\">{ name: 'Benjamin Harrison', birthday: '1833-08-20' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L26\" data-line-number=\"26\"></td><td id=\"file-potusparse-js-v4-output-LC26\">{ name: 'Grover Cleveland', birthday: '1837-03-18' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L27\" data-line-number=\"27\"></td><td id=\"file-potusparse-js-v4-output-LC27\">{ name: 'William McKinley', birthday: '1843-01-29' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L28\" data-line-number=\"28\"></td><td id=\"file-potusparse-js-v4-output-LC28\">{ name: 'Theodore Roosevelt', birthday: '1858-10-27' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L29\" data-line-number=\"29\"></td><td id=\"file-potusparse-js-v4-output-LC29\">{ name: 'William Howard Taft', birthday: '1857-09-15' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L30\" data-line-number=\"30\"></td><td id=\"file-potusparse-js-v4-output-LC30\">{ name: 'Woodrow Wilson', birthday: '1856-12-28' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L31\" data-line-number=\"31\"></td><td id=\"file-potusparse-js-v4-output-LC31\">{ name: 'Warren G. Harding', birthday: '1865-11-02' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L32\" data-line-number=\"32\"></td><td id=\"file-potusparse-js-v4-output-LC32\">{ name: 'Calvin Coolidge', birthday: '1872-07-04' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L33\" data-line-number=\"33\"></td><td id=\"file-potusparse-js-v4-output-LC33\">{ name: 'Herbert Hoover', birthday: '1874-08-10' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L34\" data-line-number=\"34\"></td><td id=\"file-potusparse-js-v4-output-LC34\">{ name: 'Franklin D. Roosevelt', birthday: '1882-01-30' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L35\" data-line-number=\"35\"></td><td id=\"file-potusparse-js-v4-output-LC35\">{ name: 'Harry S. Truman', birthday: '1884-05-08' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L36\" data-line-number=\"36\"></td><td id=\"file-potusparse-js-v4-output-LC36\">{ name: 'Dwight D. Eisenhower', birthday: '1890-10-14' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L37\" data-line-number=\"37\"></td><td id=\"file-potusparse-js-v4-output-LC37\">{ name: 'John F. Kennedy', birthday: '1917-05-29' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L38\" data-line-number=\"38\"></td><td id=\"file-potusparse-js-v4-output-LC38\">{ name: 'Lyndon B. Johnson', birthday: '1908-08-27' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L39\" data-line-number=\"39\"></td><td id=\"file-potusparse-js-v4-output-LC39\">{ name: 'Richard Nixon', birthday: '1913-01-09' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L40\" data-line-number=\"40\"></td><td id=\"file-potusparse-js-v4-output-LC40\">{ name: 'Gerald Ford', birthday: '1913-07-14' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L41\" data-line-number=\"41\"></td><td id=\"file-potusparse-js-v4-output-LC41\">{ name: 'Jimmy Carter', birthday: '1924-10-01' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L42\" data-line-number=\"42\"></td><td id=\"file-potusparse-js-v4-output-LC42\">{ name: 'Ronald Reagan', birthday: '1911-02-06' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L43\" data-line-number=\"43\"></td><td id=\"file-potusparse-js-v4-output-LC43\">{ name: 'George H. W. Bush', birthday: '1924-06-12' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L44\" data-line-number=\"44\"></td><td id=\"file-potusparse-js-v4-output-LC44\">{ name: 'Bill Clinton', birthday: '1946-08-19' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L45\" data-line-number=\"45\"></td><td id=\"file-potusparse-js-v4-output-LC45\">{ name: 'George W. Bush', birthday: '1946-07-06' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L46\" data-line-number=\"46\"></td><td id=\"file-potusparse-js-v4-output-LC46\">{ name: 'Barack Obama', birthday: '1961-08-04' },</td></tr><tr><td id=\"file-potusparse-js-v4-output-L47\" data-line-number=\"47\"></td><td id=\"file-potusparse-js-v4-output-LC47\">{ name: 'Donald Trump', birthday: '1946-06-14' }</td></tr><tr><td id=\"file-potusparse-js-v4-output-L48\" data-line-number=\"48\"></td><td id=\"file-potusparse-js-v4-output-LC48\">]</td></tr></tbody></table>\n<h3>Rendering JavaScript Pages</h3>\n<p>Voilà! A list of the names and birthdays of all 45 U.S. presidents. Using just the request-promise module and Cheerio.js should allow you to scrape the vast majority of sites on the internet.</p>\n<p>Recently, however, many sites have begun using JavaScript to generate dynamic content on their websites. This causes a problem for request-promise and other similar HTTP request libraries (such as axios and fetch), because they only get the response from the initial request, but they cannot execute the JavaScript the way a web browser can.</p>\n<p>Thus, to scrape sites that require JavaScript execution, we need another solution. In our next example, we will get the titles for all of the posts on the front page of Reddit. Let’s see what happens when we try to use request-promise as we did in the previous example.</p>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-reddit-js-v1-L1\" data-line-number=\"1\"></td><td id=\"file-reddit-js-v1-LC1\">const rp = require('request-promise');</td></tr><tr><td id=\"file-reddit-js-v1-L2\" data-line-number=\"2\"></td><td id=\"file-reddit-js-v1-LC2\">const url = 'https://www.reddit.com';</td></tr><tr><td id=\"file-reddit-js-v1-L3\" data-line-number=\"3\"></td><td id=\"file-reddit-js-v1-LC3\"></td></tr><tr><td id=\"file-reddit-js-v1-L4\" data-line-number=\"4\"></td><td id=\"file-reddit-js-v1-LC4\">rp(url)</td></tr><tr><td id=\"file-reddit-js-v1-L5\" data-line-number=\"5\"></td><td id=\"file-reddit-js-v1-LC5\">.then(function(html){</td></tr><tr><td id=\"file-reddit-js-v1-L6\" data-line-number=\"6\"></td><td id=\"file-reddit-js-v1-LC6\">//success!</td></tr><tr><td id=\"file-reddit-js-v1-L7\" data-line-number=\"7\"></td><td id=\"file-reddit-js-v1-LC7\">console.log(html);</td></tr><tr><td id=\"file-reddit-js-v1-L8\" data-line-number=\"8\"></td><td id=\"file-reddit-js-v1-LC8\">})</td></tr><tr><td id=\"file-reddit-js-v1-L9\" data-line-number=\"9\"></td><td id=\"file-reddit-js-v1-LC9\">.catch(function(err){</td></tr><tr><td id=\"file-reddit-js-v1-L10\" data-line-number=\"10\"></td><td id=\"file-reddit-js-v1-LC10\">//handle error</td></tr><tr><td id=\"file-reddit-js-v1-L11\" data-line-number=\"11\"></td><td id=\"file-reddit-js-v1-LC11\">});</td></tr><tr><td id=\"file-reddit-js-v1-L12\" data-line-number=\"12\"></td><td id=\"file-reddit-js-v1-LC12\">}</td></tr></tbody></table>\n<p>Here’s what the output looks like:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-reddit-js-v1-output-L1\" data-line-number=\"1\"></td><td id=\"file-reddit-js-v1-output-LC1\">&lt;!DOCTYPE html&gt;&lt;html</td></tr><tr><td id=\"file-reddit-js-v1-output-L2\" data-line-number=\"2\"></td><td id=\"file-reddit-js-v1-output-LC2\">lang=\"en\"&gt;&lt;head&gt;&lt;title&gt;reddit: the front page of the</td></tr><tr><td id=\"file-reddit-js-v1-output-L3\" data-line-number=\"3\"></td><td id=\"file-reddit-js-v1-output-LC3\">internet&lt;/title&gt;</td></tr><tr><td id=\"file-reddit-js-v1-output-L4\" data-line-number=\"4\"></td><td id=\"file-reddit-js-v1-output-LC4\">...</td></tr></tbody></table>\n<p><img src=\"https://cdn-media-1.freecodecamp.org/images/1*mKzPVGRR4CFKMwQw5y_YnQ.png\"></p>\n<p>Hmmm…not quite what we want. That’s because getting the actual content requires you to run the JavaScript on the page! With Puppeteer, that’s no problem.</p>\n<p>Puppeteer is an extremely popular new module brought to you by the Google Chrome team that allows you to control a headless browser. This is perfect for programmatically scraping pages that require JavaScript execution. Let’s get the HTML from the front page of Reddit using Puppeteer instead of request-promise.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-reddit-js-v2-L1\" data-line-number=\"1\"></td><td id=\"file-reddit-js-v2-LC1\">const puppeteer = require('puppeteer');</td></tr><tr><td id=\"file-reddit-js-v2-L2\" data-line-number=\"2\"></td><td id=\"file-reddit-js-v2-LC2\">const url = 'https://www.reddit.com';</td></tr><tr><td id=\"file-reddit-js-v2-L3\" data-line-number=\"3\"></td><td id=\"file-reddit-js-v2-LC3\"></td></tr><tr><td id=\"file-reddit-js-v2-L4\" data-line-number=\"4\"></td><td id=\"file-reddit-js-v2-LC4\">puppeteer</td></tr><tr><td id=\"file-reddit-js-v2-L5\" data-line-number=\"5\"></td><td id=\"file-reddit-js-v2-LC5\">.launch()</td></tr><tr><td id=\"file-reddit-js-v2-L6\" data-line-number=\"6\"></td><td id=\"file-reddit-js-v2-LC6\">.then(function(browser) {</td></tr><tr><td id=\"file-reddit-js-v2-L7\" data-line-number=\"7\"></td><td id=\"file-reddit-js-v2-LC7\">return browser.newPage();</td></tr><tr><td id=\"file-reddit-js-v2-L8\" data-line-number=\"8\"></td><td id=\"file-reddit-js-v2-LC8\">})</td></tr><tr><td id=\"file-reddit-js-v2-L9\" data-line-number=\"9\"></td><td id=\"file-reddit-js-v2-LC9\">.then(function(page) {</td></tr><tr><td id=\"file-reddit-js-v2-L10\" data-line-number=\"10\"></td><td id=\"file-reddit-js-v2-LC10\">return page.goto(url).then(function() {</td></tr><tr><td id=\"file-reddit-js-v2-L11\" data-line-number=\"11\"></td><td id=\"file-reddit-js-v2-LC11\">return page.content();</td></tr><tr><td id=\"file-reddit-js-v2-L12\" data-line-number=\"12\"></td><td id=\"file-reddit-js-v2-LC12\">});</td></tr><tr><td id=\"file-reddit-js-v2-L13\" data-line-number=\"13\"></td><td id=\"file-reddit-js-v2-LC13\">})</td></tr><tr><td id=\"file-reddit-js-v2-L14\" data-line-number=\"14\"></td><td id=\"file-reddit-js-v2-LC14\">.then(function(html) {</td></tr><tr><td id=\"file-reddit-js-v2-L15\" data-line-number=\"15\"></td><td id=\"file-reddit-js-v2-LC15\">console.log(html);</td></tr><tr><td id=\"file-reddit-js-v2-L16\" data-line-number=\"16\"></td><td id=\"file-reddit-js-v2-LC16\">})</td></tr><tr><td id=\"file-reddit-js-v2-L17\" data-line-number=\"17\"></td><td id=\"file-reddit-js-v2-LC17\">.catch(function(err) {</td></tr><tr><td id=\"file-reddit-js-v2-L18\" data-line-number=\"18\"></td><td id=\"file-reddit-js-v2-LC18\">//handle error</td></tr><tr><td id=\"file-reddit-js-v2-L19\" data-line-number=\"19\"></td><td id=\"file-reddit-js-v2-LC19\">});</td></tr></tbody></table>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-reddit-js-v2-output-L1\" data-line-number=\"1\"></td><td id=\"file-reddit-js-v2-output-LC1\">&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;link</td></tr><tr><td id=\"file-reddit-js-v2-output-L2\" data-line-number=\"2\"></td><td id=\"file-reddit-js-v2-output-LC2\">href=\"//c.amazon-adsystem.com/aax2/apstag.js\" rel=\"preload\"</td></tr><tr><td id=\"file-reddit-js-v2-output-L3\" data-line-number=\"3\"></td><td id=\"file-reddit-js-v2-output-LC3\">as=\"script\"&gt;</td></tr><tr><td id=\"file-reddit-js-v2-output-L4\" data-line-number=\"4\"></td><td id=\"file-reddit-js-v2-output-LC4\">...</td></tr></tbody></table>\n<p>Nice! The page is filled with the correct content!</p>\n<p><img src=\"https://cdn-media-1.freecodecamp.org/images/1*N5HtAiijcMEB_fBQvPd7Ow.png\"></p>\n<p>Now we can use Chrome DevTools like we did in the previous example.</p>\n<p><img src=\"https://cdn-media-1.freecodecamp.org/images/1*tHSgjPMvn3M26N2f7Q2B1Q.png\"></p>\n<p>It looks like Reddit is putting the titles inside “h2” tags. Let’s use Cheerio.js to extract the h2 tags from the page.</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-reddit-js-v3-L1\" data-line-number=\"1\"></td><td id=\"file-reddit-js-v3-LC1\">const puppeteer = require('puppeteer');</td></tr><tr><td id=\"file-reddit-js-v3-L2\" data-line-number=\"2\"></td><td id=\"file-reddit-js-v3-LC2\">const $ = require('cheerio');</td></tr><tr><td id=\"file-reddit-js-v3-L3\" data-line-number=\"3\"></td><td id=\"file-reddit-js-v3-LC3\">const url = 'https://www.reddit.com';</td></tr><tr><td id=\"file-reddit-js-v3-L4\" data-line-number=\"4\"></td><td id=\"file-reddit-js-v3-LC4\"></td></tr><tr><td id=\"file-reddit-js-v3-L5\" data-line-number=\"5\"></td><td id=\"file-reddit-js-v3-LC5\">puppeteer</td></tr><tr><td id=\"file-reddit-js-v3-L6\" data-line-number=\"6\"></td><td id=\"file-reddit-js-v3-LC6\">.launch()</td></tr><tr><td id=\"file-reddit-js-v3-L7\" data-line-number=\"7\"></td><td id=\"file-reddit-js-v3-LC7\">.then(function(browser) {</td></tr><tr><td id=\"file-reddit-js-v3-L8\" data-line-number=\"8\"></td><td id=\"file-reddit-js-v3-LC8\">return browser.newPage();</td></tr><tr><td id=\"file-reddit-js-v3-L9\" data-line-number=\"9\"></td><td id=\"file-reddit-js-v3-LC9\">})</td></tr><tr><td id=\"file-reddit-js-v3-L10\" data-line-number=\"10\"></td><td id=\"file-reddit-js-v3-LC10\">.then(function(page) {</td></tr><tr><td id=\"file-reddit-js-v3-L11\" data-line-number=\"11\"></td><td id=\"file-reddit-js-v3-LC11\">return page.goto(url).then(function() {</td></tr><tr><td id=\"file-reddit-js-v3-L12\" data-line-number=\"12\"></td><td id=\"file-reddit-js-v3-LC12\">return page.content();</td></tr><tr><td id=\"file-reddit-js-v3-L13\" data-line-number=\"13\"></td><td id=\"file-reddit-js-v3-LC13\">});</td></tr><tr><td id=\"file-reddit-js-v3-L14\" data-line-number=\"14\"></td><td id=\"file-reddit-js-v3-LC14\">})</td></tr><tr><td id=\"file-reddit-js-v3-L15\" data-line-number=\"15\"></td><td id=\"file-reddit-js-v3-LC15\">.then(function(html) {</td></tr><tr><td id=\"file-reddit-js-v3-L16\" data-line-number=\"16\"></td><td id=\"file-reddit-js-v3-LC16\">$('h2', html).each(function() {</td></tr><tr><td id=\"file-reddit-js-v3-L17\" data-line-number=\"17\"></td><td id=\"file-reddit-js-v3-LC17\">console.log($(this).text());</td></tr><tr><td id=\"file-reddit-js-v3-L18\" data-line-number=\"18\"></td><td id=\"file-reddit-js-v3-LC18\">});</td></tr><tr><td id=\"file-reddit-js-v3-L19\" data-line-number=\"19\"></td><td id=\"file-reddit-js-v3-LC19\">})</td></tr><tr><td id=\"file-reddit-js-v3-L20\" data-line-number=\"20\"></td><td id=\"file-reddit-js-v3-LC20\">.catch(function(err) {</td></tr><tr><td id=\"file-reddit-js-v3-L21\" data-line-number=\"21\"></td><td id=\"file-reddit-js-v3-LC21\">//handle error</td></tr><tr><td id=\"file-reddit-js-v3-L22\" data-line-number=\"22\"></td><td id=\"file-reddit-js-v3-LC22\">});</td></tr></tbody></table>\n<p>Output:</p>\n<table data-tab-size=\"8\" data-paste-markdown-skip=\"\"><tbody><tr><td id=\"file-reddit-js-v3-output-L1\" data-line-number=\"1\"></td><td id=\"file-reddit-js-v3-output-LC1\">Russian Pipeline. Upvote so that this is the first image people see when they Google “Russian Pipeline”</td></tr><tr><td id=\"file-reddit-js-v3-output-L2\" data-line-number=\"2\"></td><td id=\"file-reddit-js-v3-output-LC2\">John F. Kennedy Jr. Sitting in the pilot seat of the Marine One circa 1963</td></tr><tr><td id=\"file-reddit-js-v3-output-L3\" data-line-number=\"3\"></td><td id=\"file-reddit-js-v3-output-LC3\">I didn't take it as a compliment.</td></tr><tr><td id=\"file-reddit-js-v3-output-L4\" data-line-number=\"4\"></td><td id=\"file-reddit-js-v3-output-LC4\">How beautiful is this</td></tr><tr><td id=\"file-reddit-js-v3-output-L5\" data-line-number=\"5\"></td><td id=\"file-reddit-js-v3-output-LC5\">Hustle like Faye</td></tr><tr><td id=\"file-reddit-js-v3-output-L6\" data-line-number=\"6\"></td><td id=\"file-reddit-js-v3-output-LC6\">The power of a salt water crocodile's tail.</td></tr><tr><td id=\"file-reddit-js-v3-output-L7\" data-line-number=\"7\"></td><td id=\"file-reddit-js-v3-output-LC7\">I'm 36, and will be dead inside of a year.</td></tr><tr><td id=\"file-reddit-js-v3-output-L8\" data-line-number=\"8\"></td><td id=\"file-reddit-js-v3-output-LC8\">F***ing genius.</td></tr><tr><td id=\"file-reddit-js-v3-output-L9\" data-line-number=\"9\"></td><td id=\"file-reddit-js-v3-output-LC9\">TIL Anthony Daniels, who endured years of discomfort in the C-3PO costume, was so annoyed by Alan Tudyk (Rogue One) playing K-2SO in the comfort of a motion-capture suit that he cursed at Tudyk. Tudyk later joked that a \"fuck you\" from Daniels was among the highest compliments he had ever received.</td></tr><tr><td id=\"file-reddit-js-v3-output-L10\" data-line-number=\"10\"></td><td id=\"file-reddit-js-v3-output-LC10\">Reminder about the fact UC Davis paid over $100k to remove this photo from the internet.</td></tr><tr><td id=\"file-reddit-js-v3-output-L11\" data-line-number=\"11\"></td><td id=\"file-reddit-js-v3-output-LC11\">King of the Hill reruns will start airing on Comedy Central July 24th</td></tr><tr><td id=\"file-reddit-js-v3-output-L12\" data-line-number=\"12\"></td><td id=\"file-reddit-js-v3-output-LC12\">[Image] Slow and steady</td></tr><tr><td id=\"file-reddit-js-v3-output-L13\" data-line-number=\"13\"></td><td id=\"file-reddit-js-v3-output-LC13\">White House: Trump open to Russia questioning US citizens</td></tr><tr><td id=\"file-reddit-js-v3-output-L14\" data-line-number=\"14\"></td><td id=\"file-reddit-js-v3-output-LC14\">Godzilla: King of the Monsters Teaser Banner</td></tr><tr><td id=\"file-reddit-js-v3-output-L15\" data-line-number=\"15\"></td><td id=\"file-reddit-js-v3-output-LC15\">He tried</td></tr><tr><td id=\"file-reddit-js-v3-output-L16\" data-line-number=\"16\"></td><td id=\"file-reddit-js-v3-output-LC16\">Soldier reunited with his dog after being away.</td></tr><tr><td id=\"file-reddit-js-v3-output-L17\" data-line-number=\"17\"></td><td id=\"file-reddit-js-v3-output-LC17\">Hiring a hitman on yourself and preparing for battle is the ultimate extreme sport.</td></tr><tr><td id=\"file-reddit-js-v3-output-L18\" data-line-number=\"18\"></td><td id=\"file-reddit-js-v3-output-LC18\">Two paintballs colliding midair</td></tr><tr><td id=\"file-reddit-js-v3-output-L19\" data-line-number=\"19\"></td><td id=\"file-reddit-js-v3-output-LC19\">My thoughts &amp; prayers are with those ears</td></tr><tr><td id=\"file-reddit-js-v3-output-L20\" data-line-number=\"20\"></td><td id=\"file-reddit-js-v3-output-LC20\">When even your fantasy starts dropping hints</td></tr><tr><td id=\"file-reddit-js-v3-output-L21\" data-line-number=\"21\"></td><td id=\"file-reddit-js-v3-output-LC21\">Elon Musk's apology is out</td></tr><tr><td id=\"file-reddit-js-v3-output-L22\" data-line-number=\"22\"></td><td id=\"file-reddit-js-v3-output-LC22\">\"When you're going private so you plant trees to throw some last shade at TDNW before you vanish.\" Thanos' farm advances. The soul children will have full bellies. 1024 points will give him the resources to double, and irrigate, his farm. (See comment)</td></tr><tr><td id=\"file-reddit-js-v3-output-L23\" data-line-number=\"23\"></td><td id=\"file-reddit-js-v3-output-LC23\">Some leaders prefer chess, others prefer hungry hippos. Travis Chapman, oil, 2018</td></tr><tr><td id=\"file-reddit-js-v3-output-L24\" data-line-number=\"24\"></td><td id=\"file-reddit-js-v3-output-LC24\">The S.S. Ste. Claire, retired from ferrying amusement park goers, now ferries The Damned across the river Styx.</td></tr><tr><td id=\"file-reddit-js-v3-output-L25\" data-line-number=\"25\"></td><td id=\"file-reddit-js-v3-output-LC25\">A soldier is reunited with his dog</td></tr><tr><td id=\"file-reddit-js-v3-output-L26\" data-line-number=\"26\"></td><td id=\"file-reddit-js-v3-output-LC26\">*hits blunt*</td></tr><tr><td id=\"file-reddit-js-v3-output-L27\" data-line-number=\"27\"></td><td id=\"file-reddit-js-v3-output-LC27\">Today I Learned</td></tr><tr><td id=\"file-reddit-js-v3-output-L28\" data-line-number=\"28\"></td><td id=\"file-reddit-js-v3-output-LC28\">Black Panther Scene Representing the Pan-African Flag</td></tr><tr><td id=\"file-reddit-js-v3-output-L29\" data-line-number=\"29\"></td><td id=\"file-reddit-js-v3-output-LC29\">The precision of this hydraulic press.</td></tr><tr><td id=\"file-reddit-js-v3-output-L30\" data-line-number=\"30\"></td><td id=\"file-reddit-js-v3-output-LC30\">Let bring the game to another level</td></tr><tr><td id=\"file-reddit-js-v3-output-L31\" data-line-number=\"31\"></td><td id=\"file-reddit-js-v3-output-LC31\">When you're fighting a Dark Souls boss and you gamble to get 'just one extra hit' in instead of rolling out of range.</td></tr><tr><td id=\"file-reddit-js-v3-output-L32\" data-line-number=\"32\"></td><td id=\"file-reddit-js-v3-output-LC32\">\"I check for traps\"</td></tr><tr><td id=\"file-reddit-js-v3-output-L33\" data-line-number=\"33\"></td><td id=\"file-reddit-js-v3-output-LC33\">Anon finds his home at last</td></tr><tr><td id=\"file-reddit-js-v3-output-L34\" data-line-number=\"34\"></td><td id=\"file-reddit-js-v3-output-LC34\">He’s hungry</td></tr><tr><td id=\"file-reddit-js-v3-output-L35\" data-line-number=\"35\"></td><td id=\"file-reddit-js-v3-output-LC35\">Being a single mother is a thankless job.</td></tr><tr><td id=\"file-reddit-js-v3-output-L36\" data-line-number=\"36\"></td><td id=\"file-reddit-js-v3-output-LC36\">TIL That when you're pulling out Minigun, you're actually pulling out suitcase that then transforms into Minigun.</td></tr><tr><td id=\"file-reddit-js-v3-output-L37\" data-line-number=\"37\"></td><td id=\"file-reddit-js-v3-output-LC37\">OMG guys don’t look!!! 🙈🙈🙈</td></tr><tr><td id=\"file-reddit-js-v3-output-L38\" data-line-number=\"38\"></td><td id=\"file-reddit-js-v3-output-LC38\">hyubsama's emote of his own face denied for political reasons because twitch thinks its a picture of Kim Jong Un</td></tr></tbody></table>\n<h3>Additional Resources</h3>\n<p>And there’s the list! At this point you should feel comfortable writing your first web scraper to gather data from any website. Here are a few additional resources that you may find helpful during your web scraping journey:</p>\n<ul>\n<li><a href=\"https://www.scraperapi.com/blog/the-10-best-rotating-proxy-services-for-web-scraping\">List of web scraping proxy services</a></li>\n<li><a href=\"https://www.scraperapi.com/blog/the-10-best-web-scraping-tools\">List of handy web scraping tools</a></li>\n<li><a href=\"https://www.scraperapi.com/blog/5-tips-for-web-scraping\">List of web scraping tips</a></li>\n<li><a href=\"https://www.scraperapi.com/blog/free-shared-dedicated-datacenter-residential-rotating-proxies-for-web-scraping\">Comparison of web scraping proxies</a></li>\n<li><a href=\"https://github.com/cheeriojs/cheerio\">Cheerio Documentation</a></li>\n<li><a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer Documentation</a></li>\n</ul>\n<hr>"},{"url":"/docs/articles/buffers/","relativePath":"docs/articles/buffers.md","relativeDir":"docs/articles","base":"buffers.md","name":"buffers","frontmatter":{"title":"Node Buffers","sections":[],"seo":{"title":"","description":"A buffer is an area of memory. JavaScript developers are not familiar with this concept, much less than C, C++ or Go developers","robots":[],"extra":[{"name":"og:description","value":"A buffer is an area of memory. JavaScript developers are not familiar with this concept, much less than C, C++ or Go developers","keyName":"property","relativeUrl":false},{"name":"og:title","value":"Buffer","keyName":"property","relativeUrl":false},{"name":"og:image","value":"images/javascript-4ced5a19.gif","keyName":"property","relativeUrl":true}],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>What is a buffer?</h2>\n<p>A buffer is an area of memory. JavaScript developers are not familiar with this concept, much less than C, C++ or Go developers (or any programmer that uses a system programming language), which interact with memory every day.</p>\n<p>It represents a fixed-size chunk of memory (can't be resized) allocated outside of the V8 JavaScript engine.</p>\n<p>You can think of a buffer like an array of integers, which each represent a byte of data.</p>\n<p>It is implemented by the Node.js <a href=\"https://nodejs.org/api/buffer.html\">Buffer class</a>.</p>\n<h2>Why do we need a buffer?</h2>\n<p>Buffers were introduced to help developers deal with binary data, in an ecosystem that traditionally only dealt with strings rather than binaries.</p>\n<p>Buffers are deeply linked with streams. When a stream processor receives data faster than it can digest, it puts the data in a buffer.</p>\n<p>A simple visualization of a buffer is when you are watching a YouTube video and the red line goes beyond your visualization point: you are downloading data faster than you're viewing it, and your browser buffers it.</p>\n<h2>How to create a buffer</h2>\n<p>A buffer is created using the <a href=\"https://nodejs.org/api/buffer.html#buffer_buffer_from_buffer_alloc_and_buffer_allocunsafe\"><code>Buffer.from()</code></a>, <a href=\"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_alloc_size_fill_encoding\"><code>Buffer.alloc()</code></a>, and <a href=\"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafe_size\"><code>Buffer.allocUnsafe()</code></a> methods.</p>\n<pre><code class=\"language-js\">const buf = Buffer.from('Hey!');\n</code></pre>\n<ul>\n<li><a href=\"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_array\"><code>Buffer.from(array)</code></a></li>\n<li><a href=\"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\"><code>Buffer.from(arrayBuffer[, byteOffset[, length]])</code></a></li>\n<li><a href=\"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_buffer\"><code>Buffer.from(buffer)</code></a></li>\n<li><a href=\"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_string_encoding\"><code>Buffer.from(string[, encoding])</code></a></li>\n</ul>\n<p>You can also just initialize the buffer passing the size. This creates a 1KB buffer:</p>\n<pre><code class=\"language-js\">const buf = Buffer.alloc(1024);\n//or\nconst buf = Buffer.allocUnsafe(1024);\n</code></pre>\n<p>While both <code>alloc</code> and <code>allocUnsafe</code> allocate a <code>Buffer</code> of the specified size in bytes, the <code>Buffer</code> created by <code>alloc</code> will be <em>initialized</em> with zeroes and the one created by <code>allocUnsafe</code> will be <em>uninitialized</em>. This means that while <code>allocUnsafe</code> would be quite fast in comparison to <code>alloc</code>, the allocated segment of memory may contain old data which could potentially be sensitive.</p>\n<p>Older data, if present in the memory, can be accessed or leaked when the <code>Buffer</code> memory is read. This is what really makes <code>allocUnsafe</code> unsafe and extra care must be taken while using it.</p>\n<h2>Using a buffer</h2>\n<h3>Access the content of a buffer</h3>\n<p>A buffer, being an array of bytes, can be accessed like an array:</p>\n<pre><code class=\"language-js\">const buf = Buffer.from('Hey!');\nconsole.log(buf[0]); //72\nconsole.log(buf[1]); //101\nconsole.log(buf[2]); //121\n</code></pre>\n<p>Those numbers are the Unicode Code that identifies the character in the buffer position (H => 72, e => 101, y => 121)</p>\n<p>You can print the full content of the buffer using the <code>toString()</code> method:</p>\n<pre><code class=\"language-js\">console.log(buf.toString());\n</code></pre>\n<blockquote>\n<p>Notice that if you initialize a buffer with a number that sets its size, you'll get access to pre-initialized memory that will contain random data, not an empty buffer!</p>\n</blockquote>\n<h3>Get the length of a buffer</h3>\n<p>Use the <code>length</code> property:</p>\n<pre><code class=\"language-js\">const buf = Buffer.from('Hey!');\nconsole.log(buf.length);\n</code></pre>\n<h3>Iterate over the contents of a buffer</h3>\n<pre><code class=\"language-js\">const buf = Buffer.from('Hey!');\nfor (const item of buf) {\n    console.log(item); //72 101 121 33\n}\n</code></pre>\n<h3>Changing the content of a buffer</h3>\n<p>You can write to a buffer a whole string of data by using the <code>write()</code> method:</p>\n<pre><code class=\"language-js\">const buf = Buffer.alloc(4);\nbuf.write('Hey!');\n</code></pre>\n<p>Just like you can access a buffer with an array syntax, you can also set the contents of the buffer in the same way:</p>\n<pre><code class=\"language-js\">const buf = Buffer.from('Hey!');\nbuf[1] = 111; //o\nconsole.log(buf.toString()); //Hoy!\n</code></pre>\n<h3>Copy a buffer</h3>\n<p>Copying a buffer is possible using the <code>copy()</code> method:</p>\n<pre><code class=\"language-js\">const buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(4); //allocate 4 bytes\nbuf.copy(bufcopy);\n</code></pre>\n<p>By default you copy the whole buffer. 3 more parameters let you define the starting position, the ending position, and the new buffer length:</p>\n<pre><code class=\"language-js\">const buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(2); //allocate 2 bytes\nbuf.copy(bufcopy, 0, 0, 2);\nbufcopy.toString(); //'He'\n</code></pre>\n<h3>Slice a buffer</h3>\n<p>If you want to create a partial visualization of a buffer, you can create a slice. A slice is not a copy: the original buffer is still the source of truth. If that changes, your slice changes.</p>\n<p>Use the <code>slice()</code> method to create it. The first parameter is the starting position, and you can specify an optional second parameter with the end position:</p>\n<pre><code class=\"language-js\">const buf = Buffer.from('Hey!');\nbuf.slice(0).toString(); //Hey!\nconst slice = buf.slice(0, 2);\nconsole.log(slice.toString()); //He\nbuf[1] = 111; //o\nconsole.log(slice.toString()); //Ho\n</code></pre>"},{"url":"/docs/articles/dev-dep/","relativePath":"docs/articles/dev-dep.md","relativeDir":"docs/articles","base":"dev-dep.md","name":"dev-dep","frontmatter":{"title":"Dev Dependencies","sections":[],"seo":{"title":"Dependencies","description":"install an npm package using npm install you are installing it as a dependency. (npm install --production) to avoid installing those development dependencies.\n\n","robots":[],"extra":[{"name":"og:image","value":"images/react2.jpg","keyName":"property","relativeUrl":true},{"name":"og:description","value":"install an npm package using npm install you are installing it as a dependency. (npm install --production) to avoid installing those development dependencies.\n\n","keyName":"property","relativeUrl":false},{"name":"og:type","value":"website","keyName":"property","relativeUrl":false},{"name":"twitter:image","value":"images/browserify-25532eef.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image","keyName":"name","relativeUrl":false},{"name":"og:title","value":"Dev Dependencies","keyName":"property","relativeUrl":false}],"type":"stackbit_page_meta"},"template":"docs"},"html":"<p>When you install an npm package using <code>npm install &#x3C;package-name></code>, you are installing it as a <strong>dependency</strong>.</p>\n<p>The package is automatically listed in the package.json file, under the <code>dependencies</code> list (as of npm 5: before you had to manually specify <code>--save</code>).</p>\n<p>When you add the <code>-D</code> flag, or <code>--save-dev</code>, you are installing it as a development dependency, which adds it to the <code>devDependencies</code> list.</p>\n<p>Development dependencies are intended as development-only packages, that are unneeded in production. For example testing packages, webpack or Babel.</p>\n<p>When you go in production, if you type <code>npm install</code> and the folder contains a <code>package.json</code> file, they are installed, as npm assumes this is a development deploy.</p>\n<p>You need to set the <code>--production</code> flag (<code>npm install --production</code>) to avoid installing those development dependencies.</p>"},{"url":"/docs/about/","relativePath":"docs/about/index.md","relativeDir":"docs/about","base":"index.md","name":"index","frontmatter":{"title":"About","excerpt":"Web-Dev-Hub is my personal blogand documentation site","seo":{"title":"About","description":"Bryan Guner personal blog about page","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"About","keyName":"property"},{"name":"og:description","value":"This is the About page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"About"},{"name":"twitter:description","value":"This is the About page"}]},"template":"docs"},"html":"<div align=\"center\">\n<h1>Hi 👋, I'm Bryan</h1>\n  \n<img align=\"center\"  src=\"https://github.com/bgoonz/bgoonz/blob/master/circle-small-sharp.png?raw=true?raw=true\" ></img>\n<blockquote>\n<p>Netlify Research Program Participant!</p>\n</blockquote>\n<h4><a href=\"https://master--bgoonz-blog.netlify.app/\">WEBSITE</a> ⇄ <a href=\"https://bg-portfolio.netlify.app/\">Portfolio</a> ⇄ <a href=\"https://webdevhub.jetbrains.space/oauth/auth/invite/419dd305ba717a392a02aa5b4e41e09c\">Collaborate</a> ⇄ <a href=\"https://unruffled-curran-b8a076.netlify.app/my-websites.html\">Other-Websites</a></h4>\n<p><img src=\"https://views.whatilearened.today/views/github/bgoonz/views.svg\" alt=\"Profile views\"><a href=\"https://gitter.im/bgoonz/community?utm_source=badge&#x26;utm_medium=badge&#x26;utm_campaign=pr-badge\"><img src=\"https://badges.gitter.im/bgoonz/community.svg\" alt=\"Gitter\"></a><a href=\"https://hackmd.io/5DeYj2oXTvGJ1-Xvp1Jo2Q\"><img src=\"https://hackmd.io/5DeYj2oXTvGJ1-Xvp1Jo2Q/badge\" alt=\"hackmd-github-sync-badge\"></a><a href=\"https://github.com/bgoonz?tab=followers\"><img src=\"https://img.shields.io/github/followers/bgoonz.svg?style=social&#x26;label=Follow&#x26;maxAge=2592000\" alt=\"GitHub followers\"></a></p>\n<h3>➤ <em>Email</em> <a href=\"#\">bryan.guner@gmail.com</a> <em>Phone</em> <a href=\"551-254-5505\">551-254-5505</a></h3>\n<h4 align=\"center\">A passionate Web Developer, Electrical Engineer, Musician & Producer</h4>\n<img align=\"center\" src=\"https://readme-jokes.vercel.app/api\" stye=\"width:570; height:420;\">\n<p><a href=\"https://bg-portfolio.netlify.app/\"><img src=\"https://img.shields.io/badge/-%E2%9D%A4_Portfolio-f58?style=flat-square&#x26;logo=a&#x26;logoColor=white&#x26;link=https://bg-portfolio.netlify.app/\" alt=\"Portfolio\"></a>\n<a href=\"https://github.com/bgoonz/resume-cv-portfolio-samples/blob/master/2021-resume/bryan-guner-resume-2021.pdf\" download><img src=\"https://img.shields.io/badge/-Resume-f00?style=flat-square&#x26;logo=adobe-acrobat-reader&#x26;logoColor=white\" alt=\"Resume PDF\"></a>\n<a href=\"mailto:bryan.guner@gmail.com\"><img src=\"https://img.shields.io/badge/bryan.guner@gmail.com-f4b400?style=flat-square&#x26;logo=gmail&#x26;logoColor=black&#x26;link=mailto:bryan.guner@gmail.com\" alt=\"Bryan&#x27;s email\"></a>\n<a href=\"https://web-dev-hub.com/\"><img src=\"https://img.shields.io/badge/-Blog-21759b?style=flat-square&#x26;logo=WordPress&#x26;logoColor=white&#x26;link=https://web-dev-hub.com/\" alt=\"Blog\"></a>\n<a href=\"https://www.linkedin.com/in/bryan-guner-046199128/\"><img src=\"https://img.shields.io/badge/-LinkedIn-0077b5?style=flat-square&#x26;logo=Linkedin&#x26;logoColor=white&#x26;link=https://www.linkedin.com/in/bryan-guner-046199128/\" alt=\"Linkedin\"></a>\n<a href=\"https://angel.co/u/bryan-guner\"><img src=\"https://img.shields.io/badge/-AngelList-black?style=flat-square&#x26;logo=AngelList&#x26;logoColor=white&#x26;link=https://angel.co/u/bryan-guner\" alt=\"AngelList\"></a>\n<a href=\"https://github.com/bgoonz\"><img src=\"https://img.shields.io/github/followers/bgoonz?label=follow&#x26;style=social\" alt=\"GitHub bgoonz\"></a></p>\n<p align=\"center\">\n  <a href=\"mailto:bryan.guner@gmail.com\"><img src=\"https://img.icons8.com/color/96/000000/gmail.png\" alt=\"email\"/></a><a href=\"https://www.facebook.com/bryan.guner/\"><img src=\"https://img.icons8.com/color/96/000000/facebook.png\" alt=\"facebook\"/></a><a href=\"https://twitter.com/bgooonz\"><img src=\"https://img.icons8.com/color/96/000000/twitter-squared.png\" alt=\"twitter\"/></a><a href=\"https://www.youtube.com/channel/UC9-rYyUMsnEBK8G8fCyrXXA/videos\"><img src=\"https://img.icons8.com/color/96/000000/youtube.png\" alt=\"youtube\"/></a><a href=\"https://www.instagram.com/bgoonz/?hl=en\"><img src=\"https://img.icons8.com/color/96/000000/instagram-new.png\" alt=\"instagram\"/></a><a href=\"https://www.linkedin.com/in/bryan-guner-046199128/\"><img src=\"https://img.icons8.com/color/96/000000/linkedin.png\" alt=\"linkedin\"/></a>\n  <a href=\"https://bryanguner.medium.com/\"><img src=\"https://img.icons8.com/color/96/000000/medium-logo.png\" alt=\"medium\"/></a><a href=\"https://open.spotify.com/user/bgoonz?si=ShH9wYbIQWab5Jz_30BKFw\"><img src=\"https://img.icons8.com/color/96/000000/spotify--v1.png\" alt=\"spotify\"/></a>\n  </p>\n  \n  \n  \n[![Bryans github activity graph](https://activity-graph.herokuapp.com/graph?username=bgoonz&custom_title=This%20is%20Bryans%20Activity&hide_border=true&theme=chartreuse-dark)](https://github.com/bgoonz/github-readme-activity-graph)\n<div align=\"center\">\n<h3 align=\"center\">Languages and Tools:</h3>\n<p align=\"left\"> <a href=\"https://www.arduino.cc/\" target=\"_blank\"> <img src=\"https://cdn.worldvectorlogo.com/logos/arduino-1.svg\" alt=\"arduino\" width=\"40\" height=\"40\"/> </a> <a href=\"https://aws.amazon.com\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/amazonwebservices/amazonwebservices-original-wordmark.svg\" alt=\"aws\" width=\"40\" height=\"40\"/> </a> <a href=\"https://azure.microsoft.com/en-in/\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/microsoft_azure/microsoft_azure-icon.svg\" alt=\"azure\" width=\"40\" height=\"40\"/> </a> <a href=\"https://babeljs.io/\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/babeljs/babeljs-icon.svg\" alt=\"babel\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.gnu.org/software/bash/\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/gnu_bash/gnu_bash-icon.svg\" alt=\"bash\" width=\"40\" height=\"40\"/> </a> <a href=\"https://getbootstrap.com\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/bootstrap/bootstrap-plain-wordmark.svg\" alt=\"bootstrap\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.w3schools.com/cpp/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/cplusplus/cplusplus-original.svg\" alt=\"cplusplus\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.w3schools.com/css/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/css3/css3-original-wordmark.svg\" alt=\"css3\" width=\"40\" height=\"40\"/> </a> <a href=\"https://d3js.org/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/d3js/d3js-original.svg\" alt=\"d3js\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.docker.com/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/docker/docker-original-wordmark.svg\" alt=\"docker\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.elastic.co\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/elastic/elastic-icon.svg\" alt=\"elasticsearch\" width=\"40\" height=\"40\"/> </a> <a href=\"https://emberjs.com/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/ember/ember-original-wordmark.svg\" alt=\"ember\" width=\"40\" height=\"40\"/> </a> <a href=\"https://expressjs.com\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/express/express-original-wordmark.svg\" alt=\"express\" width=\"40\" height=\"40\"/> </a> <a href=\"https://firebase.google.com/\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/firebase/firebase-icon.svg\" alt=\"firebase\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.gatsbyjs.com/\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/gatsbyjs/gatsbyjs-icon.svg\" alt=\"gatsby\" width=\"40\" height=\"40\"/> </a> <a href=\"https://cloud.google.com\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/google_cloud/google_cloud-icon.svg\" alt=\"gcp\" width=\"40\" height=\"40\"/> </a> <a href=\"https://git-scm.com/\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/git-scm/git-scm-icon.svg\" alt=\"git\" width=\"40\" height=\"40\"/> </a> <a href=\"https://heroku.com\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/heroku/heroku-icon.svg\" alt=\"heroku\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.w3.org/html/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/html5/html5-original-wordmark.svg\" alt=\"html5\" width=\"40\" height=\"40\"/> </a> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/javascript/javascript-original.svg\" alt=\"javascript\" width=\"40\" height=\"40\"/> </a> <a href=\"https://jekyllrb.com/\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/jekyllrb/jekyllrb-icon.svg\" alt=\"jekyll\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.linux.org/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/linux/linux-original.svg\" alt=\"linux\" width=\"40\" height=\"40\"/> </a> <a href=\"https://mochajs.org\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/mochajs/mochajs-icon.svg\" alt=\"mocha\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.mongodb.com/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/mongodb/mongodb-original-wordmark.svg\" alt=\"mongodb\" width=\"40\" height=\"40\"/> </a> <a href=\"https://nextjs.org/\" target=\"_blank\"> <img src=\"https://cdn.worldvectorlogo.com/logos/nextjs-3.svg\" alt=\"nextjs\" width=\"40\" height=\"40\"/> </a> <a href=\"https://nodejs.org\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/nodejs/nodejs-original-wordmark.svg\" alt=\"nodejs\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.photoshop.com/en\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/photoshop/photoshop-line.svg\" alt=\"photoshop\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.postgresql.org\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/postgresql/postgresql-original-wordmark.svg\" alt=\"postgresql\" width=\"40\" height=\"40\"/> </a> <a href=\"https://postman.com\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/getpostman/getpostman-icon.svg\" alt=\"postman\" width=\"40\" height=\"40\"/> </a> <a href=\"https://pugjs.org\" target=\"_blank\"> <img src=\"https://cdn.worldvectorlogo.com/logos/pug.svg\" alt=\"pug\" width=\"40\" height=\"40\"/> </a> <a href=\"https://github.com/puppeteer/puppeteer\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/pptrdev/pptrdev-official.svg\" alt=\"puppeteer\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.python.org\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/python/python-original.svg\" alt=\"python\" width=\"40\" height=\"40\"/> </a> <a href=\"https://reactjs.org/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/react/react-original-wordmark.svg\" alt=\"react\" width=\"40\" height=\"40\"/> </a> <a href=\"https://reactnative.dev/\" target=\"_blank\"> <img src=\"https://reactnative.dev/img/header_logo.svg\" alt=\"reactnative\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.typescriptlang.org/\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/master/icons/typescript/typescript-original.svg\" alt=\"typescript\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.vagrantup.com/\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/vagrantup/vagrantup-icon.svg\" alt=\"vagrant\" width=\"40\" height=\"40\"/> </a> <a href=\"https://webpack.js.org\" target=\"_blank\"> <img src=\"https://raw.githubusercontent.com/devicons/devicon/d00d0969292a6569d45b06d3f350f463a0107b0d/icons/webpack/webpack-original-wordmark.svg\" alt=\"webpack\" width=\"40\" height=\"40\"/> </a> <a href=\"https://www.adobe.com/products/xd.html\" target=\"_blank\"> <img src=\"https://cdn.worldvectorlogo.com/logos/adobe-xd.svg\" alt=\"xd\" width=\"40\" height=\"40\"/> </a> <a href=\"https://zapier.com\" target=\"_blank\"> <img src=\"https://www.vectorlogo.zone/logos/zapier/zapier-icon.svg\" alt=\"zapier\" width=\"40\" height=\"40\"/> </a> </p>  \n  \n  </div>\n<div align=\"center\">\n  \n<p><img align=\"center\" src=\"https://github-readme-streak-stats.herokuapp.com/?user=bgoonz&\" alt=\"bgoonz\" /><img align=\"center\" src=\"https://github-readme-stats.vercel.app/api?username=bgoonz&show_icons=true&locale=en\" alt=\"bgoonz\" /></p>\n<p><a href=\"https://github.com/bgoonz/Lambda\"><img src=\"https://github-readme-stats.vercel.app/api/pin/?username=bgoonz&#x26;repo=Lambda\" alt=\"ReadMe Card\"></a>\n<a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\"><img src=\"https://github-readme-stats.vercel.app/api/pin/?username=bgoonz&#x26;repo=DS-ALGO-OFFICIAL\" alt=\"ReadMe Card\"></a></p>\n<p><a href=\"https://github.com/bgoonz/github-profile-trophy\"><img src=\"https://github-profile-trophy.vercel.app/?username=bgoonz&#x26;row=1\" alt=\"trophy\"></a></p>\n<p><a href=\"https://github.com/bgoonz/BGOONZ_BLOG_2.0\"><img src=\"https://github-readme-stats.vercel.app/api/pin/?username=bgoonz&#x26;repo=BGOONZ_BLOG_2.0\" alt=\"ReadMe Card\"></a></p>\n<p><a href=\"https://github.com/bgoonz/github-readme-stats\"><img src=\"https://github-readme-stats.vercel.app/api/top-langs/?username=bgoonz&#x26;layout=compact&#x26;hide=html,mathematica&#x26;langs_count=16\" alt=\"Top Langs\"></a></p>\n</div>\n</div>\n<center>\n<details>\n<summary>About Me</summary>\n<ul>\n<li>🔭 Contract Web Development <strong>Relational Concepts</strong></li>\n<li>🌱 I'm currently learning <strong>React/Redux, Python, Java, Express, jQuery</strong></li>\n<li>👯 I'm looking to collaborate on <a href=\"https://goofy-euclid-1cd736.netlify.app/core-site/index.html\">Any web audio or open source educational tools.</a></li>\n<li>🤝 I'm looking for help with <a href=\"https://github.com/bgoonz/React-Practice\">Learning React</a></li>\n<li>👨‍💻 All of my projects are available at <a href=\"https://bgoonz.github.io/\">https://bgoonz.github.io/</a></li>\n<li>📝 I regularly write articles on <a href=\"https://bryanguner.medium.com/\">medium</a> &#x26;&#x26; <a href=\"https://web-dev-resource-hub.netlify.app/\">Web-Dev-Resource-Hub</a></li>\n<li>💬 Ask me about <strong>Anything:</strong></li>\n<li>📫 How to reach me <strong>bryan.guner@gmail.com</strong></li>\n<li>⚡ Fun fact <strong>I played Bamboozle Music Festival at the Meadowlands Stadium Complex when I was 14.</strong></li>\n</ul>\n<h3>i really like music :headphones:</h3>\n<h4>What's the most useful business-related book you've ever read?</h4>\n<blockquote>\n<p>A Random Walk Down Wall Street</p>\n</blockquote>\n<h4>What's your favorite non-business book?</h4>\n<blockquote>\n<p>Hitchhiker's Guide To The Galaxy</p>\n</blockquote>\n<h4>If money were not an issue, what would you be doing right now?</h4>\n<blockquote>\n<p>Designing recording software/hardware and using it</p>\n</blockquote>\n<h4>What words of advice would you give your younger self?</h4>\n<blockquote>\n<p>Try harder and listen to your parents more (the latter bit of advice would be almost certain to fall on deaf ears lol)</p>\n</blockquote>\n<h4>What's the most creative thing you've ever done?</h4>\n<blockquote>\n<p>I built a platform that listens to a guitarist's performance and automatically triggers guitar effects at the appropriate time in the song.</p>\n</blockquote>\n<h4>Which founders or startups do you most admire?</h4>\n<blockquote>\n<p>Is it to basic to say Tesla... I know they're prevalent now but I've been an avid fan since as early as 2012.</p>\n</blockquote>\n<h4>What's your super power?</h4>\n<blockquote>\n<p>Having really good ideas and forgetting them moments later.</p>\n</blockquote>\n<h4>What's the best way for people to get in touch with you?</h4>\n<blockquote>\n<p>A text</p>\n</blockquote>\n<h4>What aspects of your work are you most passionate about?</h4>\n<p>Creating things that change my every day life.</p>\n<h4>What was the most impactful class you took in school?</h4>\n<blockquote>\n<p>Modern Physics... almost changed my major after that class... but at the end of the day engineering was a much more fiscally secure avenue.</p>\n</blockquote>\n<h4>What's something you wish you had done years earlier?</h4>\n<blockquote>\n<p>Learned to code ... and sing</p>\n</blockquote>\n<h4>What words of wisdom do you live by?</h4>\n<blockquote>\n<p>*Disclaimer: The following wisdom is very cliche ... but... \"Be the change that you wish to see in the world.\"</p>\n</blockquote>\n<blockquote>\n<p>Mahatma Gandhi</p>\n</blockquote>\n<p>| | ## Portfolio:</p>\n<h1><a href=\"https://portfolio42.netlify.app/\">netlify</a> |</h1>\n<p>| :------------: ||\n| <strong>Languages</strong> | <img src=\"https://img.shields.io/badge/Lang-HTML5-informational?style=flat&#x26;logo=HTML5&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Lang-CSS-informational?style=flat&#x26;logo=CSS%20Wizardry&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Lang-JavaScript-informational?style=flat&#x26;logo=JavaScript&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Lang-SQL-informational?style=flat&#x26;logo=SQL&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Lang-Java-informational?style=flat&#x26;logo=Java&#x26;logoColor=white&#x26;color=00FF00\"> <br /><img src=\"https://img.shields.io/badge/Lang-Python-informational?style=flat&#x26;logo=Python&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Lang-TypeScript-informational?style=flat&#x26;logo=TypeScript&#x26;logoColor=white&#x26;color=00FF00\"> |\n| <strong>Libraries</strong> | <img src=\"https://img.shields.io/badge/Lib-Bootstrap-informational?style=flat&#x26;logo=Bootstrap&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Lib-React-informational?style=flat&#x26;logo=React&#x26;logoColor=white&#x26;color=00FF00\"> |\n| <strong>Frameworks</strong> | <img src=\"https://img.shields.io/badge/FW-Redux-informational?style=flat&#x26;logo=Redux&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/FW-Node.js-informational?style=flat&#x26;logo=Node.js&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/FW-Express-informational?style=flat&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/FW-PowerShell-informational?style=flat&#x26;logo=PowerShell&#x26;logoColor=white&#x26;color=00FF00\"> |\n| <strong>Databases</strong> | <img src=\"https://img.shields.io/badge/DB-PostgreSQL-informational?style=flat&#x26;logo=PostgreSQL&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/DB-MySQL-informational?style=flat&#x26;logo=MySQL&#x26;logoColor=white&#x26;color=00FF00\"> |\n| <strong>Testing</strong> | <img src=\"https://img.shields.io/badge/Test-Jest-informational?style=flat&#x26;logo=Jest&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Test-Cypress-informational?style=flat&#x26;logo=Cypress&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Test-JUnit-informational?style=flat&#x26;logo=JUnit&#x26;logoColor=white&#x26;color=00FF00\"> |\n| <strong>Other</strong> | <img src=\"https://img.shields.io/badge/Editor-VS%20Code-informational?style=flat&#x26;logo=visualstudiocode&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Editor-IntelliJ%20IDEA-informational?style=flat&#x26;logo=intellijidea&#x26;logoColor=white&#x26;color=00FF00\"> <br /><img src=\"https://img.shields.io/badge/Tools-ESLint-informational?style=flat&#x26;logo=ESLint&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Tools-Postman-informational?style=flat&#x26;logo=Postman&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Tools-Git-informational?style=flat&#x26;logo=Git&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Tools-GitHub-informational?style=flat&#x26;logo=GitHub&#x26;logoColor=white&#x26;color=00FF00\"> <br /><img src=\"https://img.shields.io/badge/OS-Windows%2010-informational?style=flat&#x26;logo=Windows&#x26;logoColor=white&#x26;color=00FF00\"> <br /><img src=\"https://img.shields.io/badge/Code-LESS-informational?style=flat&#x26;logoColor=white&#x26;color=00FF00\"> <img src=\"https://img.shields.io/badge/Code-Emmet-informational?style=flat&#x26;logoColor=white&#x26;color=00FF00\"> |</p>\n  </div>\n</details>\n<!-- start work experience section -->\n<details>\n<summary> Resume </summary>\n<h1>➤ Technical Skills­­­</h1>\n<table>\n<thead>\n<tr>\n<th><strong>Programming**</strong> Languages:**</th>\n<th>JavaScript ES-6, NodeJS, React, HTML5, CSS3, SCSS, Bash Shell, Excel, SQL, NoSQL, MATLAB, Python, C++</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Databases:</strong></td>\n<td>PostgreSQL, MongoDB</td>\n</tr>\n<tr>\n<td><strong>Cloud:</strong></td>\n<td>Docker, AWS, Google App Engine, Netlify, Digital Ocean, Heroku, Azure Cloud Services</td>\n</tr>\n<tr>\n<td><strong>OS:</strong></td>\n<td>Linux, Windows (WSL), IOS</td>\n</tr>\n<tr>\n<td><strong>Agile:</strong></td>\n<td>GitHub, BitBucket, Jira, Confluence</td>\n</tr>\n<tr>\n<td><strong>IDEs:</strong></td>\n<td>VSCode, Visual Studio, Atom, Code Blocks, Sublime Text 3, Brackets</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p><a href=\"#experience\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h1>➤ Experience</h1>\n<table>\n<thead>\n<tr>\n<th><strong>Relational Concepts:</strong> Hallandale Beach, FL</th>\n<th>March 2020 - Present</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Front End Web Developer</strong></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Responsible for front-end development for a custom real estate application which provides sophisticated and fully customizable filtering to allow investors and real estate professionals to narrow in on exact search targets.</li>\n<li>Designed mock-up screens, wireframes, and workflows for intuitive user experience.</li>\n<li>Migrated existing multi-page user experience into singular page interfaces using React components.</li>\n<li>Participated in every stage of the design from conception through development and iterative improvement.</li>\n<li>Produced user stories and internal documentation for future site development and maintenance.</li>\n<li>Implemented modern frameworks including Bootstrap and Font-Awesome to give the site an aesthetic overhaul.</li>\n<li>Managed all test deployments using a combination of Digital Ocean and Netlify.</li>\n<li>Produced unit tests using a combination of Mocha and Chai.</li>\n<li>Injected Google Analytics to capture pertinent usage data to produce an insightful dashboard experience.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>Environment:</strong></th>\n<th><strong>JavaScript, JQuery, React, HTML5 &#x26; CSS, Bootstrap, DOJO, Google Cloud, Bash Script</strong></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th><strong>Cembre:</strong> Edison, NJ</th>\n<th>Nov 2019 – Mar 2020</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Product Development Engineer</strong></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Converted client's product needs into technical specs to be sent to the development team in Italy.</li>\n<li>Reorganized internal file server structure.</li>\n<li>Conducted remote / in person system integration and product demonstrations.</li>\n<li>Presided over internal and end user software trainings in addition to producing the corresponding documentation.</li>\n<li>Served as the primary point of contact for troubleshooting railroad hardware and software in the North America.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>Environment:</strong></th>\n<th><strong>Excel, AutoCAD, PowerPoint, Word</strong></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<hr>\n<p><a href=\"#education\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h1>➤ Education</h1>\n<table>\n<thead>\n<tr>\n<th>**B.S. Electrical Engineering, TCNJ, ** Ewing NJ</th>\n<th>2014 – 2019</th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<p><strong>Capstone Project – Team Lead</strong></p>\n<ul>\n<li>Successfully completed and delivered a platform to digitize a guitar signal and perform filtering before executing frequency &#x26; time domain analysis to track a current performance against prerecorded performance.</li>\n<li>Implemented the Dynamic Time Warping algorithm in C++ and Python to autonomously activate or adjust guitar effect at multiple pre-designated section of performance.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>Environment:</strong></th>\n<th><strong>C++, Python, MATLAB, PureData</strong></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n</details>\n<details>\n<summary> My Projects</summary>\n<table>\n  <thead>\n    <tr>\n      <th>Project Name</th>\n      <th>Skills used</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href='https://web-dev-resource-hub.netlify.app/'>Web-Dev-Resource-Hub (blog)</a></td>\n      <td>Html, Css, javascript, Python, jQuery,  React,  FireBase,  AWS S3,  Netlify,  Heroku,  NodeJS,  PostgreSQL,  C++,  Web Audio API</td>\n      <td>My blog site contains my resource sharing and blog site ... centered mostly on web development and just a bit of audio production / generally nerdy things I find interesting.</td>\n    </tr>\n       <tr>\n      <td><a href='https://project-showcase-bgoonz.netlify.app/'>Dynamic Guitar Effects Triggering Using A Modified Dynamic Time Warping Algorithm</a></td>\n      <td>C, C++, Python, Java, Pure Data, Matlab</td>\n      <td>Successfully completed and delivered a platform to digitize a guitar signal and perform filtering before executing frequency & time domain analysis to track a current performance against prerecorded performance.Implemented the Dynamic Time Warping algorithm in C++ and Python to autonomously activate or adjust guitar effect at multiple pre-designated section of performance.</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://trusting-dijkstra-4d3b17.netlify.app/\">Data Structures & Algorithms Interactive Learning Site</a></td>\n      <td>HTML, CSS, Javascript,  Python,  Java,  jQuery,  Repl.it-Database API</td>\n      <td>A interactive and comprehensive guide and learning tool for DataStructures and Algorithms ... concentrated on JS but with some examples in Python,  C++ and Java as well</td>\n    </tr>\n    <tr>\n      <td><a href='https://mihirbegmusic.netlify.app/'>MihirBeg.com</a></td>\n      <td>Html, Css, Javascript,  Bootstrap,  FontAwesome,  jQuery</td>\n      <td>A responsive and mobile friendly content promotion site for an Audio Engineer to engage with fans and potential clients</td>\n    </tr>\n    <tr>\n      <td><a href='https://tetris42.netlify.app/'>Tetris-JS</a></td>\n      <td>Html, Css, Javascript</td>\n      <td>The classic game of tetris implemented in plain javascipt and styled with a retro-futureistic theme</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://githtmlpreview.netlify.app/\">Git Html Preview Tool</a></td>\n      <td>Git,  Javascript,  CSS3,  HTML5,  Bootstrap,  BitBucket</td>\n      <td>Loads HTML using CORS proxy,  then process all links,  frames,  scripts and styles,  and load each of them using CORS proxy,  so they can be evaluated by the browser.</td>\n    </tr>\n    <tr>\n      <td><a href='https://project-showcase-bgoonz.netlify.app/'>Mini Project Showcase</a></td>\n      <td>HTML, HTML5, CSS, CSS3, Javascript, jQuery</td>\n      <td>add songs and play music, it also uses to store data in  INDEXEDB Database by which we can play songs, if we not clear the catch then song will remain stored in database.</td>\n    </tr>\n    \n  </tbody>\n<p align=\"center\">\n<hr>\n<hr>\n<hr>\n<hr>\n<div style=\" border: 1px solid black\">\n<img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/23b9b236-746e-409c-8e86-30b4385e3b72/hr1-raypham.gif\" alt=\"hr-line\" width=\"100%\" height=\"22\">\n</div>\n<hr>\n<hr>\n<h1><a href=\"https://ecstatic-jang-593fd1.netlify.app/readme\">Learning React Blog</a></h1>\n<h4>React Repo:</h4>\n<p><a href=\"https://github.com/bgoonz/React-Practice\">React Repo</a></p>\n<hr>\n<h2><a href=\"https://codesandbox.io/embed/zealous-microservice-ti7em?autoresize=1&expanddevtools=1&fontsize=14&hidenavigation=1&moduleview=1&theme=dark\"   style=\"width:100%; height:20px; border:0; border-radius: 4px; overflow:hidden;\" rel=\"React Todo\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Foo\"></a></h2>\n<div style=\" border: 1px solid black\">\n<img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/23b9b236-746e-409c-8e86-30b4385e3b72/hr1-raypham.gif\" alt=\"hr-line\" width=\"100%\" height=\"22\">\n</div>\n<h1><a href=\"https://documentation-site-react2-peitff669-bgoonz.vercel.app/\">react-documentation-site</a></h1>\n<p><a href=\"https://codesandbox.io/s/magical-stallman-ov0d1?autoresize=1&#x26;expanddevtools=1&#x26;fontsize=12&#x26;hidenavigation=1&#x26;moduleview=1&#x26;theme=dark\"><img src=\"https://codesandbox.io/static/img/play-codesandbox.svg\" alt=\"Edit magical-stallman-ov0d1\"></a></p>\n<div style=\" border: 1px solid black\">\n<img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/23b9b236-746e-409c-8e86-30b4385e3b72/hr1-raypham.gif\" alt=\"hr-line\" width=\"100%\" height=\"22\">\n</div>\n<hr>\n<h2>➤ Codepens (mostly embeded animations)</h2>\n<h1><a href=\"https://embedable-content.netlify.app/\">code-pens-embedded</a></h1>\n<p><a href=\"#weekly-quick-snips\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h2>➤ Weekly-Quick-Snips:</h2>\n<hr>\n<h4>Snippet of the Day:</h4>\n<h3>replaceAll</h3>\n<p>the method string.replaceAll(search, replaceWith) replaces all appearances of search string with replaceWith.</p>\n<pre><code class=\"language-javascript\">const str = 'this is a JSsnippets example';\n\nconst updatedStr = str.replace('example', 'snippet'); // 'this is a  JSsnippets snippet'\n\n\nThe tricky part is that replace method replaces only the very first match of the substring we have passed:\n\n\nconst str = 'this is a JSsnippets example and examples are great';\n\nconst updatedStr = str.replace('example', 'snippet'); //'this is a JSsnippets snippet and examples are great'\n\nIn order to go through this, we need to use a global regexp instead:\n\n\nconst str = 'this is a JSsnippets example and examples are great';\n\nconst updatedStr = str.replace(/example/g, 'snippet'); //'this is a JSsnippets snippet and snippets are greatr'\n\nbut now we have new friend in town, replaceAll\n\nconst str = 'this is a JSsnippets example and examples are great';\n\nconst updatedStr = str.replaceAll('example', 'snippet'); //'this is a JSsnippets snippet and snippets are greatr'\n</code></pre>\n<hr>\n<h3>Fibonacci in Python:</h3>\n<pre><code class=\"language-py\">def fib_iter(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    p0 = 0\n    p1 = 1\n    for i in range(n-1):\n        next_val = p0 + p1\n        p0 = p1\n        p1 = next_val\n    return next_val\nfor i in range(10):\n    print(f'{i}: {fib_iter(i)}')\n</code></pre>\n<hr>\n<h4>Yesterday's Snippet of the day:</h4>\n<hr>\n<pre><code class=\"language-py\">def quicksort(l):\n    # One of our base cases is an empty list or list with one element\n    if len(l) == 0 or len(l) == 1:\n        return l\n    # If we have a left list, a pivot point and a right list...\n    # assigns the return values of the partition() function\n    left, pivot, right = partition(l)\n    # Our sorted list looks like left + pivot + right, but sorted.\n    # Pivot has to be in brackets to be a list, so python can concatenate all the elements to a single list\n    return quicksort(left) + [pivot] + quicksort(right)\n\n\n\nprint(quicksort([]))\n\n\n\nprint(quicksort([1]))\n\n\n\nprint(quicksort([1,2]))\n\nprint(quicksort([2,1]))\n\n\nprint(quicksort([2,2]))\n\n\nprint(quicksort([5,3,9,4,8,1,7]))\n\n\nprint(quicksort([1,2,3,4,5,6,7]))\n\n\nprint(quicksort([9,8,7,6,5,4,3,2,1]))\n</code></pre>\n<hr>\n<details>\n  \n  <summary>See Older Snippets!</summary>\n  \n  \n  #### This Week's snippets: \n  \n  ---\n  \n  \n   >will replace any spaces in file names with an underscore!\n```bash\n for file in *; do mv \"$file\" `echo $file | tr ' ' '_'` ; done\n  ## TAKING IT A STEP FURTHER:\n # Let's do it recursivley:\n  function RecurseDirs ()\n{\n    oldIFS=$IFS\n    IFS=$'\\n'\n    for f in \"$@\"\n    do\n  # YOUR CODE HERE!\n<p>[<img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\">]</p>\n<p>for file in *; do mv \"$file\" <code>echo $file | tr ' ' '_'</code> ; done\nif [[ -d \"${f}\" ]]; then\ncd \"${f}\"\nRecurseDirs $(ls -1 \".\")\ncd ..\nfi\ndone\nIFS=$oldIFS\n}\nRecurseDirs \"./\"</p>\n<pre><code> ---\n ### Copy to clipboard jQuerry\n > Language: Javascript/Jquery\n\n\n>In combination with the script tag :  &#x3C;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\">&#x3C;/script> , this snippet will add a copy to clipboard button to all of your embedded &#x3C;code> blocks.\n\n\n```js\n$(document).ready(function() {\n  $('code, pre').append('&#x3C;span class=\"command-copy\" >&#x3C;i class=\"fa fa-clipboard\" aria-hidden=\"true\">&#x3C;/i>&#x3C;/span>');\n\n  $('code span.command-copy').click(function(e) {\n    var text = $(this).parent().text().trim(); //.text();\n    var copyHex = document.createElement('input');\n    copyHex.value = text\n    document.body.appendChild(copyHex);\n    copyHex.select();\n    document.execCommand('copy');\n    console.log(copyHex.value)\n    document.body.removeChild(copyHex);\n  });\n\n\n  $('pre span.command-copy').click(function(e) {\n    var text = $(this).parent().text().trim();\n    var copyHex = document.createElement('input');\n    copyHex.value = text\n    document.body.appendChild(copyHex);\n    copyHex.select();\n    document.execCommand('copy');\n    console.log(copyHex.value)\n    document.body.removeChild(copyHex);\n  });\n})\n</code></pre>\n<hr>\n<h3>Append Files in PWD</h3>\n<pre><code class=\"language-js\">//APPEND-DIR.js\nconst fs = require('fs');\nlet cat = require('child_process').execSync('cat *').toString('UTF-8');\nfs.writeFile('output.md', cat, (err) => {\n    if (err) throw err;\n});\n</code></pre>\n<hr>\n<h3>doesUserFrequentStarbucks.js</h3>\n<pre><code class=\"language-js\">const isAppleDevice = /Mac|iPod|iPhone|iPad/.test(navigator.platform);\nconsole.log(isAppleDevice);\n// Result: will return true if user is on an Apple device\n</code></pre>\n<hr>\n<h3>arr-intersection.js</h3>\n<pre><code class=\"language-js\">/*\n function named intersection(firstArr) that takes in an array and\nreturns a function. \nWhen the function returned by intersection is invoked\npassing in an array (secondArr) it returns a new array containing the elements\ncommon to both firstArr and secondArr.\n*/\nfunction intersection(firstArr) {\n    return (secondArr) => {\n        let common = [];\n        for (let i = 0; i &#x3C; firstArr.length; i++) {\n            let el = firstArr[i];\n            if (secondArr.indexOf(el) > -1) {\n                common.push(el);\n            }\n        }\n        return common;\n    };\n}\nlet abc = intersection(['a', 'b', 'c']); // returns a function\nconsole.log(abc(['b', 'd', 'c'])); // returns [ 'b', 'c' ]\n\nlet fame = intersection(['f', 'a', 'm', 'e']); // returns a function\nconsole.log(fame(['a', 'f', 'z', 'b'])); // returns [ 'f', 'a' ]\n</code></pre>\n<hr>\n<h3>arr-of-cum-partial-sums.js</h3>\n<pre><code class=\"language-js\">/*\nFirst is recurSum(arr, start) which returns the sum of the elements of arr from the index start till the very end.\nSecond is partrecurSum() that recursively concatenates the required sum into an array and when we reach the end of the array, it returns the concatenated array.\n*/\n//arr.length -1 = 5\n//                   arr   [    1,    7,    12,   6,    5,    10   ]\n//                   ind   [    0     1     2     3     4      5   ]\n//                              ↟                              ↟\n//                            start                           end\n\nfunction recurSum(arr, start = 0, sum = 0) {\n    if (start &#x3C; arr.length) {\n        return recurSum(arr, start + 1, sum + arr[start]);\n    }\n\n    return sum;\n}\n\nfunction rPartSumsArr(arr, partSum = [], start = 0, end = arr.length - 1) {\n    if (start &#x3C;= end) {\n        return rPartSumsArr(arr, partSum.concat(recurSum(arr, start)), ++start, end);\n    }\n    return partSum.reverse();\n}\n\nconsole.log('------------------------------------------------rPartSumArr------------------------------------------------');\nconsole.log('rPartSumsArr(arr)=[ 1, 1, 5, 2, 6, 10 ]: ', rPartSumsArr(arr));\nconsole.log('rPartSumsArr(arr1)=[ 1, 7, 12, 6, 5, 10 ]: ', rPartSumsArr(arr1));\nconsole.log('------------------------------------------------rPartSumArr------------------------------------------------');\n/*\n------------------------------------------------rPartSumArr------------------------------------------------\nrPartSumsArr(arr)=[ 1, 1, 5, 2, 6, 10 ]:  [ 10, 16, 18, 23, 24, 25 ]\nrPartSumsArr(arr1)=[ 1, 7, 12, 6, 5, 10 ]:  [ 10, 15, 21, 33, 40, 41 ]\n------------------------------------------------rPartSumArr------------------------------------------------\n*/\n</code></pre>\n<hr>\n<h3>camel2Kabab.js</h3>\n<pre><code class=\"language-js\">function camelToKebab(value) {\n    return value.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n</code></pre>\n<hr>\n<h3>camelCase.js</h3>\n<pre><code class=\"language-js\">function camel(str) {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n        if (+match === 0) return ''; // or if (/\\s+/.test(match)) for white spaces\n        return index === 0 ? match.toLowerCase() : match.toUpperCase();\n    });\n}\n</code></pre>\n<hr>\n<h3>concatLinkedLists.js</h3>\n<pre><code class=\"language-js\">function addTwoNumbers(l1, l2) {\n    let result = new ListNode(0);\n    let currentNode = result;\n    let carryOver = 0;\n    while (l1 != null || l2 != null) {\n        let v1 = 0;\n        let v2 = 0;\n        if (l1 != null) v1 = l1.val;\n        if (l2 != null) v2 = l2.val;\n\n        let sum = v1 + v2 + carryOver;\n        carryOver = Math.floor(sum / 10);\n        sum = sum % 10;\n        currentNode.next = new ListNode(sum);\n\n        currentNode = currentNode.next;\n        if (l1 != null) l1 = l1.next;\n        if (l2 != null) l2 = l2.next;\n    }\n\n    if (carryOver > 0) {\n        currentNode.next = new ListNode(carryOver);\n    }\n\n    return result.next;\n}\n</code></pre>\n<hr>\n<h3>fast-is-alpha-numeric.js</h3>\n<pre><code class=\"language-js\">//Function to test if a character is alpha numeric that is faster than a regular\n//expression in JavaScript\n\nlet isAlphaNumeric = (char) => {\n    char = char.toString();\n    let id = char.charCodeAt(0);\n    if (\n        !(id > 47 &#x26;&#x26; id &#x3C; 58) &#x26;&#x26; // if not numeric(0-9)\n        !(id > 64 &#x26;&#x26; id &#x3C; 91) &#x26;&#x26; // if not letter(A-Z)\n        !(id > 96 &#x26;&#x26; id &#x3C; 123) // if not letter(a-z)\n    ) {\n        return false;\n    }\n    return true;\n};\n\nconsole.log(isAlphaNumeric('A')); //true\nconsole.log(isAlphaNumeric(2)); //true\nconsole.log(isAlphaNumeric('z')); //true\nconsole.log(isAlphaNumeric(' ')); //false\nconsole.log(isAlphaNumeric('!')); //false\n</code></pre>\n<hr>\n<h3>find-n-replace.js</h3>\n<pre><code class=\"language-js\">function replaceWords(str, before, after) {\n    if (/^[A-Z]/.test(before)) {\n        after = after[0].toUpperCase() + after.substring(1);\n    } else {\n        after = after[0].toLowerCase() + after.substring(1);\n    }\n    return str.replace(before, after);\n}\nconsole.log(replaceWords('Let us go to the store', 'store', 'mall')); //\"Let us go to the mall\"\nconsole.log(replaceWords('He is Sleeping on the couch', 'Sleeping', 'sitting')); //\"He is Sitting on the couch\"\nconsole.log(replaceWords('His name is Tom', 'Tom', 'john'));\n//\"His name is John\"\n</code></pre>\n<hr>\n<h3>flatten-arr.js</h3>\n<pre><code class=\"language-js\">/*Simple Function to flatten an array into a single layer */\nconst flatten = (array) => array.reduce((accum, ele) => accum.concat(Array.isArray(ele) ? flatten(ele) : ele), []);\n</code></pre>\n<hr>\n<h3>isWeekDay.js</h3>\n<pre><code class=\"language-js\">const isWeekday = (date) => date.getDay() % 6 !== 0;\nconsole.log(isWeekday(new Date(2021, 0, 11)));\n// Result: true (Monday)\nconsole.log(isWeekday(new Date(2021, 0, 10)));\n// Result: false (Sunday)\n</code></pre>\n<hr>\n<h3>longest-common-prefix.js</h3>\n<pre><code class=\"language-js\">function longestCommonPrefix(strs) {\n    let prefix = '';\n    if (strs.length === 0) return prefix;\n    for (let i = 0; i &#x3C; strs[0].length; i++) {\n        const character = strs[0][i];\n        for (let j = 0; j &#x3C; strs.length; j++) {\n            if (strs[j][i] !== character) return prefix;\n        }\n        prefix = prefix + character;\n    }\n    return prefix;\n}\n</code></pre>\n<p><a href=\"https://wakatime.com\"><img src=\"https://wakatime.com/share/@bgoonz42/e088a908-1c73-434f-9eab-b73ea4f17d3c.png\" /></a></p>\n</details>\n<hr>\n<p><a href=\"#github-gists\"><img src=\"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png\" alt=\"-----------------------------------------------------\"></a></p>\n<h1>➤ Github Gists</h1>\n<h2><a href=\"https://bgoonzgist.netlify.app/\">Github Gists</a></h2>\n<p><a href=\"https://gist.github.com/bgoonz/659a9b81ac45453bedc0a1a36275b580\">list-of-my-websites</a></p>\n<p><a href=\"https://github.com/sindresorhus/awesome\"><img src=\"https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg\" alt=\"Awesome\"></a> <a href=\"https://github.com/chetanraj/awesome-github-badges\"><img src=\"https://img.shields.io/badge/Made%20With-Love-orange.svg\" alt=\"Made With Love\"></a></p>\n<p><a href=\"https://forthebadge.com\"><img src=\"https://forthebadge.com/images/badges/certified-snoop-lion.svg\" alt=\"forthebadge\"></a><a href=\"https://forthebadge.com\"><img src=\"https://forthebadge.com/images/badges/60-percent-of-the-time-works-every-time.svg\" alt=\"forthebadge\"></a></p>\n<p><a href=\"https://github.com/bgoonz/blog-w-comments\"><img src=\"https://img.shields.io/website-up-down-green-red/http/shields.io.svg\" alt=\"Website shields.io\"></a><a href=\"https://GitHub.com/bgoonz/ask-me-anything\"><img src=\"https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg\" alt=\"Ask Me Anything !\"></a><a href=\"https://gitter.im/bgoonz/community?utm_source=badge&#x26;utm_medium=badge&#x26;utm_campaign=pr-badge\"><img src=\"https://badges.gitter.im/bgoonz/community.svg\" alt=\"Gitter\"></a><a href=\"https://pypi.python.org/pypi/ansicolortags/\"><img src=\"https://img.shields.io/pypi/l/ansicolortags.svg\" alt=\"PyPI license\"></a></p>\n<p><a href=\"https://GitHub.com/bgoonz/bgoonz/graphs/commit-activity\"><img src=\"https://img.shields.io/badge/Maintained%3F-yes-green.svg\" alt=\"Maintenance\"></a><a href=\"https://github.com/ellerbrock/open-source-badges/\"><img src=\"https://badges.frapsoft.com/os/v1/open-source.png?v=103\" alt=\"Open Source Love\"></a> <a href=\"https://github.com/ellerbrock/open-source-badges/\"><img src=\"https://badges.frapsoft.com/bash/v1/bash.png?v=103\" alt=\"Bash Shell\"></a></p>\n<p><img src=\"https://img.shields.io/badge/-React-black?style=flat&#x26;logo=react\" alt=\"React\"> <img src=\"https://img.shields.io/badge/-Redux-lightblue?style=flat&#x26;logo=redux\" alt=\"Redux\">\n<img src=\"https://img.shields.io/badge/-HTML5-E34F26?style=flat&#x26;logo=html5&#x26;logoColor=white\" alt=\"HTML5\"> <img src=\"https://img.shields.io/badge/-CSS3-1572B6?style=flat&#x26;logo=css3\" alt=\"CSS3\"> <img src=\"https://img.shields.io/badge/-Sass-black?style=flat&#x26;logo=sass\" alt=\"Sass\"><img src=\"https://img.shields.io/badge/-Docker-black?style=flat&#x26;logo=docker\" alt=\"Docker\"> <img src=\"https://img.shields.io/badge/-MySQL-black?style=flat&#x26;logo=mysql\" alt=\"MySQL\"> <img src=\"https://img.shields.io/badge/-PostgreSQL-blue?style=flat&#x26;logo=postgresql\" alt=\"PostgresQL\"> <img src=\"https://img.shields.io/badge/-Git-black?style=flat&#x26;logo=git\" alt=\"Git\"> <img src=\"https://img.shields.io/badge/-Ruby-darkred?style=flat&#x26;logo=ruby\" alt=\"Ruby\"> <img src=\"https://img.shields.io/badge/-MaterialUI-0081CB?style=flat&#x26;logo=Material-UI&#x26;logoColor=white\" alt=\"Material-UI\"></p>\n<p><img src=\"https://img.shields.io/badge/-Express-blue?style=flat&#x26;logo=express\" alt=\"Express\"> <img src=\"https://img.shields.io/badge/-Nodejs-green?style=flat&#x26;logo=Node.js\" alt=\"Nodejs\"><img src=\"https://img.shields.io/badge/-Python-lightyellow?style=flat&#x26;logo=python&#x26;logoColor=blue\" alt=\"Python\"> <img src=\"https://img.shields.io/badge/-Bootstrap-7952B3?style=flat&#x26;logo=bootstrap&#x26;logoColor=white\" alt=\"Bootstrap\"> <img src=\"https://img.shields.io/badge/-JavaScript-black?style=flat&#x26;logo=javascript\" alt=\"JavaScript\"></p>\n</details>\n</center>"},{"url":"/docs/about/job-search/","relativePath":"docs/about/job-search.md","relativeDir":"docs/about","base":"job-search.md","name":"job-search","frontmatter":{"title":"Job Search","weight":0,"excerpt":"the hunt for a webdev position","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h1>Job Boards and The Hunt</h1>\n<p>I can’t imagine the kind of masochism it would take to enjoy the act of posting and daily maintenance on a job board…It’s part of the…</p>\n<hr>\n<h3>Job Boards and The Hunt</h3>\n<h4>I can’t imagine the kind of masochism it would take to enjoy the act of posting and daily maintenance on a job board…It’s part of the process that you’ve already invested so much of yourself in, so you should take pride in it; do a good job the first time around and you’ll get where your going in the blink of an eye!</h4>\n<p><a href=\"https://bryanguner.medium.com/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bryanguner.medium.com/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b\"><strong>A list of all of my articles to link to future posts</strong><br />\n<em>You should probably skip this one… seriously it’s just for internal use!</em>bryanguner.medium.com</a><a href=\"https://bryanguner.medium.com/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<hr>\n<h3>Update(After The Interview):</h3>\n<p>As a candidate, there are key next steps that you can and should after every interview to help you stand out.</p>\n<p><strong>Send a thank you email within 24 business hours</strong></p>\n<p><strong>Do not miss this step!</strong> It takes less than five minutes and can make the difference between you and another candidate. It also keeps you fresh in your interviewers’ memories. For example:</p>\n<p>‍</p>\n<p><em>Hi (name),</em></p>\n<blockquote>\n<p><em>Thank you so much for taking the time to meet with me yesterday to discuss my candidacy for (role title). After learning more about (share one or two takeaways from the interview about the company/team’s priorities), I’m even more excited to bring my skills in (1–3 relevant skills) to the team.</em></p>\n</blockquote>\n<blockquote>\n<p><em>I look forward to hearing from you about next steps, and if there is anything that I can clarify about my experience or qualifications for the (role title) position, please don’t hesitate to reach out.</em></p>\n</blockquote>\n<blockquote>\n<p><em>Thank you for your consideration,</em></p>\n</blockquote>\n<blockquote>\n<p><em>(your name)</em></p>\n</blockquote>\n<p><strong>Follow up</strong></p>\n<p>Don’t wait for the company to reach out to you! Be proactive in showing your interest by checking in to see where you stand in the process. If a company indicates a deadline by which you will hear back, and the deadline has passed, follow-up!</p>\n<p><strong>Check your email and phone regularly<br>\n‍*</strong><br>\n*Don’t ghost on a company at any stage in the process; make sure you add their domain to your safe senders list and respond to any messages within 24 hours.</p>\n<p>‍</p>\n<p><strong>Be prepared<br>\n‍*</strong><br>\n*You might be invited for another interview on short notice; review the description regularly so it doesn’t slip from your memory, and keep brushing up on skills you may need for an interview (chances are, this won’t be the only job you’ll need them for anyway!)</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*H4pwwuDEjkYTWKpJ.gif\" class=\"graf-image\" /></figure>\n<hr>\n<blockquote>\n<p>Here I will maintain a running list of applicable job boards and below I will go into detail about the niches they occupy and whatever I resource I have found to use them to your maximum advantage. !</p>\n</blockquote>\n<h3>Update (remote work edition):</h3>\n<ol>\n<li><span id=\"3063\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#arc\" class=\"markup--anchor markup--li-anchor\">Arc</a></span></li>\n<li><span id=\"7639\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#we-work-remotely\" class=\"markup--anchor markup--li-anchor\">We Work Remotely</a></span></li>\n<li><span id=\"e21f\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#skip-the-drive\" class=\"markup--anchor markup--li-anchor\">Skip The Drive</a></span></li>\n<li><span id=\"e1df\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#power-to-fly\" class=\"markup--anchor markup--li-anchor\">Power to Fly</a></span></li>\n<li><span id=\"ecb8\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#remote-ok\" class=\"markup--anchor markup--li-anchor\">Remote OK</a></span></li>\n<li><span id=\"c08c\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#remotive\" class=\"markup--anchor markup--li-anchor\">Remotive</a></span></li>\n<li><span id=\"b4f2\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#flexjobs\" class=\"markup--anchor markup--li-anchor\">FlexJobs</a></span></li>\n<li><span id=\"e670\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#dribble\" class=\"markup--anchor markup--li-anchor\">Dribble</a></span></li>\n<li><span id=\"3b01\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#angellist\" class=\"markup--anchor markup--li-anchor\">AngelList</a></span></li>\n<li><span id=\"4e54\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#remote-co\" class=\"markup--anchor markup--li-anchor\">Remote.co</a></span></li>\n<li><span id=\"043a\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#justremote\" class=\"markup--anchor markup--li-anchor\">JustRemote</a></span></li>\n<li><span id=\"7190\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#virtual-vocations\" class=\"markup--anchor markup--li-anchor\">Virtual Vocations</a></span></li>\n<li><span id=\"8128\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#pangian\" class=\"markup--anchor markup--li-anchor\">Pangian</a></span></li>\n<li><span id=\"f142\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#working-nomads\" class=\"markup--anchor markup--li-anchor\">Working Nomads</a></span></li>\n<li><span id=\"6d89\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#jobspresso\" class=\"markup--anchor markup--li-anchor\">Jobspresso</a></span></li>\n<li><span id=\"8732\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#outsourcely\" class=\"markup--anchor markup--li-anchor\">Outsourcely</a></span></li>\n<li><span id=\"4f25\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#landing-jobs\" class=\"markup--anchor markup--li-anchor\">Landing.Jobs</a></span></li>\n<li><span id=\"f994\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#authentic-jobs\" class=\"markup--anchor markup--li-anchor\">Authentic Jobs</a></span></li>\n<li><span id=\"4b77\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#stack-overflow\" class=\"markup--anchor markup--li-anchor\">Stack Overflow</a></span></li>\n<li><span id=\"bb76\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#gun-io\" class=\"markup--anchor markup--li-anchor\">Gun.io</a></span></li>\n<li><span id=\"114e\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#idealist\" class=\"markup--anchor markup--li-anchor\">Idealist</a></span></li>\n<li><span id=\"5da2\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#fiverr\" class=\"markup--anchor markup--li-anchor\">Fiverr</a></span></li>\n<li><span id=\"fa5e\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#upwork\" class=\"markup--anchor markup--li-anchor\">Upwork</a></span></li>\n<li><span id=\"f209\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#freelancer\" class=\"markup--anchor markup--li-anchor\">Freelancer</a></span></li>\n<li><span id=\"5ec4\"><a href=\"https://www.freecodecamp.org/news/how-to-find-remote-jobs/#freelancermap\" class=\"markup--anchor markup--li-anchor\">freelancermap</a></span></li>\n</ol>\n<hr>\n<h3>List:</h3>\n<h4>General Boards</h4>\n<ul>\n<li><span id=\"a076\"><a href=\"https://builtin.com/jobs\" class=\"markup--anchor markup--li-anchor\">Built In</a></span></li>\n<li><span id=\"c522\"><a href=\"https://stackoverflow.com/jobs\" class=\"markup--anchor markup--li-anchor\">Stack Overflow</a></span></li>\n<li><span id=\"8235\"><a href=\"http://angel.co/jobs\" class=\"markup--anchor markup--li-anchor\">angel.co</a></span></li>\n<li><span id=\"ae9e\"><a href=\"https://www.theladders.com/jobs/search-jobs\" class=\"markup--anchor markup--li-anchor\">The Ladders</a></span></li>\n<li><span id=\"aceb\"><a href=\"http://www.crunchboard.com/jobs\" class=\"markup--anchor markup--li-anchor\">CrunchBoard</a></span></li>\n<li><span id=\"7e5f\"><a href=\"https://uncubed.com/\" class=\"markup--anchor markup--li-anchor\">Uncubed</a></span></li>\n<li><span id=\"8678\"><a href=\"https://technical.ly/jobs/\" class=\"markup--anchor markup--li-anchor\">Technical.ly</a></span></li>\n<li><span id=\"c7fe\"><a href=\"https://www.dice.com/\" class=\"markup--anchor markup--li-anchor\">Dice</a></span></li>\n<li><span id=\"23f7\"><a href=\"https://www.techcareers.com/\" class=\"markup--anchor markup--li-anchor\">Tech Careers</a></span></li>\n<li><span id=\"20cf\"><a href=\"http://jobs.mashable.com/jobs/search/results\" class=\"markup--anchor markup--li-anchor\">Mashable</a></span></li>\n</ul>\n<h4>Remote or Relocation Boards:</h4>\n<ul>\n<li><span id=\"1e47\"><a href=\"https://weworkremotely.com/\" class=\"markup--anchor markup--li-anchor\">We Work Remotely</a></span></li>\n<li><span id=\"37d2\"><a href=\"https://relocate.me/\" class=\"markup--anchor markup--li-anchor\">Relocate</a><a href=\"https://workfromhomejobs.me/\" class=\"markup--anchor markup--li-anchor\">‍</a></span></li>\n<li><span id=\"aad7\"><a href=\"https://workfromhomejobs.me/\" class=\"markup--anchor markup--li-anchor\">Work From Home Jobs</a></span></li>\n<li><span id=\"d1fc\"><a href=\"https://docs.google.com/spreadsheets/d/16V7hG7l24hBAnlcmaSG3mrusDx1uj_ZsLwnTu7L_wsQ/edit?usp=sharing\" class=\"markup--anchor markup--li-anchor\">Remote Boards &#x26; Companies Spreadsheet</a></span></li>\n<li><span id=\"5267\"><a href=\"https://careervault.io/\" class=\"markup--anchor markup--li-anchor\">Career Vault</a></span></li>\n</ul>\n<h4>DS Boards:</h4>\n<ul>\n<li><span id=\"a50a\"><a href=\"https://www.bigdatajobs.com/\" class=\"markup--anchor markup--li-anchor\">BigDataJobs</a></span></li>\n<li><span id=\"e7ce\"><a href=\"https://icrunchdata.com/data-science-jobs/\" class=\"markup--anchor markup--li-anchor\">Icrunchdata</a></span></li>\n<li><span id=\"d66f\"><a href=\"https://www.analyticsjobs.co.uk/\" class=\"markup--anchor markup--li-anchor\">Analyticsjobs.co.uk</a></span></li>\n</ul>\n<h4>Design Boards</h4>\n<ul>\n<li><span id=\"0a09\"><a href=\"https://www.behance.net/joblist\" class=\"markup--anchor markup--li-anchor\">Behance</a></span></li>\n<li><span id=\"0174\"><a href=\"https://www.uxjobsboard.com/\" class=\"markup--anchor markup--li-anchor\">UX Jobs Board</a></span></li>\n<li><span id=\"ef44\"><a href=\"https://www.krop.com/creative-jobs/ux-ui-designer/\" class=\"markup--anchor markup--li-anchor\">Krop</a></span></li>\n</ul>\n<h4>Software Development</h4>\n<ul>\n<li><span id=\"4702\"><a href=\"https://www.honeypot.io/pages/for_employers\" class=\"markup--anchor markup--li-anchor\">Honeypot.io</a></span></li>\n<li><span id=\"d025\"><a href=\"https://jobs.github.com/\" class=\"markup--anchor markup--li-anchor\">GitHub</a></span></li>\n<li><span id=\"ed46\"><a href=\"https://blabladev.eu/\" class=\"markup--anchor markup--li-anchor\">BlablaDev</a></span></li>\n<li><span id=\"c23f\"><a href=\"http://jobs.smashingmagazine.com/\" class=\"markup--anchor markup--li-anchor\">Smashing <strong>Magazine</strong></a></span></li>\n<li><span id=\"61fd\"><a href=\"http://jobs.arstechnica.com/\" class=\"markup--anchor markup--li-anchor\">arstechnica</a></span></li>\n<li><span id=\"c526\"><a href=\"http://jobs.37signals.com/\" class=\"markup--anchor markup--li-anchor\">obs.37signals</a></span></li>\n<li><span id=\"1ec6\"><a href=\"http://news.ycombinator.com/submitted?id=whoishiring\" class=\"markup--anchor markup--li-anchor\">ycombinator</a></span></li>\n<li><span id=\"fa87\"><a href=\"http://jobs.slashdot.org/jobboard.php\" class=\"markup--anchor markup--li-anchor\">jobs.slashdot.org</a></span></li>\n<li><span id=\"3dfc\"><a href=\"http://angel.co/talent\" class=\"markup--anchor markup--li-anchor\">http://angel.co/talent</a></span></li>\n<li><span id=\"319e\"><a href=\"https://www.whitetruffle.com/\" class=\"markup--anchor markup--li-anchor\">whitetruffle</a></span></li>\n<li><span id=\"428a\"><a href=\"http://www.crunchboard.com/jobs/\" class=\"markup--anchor markup--li-anchor\">crunchboard</a></span></li>\n</ul>\n<p><strong>I am intentionally not linking glassdoor because they have irritated me for the last time by insisting I provide a job review every time I want to access their content… (To the makers of glassdoor… HOW MANY TIMES A MONTH DO YOU THINK I CHANGE JOBS!!!!) I don’t have 15 minutes to make up a job experience every time I want to read a review.</strong></p>\n<hr>\n<blockquote>\n<p>Also here is a repo of compiled job search and interviewing resources:</p>\n</blockquote>\n<p><a href=\"https://github.com/bgoonz/INTERVIEW-PREP-COMPLETE\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz/INTERVIEW-PREP-COMPLETE\"><strong>bgoonz/INTERVIEW-PREP-COMPLETE</strong><br />\n<em>Your resume is your personal summary sheet. Your resume is the thing that gets your foot in the door. So, there's a few…</em>github.com</a><a href=\"https://github.com/bgoonz/INTERVIEW-PREP-COMPLETE\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/600/1*3_3Cb73SQM_YazWGpZWtIw.png\" class=\"graf-image\" /></figure><figure><img src=\"https://cdn-images-1.medium.com/max/600/1*aI1PfkSpsUks598LAJvKoQ.png\" class=\"graf-image\" /></figure>\n<h4>First off I am going to introduce a few different categories for those of you who are completely overwhelmed by the prospect of even selecting a job board let alone establishing a competitive presence on one. Here’s a few catorizations I think are worth distinguishing for one and other.</h4>\n<h3>1. Interpersonal Connections</h3>\n<p>Seek to leverage the connections you have with people you know and companies you want to work with. I know that that’s a violation of the premise of this article but without even feeling the need to provide quantitative proof; I can confidently assume that this is the most <a href=\"https://www.investopedia.com/terms/r/returnoninvestment.asp\" class=\"markup--anchor markup--p-anchor\">RO</a>I efficient way to produce a desirable result. (Sorry introverts… 2020 may have been your year but this is our world. 😘)</p>\n<p><strong>If personal connections don’t come through, the next best thing is cold outreach (<em>best in terms of results…. personally I hate cold calling strangers and I am an extrovert</em>.)</strong></p>\n<ol>\n<li><span id=\"2139\">Before or after submitting an application, <strong>identify 1–3 professionals to reach out to</strong> at the company to express interest in opportunities.</span></li>\n<li><span id=\"fb8b\"><strong>Send a message to express interest and request an informational interview</strong> with the individual via LinkedIn, email, Twitter, or other available communication methods.</span></li>\n<li><span id=\"840d\"><strong>If you hear back</strong> and the individual is willing to connect, <strong>confirm a day and time to conduct a preliminary interview.</strong> <em>OR</em> <strong>If you have yet to hear back after 3 business days, follow-up.</strong></span></li>\n</ol>\n<p>Once you send off a message in step two, there are a variety of responses you may receive. Sometimes an individual will forward you along to someone who may be of better assistance, other times your message may be overlooked with no reply, and its possible (best case scenario) your request for a chat becomes an invitation to interview.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/600/1*3_3Cb73SQM_YazWGpZWtIw.png\" class=\"graf-image\" /></figure><figure><img src=\"https://cdn-images-1.medium.com/max/600/1*aI1PfkSpsUks598LAJvKoQ.png\" class=\"graf-image\" /></figure>\n<figure><img src=\"https://cdn-images-1.medium.com/max/600/1*5eObFD9fV2fe5DztitZfsA.png\" class=\"graf-image\" /></figure>### ***2. LinkedIn***.\n<p>I am going to devote a lot of time to this one because it is the largest and most active of all the job board ecosystems… period… full stop regardless of your industry.</p>\n<p>LinkedIn now has <a href=\"https://news.linkedin.com/about-us#Statistics\" class=\"markup--anchor markup--p-anchor\">almost 740 million members</a> with over 55 million registered companies. (for comparison 12.3 million people visited Indeed in October, up 19.6 percent. <a href=\"http://www.monster.com/\" class=\"markup--anchor markup--p-anchor\">Monster.com</a> attracted 12.1 million people, and <a href=\"http://www.careerbuilder.com/\" class=\"markup--anchor markup--p-anchor\">CareerBuilder.com</a>attractedd 11.3 million in that same time) and LinkedIn is the most-used social media platform amongst Fortune 500 companies as it provides far more networking capabilities than pure recruitment.</p>\n<p>If you put your resume and skills on LinkedIn.com as a software Engineer, and state that you are open to new opportunities, you <em>will</em> be contacted by multiple recruiters, and if your skills are desirable possibly also directly by companies seeking to hire you. It’s a developer’s market; there’s not enough people out there, especially in America.</p>\n<p>Here’s my profile… feel free to connect… the larger your network the greater your exposure is to someone who works at your potential dream job.</p>\n<p><a href=\"https://www.linkedin.com/in/bryan-guner-046199128/\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://www.linkedin.com/in/bryan-guner-046199128/\"><strong>Bryan Guner - Web Developer - Freelance | LinkedIn</strong><br />\n<em>View Bryan Guner's profile on LinkedIn, the world's largest professional community. Bryan has 5 jobs listed on their…</em>www.linkedin.com</a><a href=\"https://www.linkedin.com/in/bryan-guner-046199128/\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p>Here’s A Linkedin Checklist I will be using before I return to the job hunt!</p>\n<p><a href=\"https://www.notion.so/LinkedIn-d8b35e25ff0c451dbb5506ffa1179a8d\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://www.notion.so/LinkedIn-d8b35e25ff0c451dbb5506ffa1179a8d\"><strong>LinkedIn</strong><br />\n<em>Personal and Contact Information:</em>www.notion.so</a><a href=\"https://www.notion.so/LinkedIn-d8b35e25ff0c451dbb5506ffa1179a8d\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<blockquote>\n<p>excerpt:</p>\n</blockquote>\n<h4>Experience Section</h4>\n<ul>\n<li><span id=\"a517\">[ ] I <strong>have</strong> listed all professional roles included on my resume in this section and any that I had to cut from my resume for space</span></li>\n<li><span id=\"eca7\">[ ] I <strong>have</strong> written 2–4 power statements for each experience listed (okay to copy and paste from resume)</span></li>\n<li><span id=\"d298\">[ ] My power statements for each experience <a href=\"https://www.linkedin.com/pulse/update-how-add-bullet-points-your-linkedin-profile-erin-dore-miller/\" class=\"markup--anchor markup--li-anchor\">are bulleted</a>, not in paragraph form.</span></li>\n<li><span id=\"ec6c\">[ ] I <strong>did</strong> list responsibilities in bullet point format (I <strong>did not</strong> leave in paragraph format)</span></li>\n<li><span id=\"f472\">[ ] I <strong>did</strong> start each bullet point with <a href=\"https://docs.google.com/document/d/1wZkDPBWtQZDGGdvStD61iRx_jOWVlIyyQl9UOYHtZgA/edit?usp=sharing\" class=\"markup--anchor markup--li-anchor\">an action verb</a> and I <strong>did not</strong> use phrases such as: <code>Assisted with...</code> <code>Worked on...</code> <code>Helped with...</code> (<code>Solely responsible for...</code> ok)</span></li>\n<li><span id=\"9a26\">[ ] I <strong>did</strong> describe past projects in past tense and current projects in present tense</span></li>\n<li><span id=\"0f5a\">[ ] I <strong>did not</strong> use pronouns such as: “I,” “we,” “they, “you,” “me,” “us”</span></li>\n<li><span id=\"3616\">[ ] <strong>Optional:</strong> Bootcamp student experience and projects can be listed under your experience section if you have no (or almost no) prior work experience.</span></li>\n<li><span id=\"7fa1\">[ ] If I listed my Bootcamp student experience, my title is [name of program] Student (example: Data Science Student)</span></li>\n<li><span id=\"c928\">[ ] I copied and pasted my Lambda projects in my student description and also included them in the Accomplishments section</span></li>\n</ul>\n<h3>Do’s:</h3>\n<p><strong>Spend a good portion of your time learning and reading. Your jobs teach you so much about an organization and the business.</strong></p>\n<p><strong>Follow business owners and senior managers, successful team leaders in large organizations, startup owners. You would be surprised how willing some otherwise busy executives are to rub elbows with veritable newcomers. They’re not just doing this out of the kindness of their hearts, just like you… they have an ulterior motive. They are hoping to build goodwill with the incoming workforce in a bid to make their company more attractive to high quality candidates. If they give you any of their time…treat it like an interview.</strong></p>\n<blockquote>\n<p><em>To leverage this information, (the trick is to constantly remind yourself to be on your game with speaking with them.) I do not care what your teacher’s past have said… mark my words…</em> <strong>*THERE IS MOST CERTAINLY SUCH A THING AS A STUPID QUESTION**</strong>…Anyone who tells you otherwise is either stupid themselves or just overcome with their own compassion (an admirable trait but ultimately a disservice to you the competitive job seeker).*</p>\n</blockquote>\n<p><a href=\"https://hbr.org/2018/05/the-surprising-power-of-questions\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://hbr.org/2018/05/the-surprising-power-of-questions\"><strong>How to Ask Great Questions</strong><br />\n<em>In Brief The Problem Some professionals such as litigators, journalists and even doctors, are taught to ask questions…</em>hbr.org</a><a href=\"https://hbr.org/2018/05/the-surprising-power-of-questions\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<blockquote>\n<p>Engage in networking. I would recommend <strong>finding and connecting with current attendee of any software development bootcamp</strong>. They’re all (for the most part) programatically encouraged to connect network and engage in peer skill promotion (even if they have no idea of you skill level). If that weren’t enough reason, all of them come from a cohort of other individuals being instructed to do the same. Once you have a few in your network other’s will seek you out through Linkedin recommendations algorithm.</p>\n</blockquote>\n<blockquote>\n<p><strong>Note to prospective employers please just skip the next few sentences and don’t ask why…😅</strong></p>\n</blockquote>\n<blockquote>\n<p><strong>Of the 214 people that vouched for me… I guestimate about only 80 actually know me in any respectable capacity, and of those, only probably 30 or so are familiar with my competency in the skills they endorsed. It all boils down to the strategies that bootcamps instill in their students. It’s the polar opposite of a zero sum game and they’re more than happy to exchange personal recommendations with you. They’re also far more driven to consistently engage with other members of the linkedin ecosystem because they need to a network to help compensate for their lack of a four year degree and the connections you make in that time.</strong></p>\n</blockquote>\n<figure><img src=\"https://cdn-images-1.medium.com/max/400/1*E519LWHx8W3CXw6c5FXgqg.png\" class=\"graf-image\" /></figure><figure><img src=\"https://cdn-images-1.medium.com/max/1000/1*AUDMmyZrugM3SSy_0axgfQ.jpeg\" class=\"graf-image\" /></figure>\n<blockquote>\n<p>Build your personal brand. Developing your brand will not only help you attract clients or recruits if you decide to start a business, but will also help you find great job opportunities. You can post anything you take pride in so long as it’s fairly professional. Definitely make use of the featured section to showcase your work.</p>\n</blockquote>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/1*DlqWg94B670bgin5STdJNg.png\" class=\"graf-image\" /></figure>### Don’t:\n<h4>Don’t Use LinkedIn’s Default Headline</h4>\n<p>LinkedIn automatically populates your headline with your current job title and company name. I hope it goes without saying… but as a rule avoid signaling to prospective employers the depths of your laziness by using any stock responses LinkedIn provides you.</p>\n<h4>Don’t Go Ham On Keyword Placment</h4>\n<p>Placing keywords strategically into your LinkedIn profile is virtually the only way to ensure being flagged by search algorithms as a potential candidate.You could be forgiven for being tempted to heed the advice of your inner lizard brain, and just stuffing your profile with buzzwords but this will likely trigger a spam account checker and result in worse outcomes than the absence of said keywords.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/600/1*3_3Cb73SQM_YazWGpZWtIw.png\" class=\"graf-image\" /></figure><figure><img src=\"https://cdn-images-1.medium.com/max/600/1*aI1PfkSpsUks598LAJvKoQ.png\" class=\"graf-image\" /></figure>\n<hr>\n<h3>Why it matters<em>¿</em></h3>\n<h4>Are We Really All Connected by Just Six Degrees of Separation?</h4>\n<p>Most of us are familiar with the concept of six degrees of separation — the idea is that anyone in the planet can be connected to anyone else in just six steps. So through just five other people, you’re effectively connected to the Queen of England, Jim Belushi or even yo mamma.</p>\n<hr>\n<h3>Back to the other Job Board Niches:</h3>\n<p><strong><em>3. Traditional job boards</em></strong>. Dice.com, Monster.com, etc. They will not find you great jobs at technology companies; they may find you openings as a software engineer at other types of more traditional companies (for example, banks, retail chains, etc though.</p>\n<p><strong><em>4. Local-focused sites</em></strong>. The biggest is Craigslist, but there are others. Often great for contract work and opportunities you wouldn’t have otherwise come across.</p>\n<p><strong><em>5. Freelancer websites</em></strong>. oDesk.com, Elance.com, etc. Lower pay, but 100% contract work, and has a lot of flexible opportunities if you’re not looking for traditional full-time employment or remote work.</p>\n<ul>\n<li><span id=\"1350\"><a href=\"https://www.quora.com/What-are-the-best-job-boards-for-software-engineers\" class=\"markup--anchor markup--li-anchor\">Source</a></span></li>\n</ul>\n<figure><img src=\"https://cdn-images-1.medium.com/max/600/1*3_3Cb73SQM_YazWGpZWtIw.png\" class=\"graf-image\" /></figure><figure><img src=\"https://cdn-images-1.medium.com/max/600/1*aI1PfkSpsUks598LAJvKoQ.png\" class=\"graf-image\" /></figure>\n<h3>Lastly Here’s A Github Profile Guide:</h3>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/1*0nYkgla6oc0uImSZJElpdw.jpeg\" class=\"graf-image\" /></figure><figure><img src=\"https://cdn-images-1.medium.com/max/800/1*wIhqnhU5zoyIr1GwZ2UTNA.jpeg\" class=\"graf-image\" /></figure>Medium is causing strange formatting… they normally form a grid!\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/1*-ypWlmloBF6kz9UnVG2kOA.png\" class=\"graf-image\" /></figure><figure><img src=\"https://cdn-images-1.medium.com/max/800/1*Y9SdKz9cS3FtjlKaRge3jg.png\" class=\"graf-image\" /></figure>### Rubric:\n<figure><img src=\"https://cdn-images-1.medium.com/max/1200/1*5-FYxWj0q8sUvpDoAR3ZLA.png\" class=\"graf-image\" /></figure>\n<hr>\n<h3>Discover More:</h3>\n<p><a href=\"https://bgoonz-blog.netlify.app/\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bgoonz-blog.netlify.app/\"><strong>Web-Dev-Hub</strong><br />\n<em>Memoization, Tabulation, and Sorting Algorithms by Example Why is looking at runtime not a reliable method of…</em>bgoonz-blog.netlify.app</a><a href=\"https://bgoonz-blog.netlify.app/\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<h1><strong>General</strong></h1>\n<ul>\n<li><strong><a href=\"https://haseebq.com/how-to-break-into-tech-job-hunting-and-interviews/\">How To Break Into Tech - Job Hunting and Interviews by Haseeb Qureshi</a></strong></li>\n<li><strong><a href=\"https://mintbean.io/\">Mintbean.io - Hackathons and Workshops</a></strong></li>\n<li><strong><a href=\"https://talent.works/category/science-of-the-job-search/\">Data on the job search and how to do it!</a></strong></li>\n<li><strong><a href=\"https://www.linkedin.com/post-inspector/inspect/\">LinkedIn Post Inspector</a></strong></li>\n<li><strong><a href=\"https://medium.com/@jamesyhiggs/how-to-add-thumbnail-images-to-the-featured-section-of-your-linkedin-profile-for-web-apps-sites-917346235932\">LinkedIn Featured Images</a></strong></li>\n<li><strong><a href=\"https://frontendmasters.com/\">Frontend Masters</a></strong> - Expensive, but worth every penny</li>\n</ul>\n<hr>\n<h1><strong>Resume</strong></h1>\n<ul>\n<li><strong><a href=\"http://blog.alinelerner.com/lessons-from-a-years-worth-of-hiring-data/\">Spelling/Grammar mistakes on Resume costs jobs</a></strong></li>\n</ul>\n<h1><strong>Cover Letter</strong></h1>\n<ul>\n<li><strong><a href=\"http://www.fsb.miamioh.edu/fsb/content/programs/howe-writing-initiative/HWI-handout-CsofBusComm.html\">Six C's of Business Communication</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Heroku</strong> - <em>Use at your own risk</em></h1>\n<ul>\n<li><strong><a href=\"https://medium.com/@pandachain/keep-free-heroku-app-awake-during-a-specific-period-using-google-app-script-in-2017-63fe37ee9e9f\">Keep Heroku App Awake For Free Using Google App Script</a></strong></li>\n<li><strong><a href=\"https://uptimerobot.com/\">UptimeRobot</a></strong></li>\n<li><strong><a href=\"https://kaffeine.herokuapp.com/\">Kaffeine</a></strong></li>\n<li><strong><a href=\"https://docs.google.com/document/d/1_BZswbvmcEtVul9gD59Lk4IUk2mHp1Wbe2ucaHTY7A0/edit\">UptimeRobot and Dyno Lecture</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Trivia</strong></h1>\n<ul>\n<li>\n<h2><strong>JavaScript Trivia</strong></h2>\n<ul>\n<li><strong><a href=\"https://www.fullstack.cafe/\">Fullstack Cafe - EVERYTHING</a></strong></li>\n<li><strong><a href=\"https://www.thatjsdude.com/interview/\">Front-end trivia</a></strong></li>\n</ul>\n</li>\n<li>\n<h2><strong>Python Trivia</strong></h2>\n</li>\n<li>\n<h2><strong>Frontend Trivia</strong></h2>\n<ul>\n<li><a href=\"https://www.toptal.com/designers/web/interview-questions\"><strong>12 Essential Web Design Interview Questions</strong></a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1><strong>Language Resources</strong></h1>\n<ul>\n<li>\n<h2><strong>JavaScript Resources</strong></h2>\n<ul>\n<li><strong><a href=\"https://github.com/antonjb/TypeScript-Learning-Plan\">TypeScript Learning Plan</a></strong></li>\n<li>\n<p><strong>React Native</strong></p>\n<ul>\n<li>\n<p><strong><a href=\"https://codewithmosh.com/courses/enrolled\">Code With Mosh Enrolled</a></strong></p>\n<ul>\n<li><em>satagonia@gmail.com / qqqq1111</em></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<h2><strong>Python Resources</strong></h2>\n<p>-</p>\n</li>\n<li>\n<h2><strong>HTML5 Resources</strong></h2>\n<ul>\n<li><a href=\"https://digital.com/tools/html-cheatsheet/\"><strong>HTML5 Cheat Sheet</strong></a></li>\n<li><a href=\"https://www.html5rocks.com/en/resources.html\"><strong>HTML5 Rocks</strong></a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\"><strong>MDN - HTML</strong></a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML\"><strong>MDN - HTML5</strong></a></li>\n<li><a href=\"http://html5doctor.com/\"><strong>HTML5 Doctor</strong></a></li>\n<li>-</li>\n</ul>\n</li>\n<li>\n<h2><strong>CSS3 Resources</strong></h2>\n<ul>\n<li><a href=\"https://www.w3schools.com/css/\"><strong>W3 Schools CSS3 Tutorial</strong></a></li>\n<li><a href=\"https://www.tutorialrepublic.com/css-tutorial/\"><strong>Tutorial Republic - Ultimate Tutorial for Beginners</strong></a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS\"><strong>MDN - CSS</strong></a></li>\n<li><a href=\"https://www.css3.info/\"><strong>CSS3.info</strong></a></li>\n<li>\n<p><a href=\"https://css-tricks.com/\"><strong>CSS Tricks</strong></a></p>\n<ul>\n<li><a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">Complete Guide to Flexbox</a></li>\n<li><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">Complete Guide to Grid</a></li>\n</ul>\n</li>\n<li><a href=\"https://grid.layoutit.com/\"><strong>Interactive CSS Grid Generator</strong></a></li>\n<li><a href=\"http://csszengarden.com/\"><strong>CSS Zen Garden</strong></a></li>\n<li><a href=\"http://flexboxgrid.com/\"><strong>Flexbox Grid (Package)</strong></a></li>\n<li><a href=\"http://www.specifishity.com/\"><strong>Specifishity</strong></a></li>\n<li><a href=\"https://www.onblastblog.com/css3-cheat-sheet/\"><strong>CSS3 Cheat Sheet</strong></a></li>\n<li><a href=\"https://labs.jensimmons.com/\"><strong>Jen Simmons Labs</strong></a></li>\n</ul>\n</li>\n<li>\n<h2><strong>Miscellaneous Resources</strong></h2>\n<ul>\n<li>\n<p><a href=\"https://codepen.io/\"><strong>CodePen</strong></a></p>\n<ul>\n<li><a href=\"https://codepen.io/202/popular/pens/\">2020 Most Popular Pens (replace year for more)</a></li>\n</ul>\n</li>\n<li><a href=\"https://web-design-weekly.com/\"><strong>Web Design Weekly</strong></a></li>\n<li><a href=\"https://responsivedesign.is/\"><strong>Responsive Design Weekly</strong></a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1><strong>DS&#x26;A</strong></h1>\n<ul>\n<li><strong><a href=\"https://leetcode.com/explore\">Leetcode</a></strong></li>\n<li><strong><a href=\"https://www.algoexpert.io/\">AlgoExpert</a></strong></li>\n</ul>\n<h2><strong>Hash Tables:</strong></h2>\n<ul>\n<li>\n<p><strong><a href=\"https://www.youtube.com/watch?v=shs0KM3wKv8\">What is a Hash Table</a></strong></p>\n<ul>\n<li>O(1) for a \"good\" table</li>\n<li>O(n) for a terrible table (lots of collisions, etc.)</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1><strong>System Design</strong></h1>\n<ul>\n<li><strong><a href=\"https://www.educative.io/courses/grokking-the-system-design-interview/m2yDVZnQ8lG\">The Basics</a></strong></li>\n<li><strong><a href=\"https://levelup.gitconnected.com/everything-you-need-to-know-about-caching-system-design-932a6bdf3334\">Caching</a></strong></li>\n<li><strong><a href=\"https://codeburst.io/system-design-basics-load-balancer-101-adc4f602d08f\">Load Balancing</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Interviewing</strong></h1>\n<ul>\n<li>\n<h3><strong>Mock Interviewing</strong></h3>\n<ul>\n<li><strong><a href=\"https://interviewing.io/\">Interviewing.io</a></strong></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1><strong>Networking</strong></h1>\n<ul>\n<li><strong><a href=\"https://www.meetup.com/\">MeetUp</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Managing and Organizing Job Search</strong></h1>\n<ul>\n<li>\n<p><strong><a href=\"notion.so\">Notion</a></strong></p>\n<ul>\n<li>Trillo clone but with added features that make it really great! Consider creating a template for new job seekers!</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1><strong>Negotiations</strong></h1>\n<ul>\n<li><strong><a href=\"https://haseebq.com/my-ten-rules-for-negotiating-a-job-offer/\">Haseeb's 10 Rules - Part 1</a></strong></li>\n<li><strong><a href=\"https://haseebq.com/how-not-to-bomb-your-offer-negotiation/\">Haseeb's 10 Rules - Part 2</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Portfolio Sites</strong></h1>\n<p>Take 25 minutes to choose a template, download it, rename it githubusername.github.io , git init, and push it to a github repo of the same name:</p>\n<h2><strong>Template Sources</strong></h2>\n<ul>\n<li><a href=\"http://www.free-css.com/template-categories/portfolio\"><strong>Free CSS Templates</strong></a></li>\n<li><a href=\"http://html5up.net/\"><strong>HTML5 UP</strong></a></li>\n<li><a href=\"http://startbootstrap.com/\"><strong>Start Bootstrap</strong></a></li>\n<li><a href=\"https://themewagon.com/top-html-landing-page-templates/\"><strong>Theme Wagon</strong></a></li>\n<li><a href=\"https://templatemo.com/tag/portfolio\"><strong>Templatemo</strong></a></li>\n<li><a href=\"https://onepagelove.com/templates/free-templates\"><strong>One Page Love</strong></a></li>\n<li>Once you’ve decided on a template, download it to your machine.</li>\n<li>Rename the folder <code>{$yourGitHubUserName}.github.io</code>, (e.g. if my GitHub\nusername were QueenOfTheBeyhive, I would name my repo\n<code>QueenOfTheBeyhive.github.io</code>). This will be important for deployment to GitHub\npages later.</li>\n<li>Make sure to <code>git init</code> and set up your remote repository.</li>\n<li>As always, make sure to read through any provided README for any potentially\nuseful information.</li>\n<li>Take some time to explore the structure, included elements, and default assets\nincluded in the template. Take special note of style sheets and the main HTML\nfile. The main HTML must be called <code>index.html</code> and it must be located in the root\nof the directory. If the file is located elsewhere, relocate it to the root and adjust\nany relative paths for any imported scripts or style sheets.</li>\n</ul>\n<hr>\n<h1><strong>QA Engineering</strong></h1>\n<ul>\n<li><strong><a href=\"https://teamtreehouse.com/library/introduction-to-qa-engineering\">Full course in 7 day trial</a></strong></li>\n<li><strong><a href=\"https://docs.google.com/document/d/1REtlnM0j88iGgIkPmOyeuwf-VdhOSV6U0QkcPEz81Oc/edit\">Prep Notes</a></strong></li>\n</ul>\n<h1><strong>Alternative Roles</strong></h1>\n<pre><code>Data Analyst\nSales Engineer\nTechnical Support Engineer\nCustomer Success Engineer\nData Engineer\nDev Ops Engineer\nQA Engineer\nSolutions Engineer\nSupport Engineer\nTechnical Product Manager\nScrum Master\nImplementation Specialist\nTechnical Account Manager\n</code></pre>\n<hr>\n<h1><strong>Externship</strong></h1>\n<ul>\n<li><strong><a href=\"https://www.insidesherpa.com/\">insidesherpa</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Open Source</strong></h1>\n<ul>\n<li><strong><a href=\"https://opensource.guide/\">GitHub's open source guides</a></strong></li>\n<li><strong><a href=\"https://opensource.com/resources/getting-started-open-source\">Getting started with open source</a></strong></li>\n<li><strong><a href=\"https://www.firsttimersonly.com/\">First timers only</a></strong></li>\n<li><strong><a href=\"https://opensourceunderdogs.com/episodes/\">Open Source Underdogs</a></strong></li>\n<li><strong><a href=\"https://www.codetriage.com/\">Code Triage</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Volunteer</strong></h1>\n<ul>\n<li><strong><a href=\"https://www.codeforamerica.org/\">Code For America</a></strong></li>\n<li><strong><a href=\"https://www.donatecode.com/\">Donate Code</a></strong></li>\n<li><strong><a href=\"https://socialcoder.org/Home/Index\">Social Coder</a></strong></li>\n<li><strong><a href=\"https://www.catchafire.org/\">Catch A Fire</a></strong></li>\n<li><strong><a href=\"https://www.hackersforcharity.org/\">Hackers For Charity</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Imposter Syndrome</strong></h1>\n<ul>\n<li><strong><a href=\"https://www.zainrizvi.io/blog/the-impostors-advantage/\">The Imposter's Advantage - Zain Rizvi</a></strong></li>\n<li><strong><a href=\"https://www.techrepublic.com/article/why-58-of-tech-employees-suffer-from-imposter-syndrome/\">Stats on the tech giants</a></strong></li>\n<li><strong><a href=\"http://blog.alinelerner.com/how-different-is-a-b-s-in-computer-science-from-a-m-s-in-computer-science-when-it-comes-to-recruiting/\">Why MS degrees are shit</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Podcasts</strong></h1>\n<ul>\n<li><strong><a href=\"https://freecodecamp.libsyn.com/\">FreeCodeCamp Podcast</a></strong></li>\n<li><strong><a href=\"https://www.heroku.com/podcasts/codeish/85-the-new-definition-of-frontend-development\">Codish Podcast</a></strong></li>\n</ul>\n<hr>\n<h1><strong>Books</strong></h1>\n<ul>\n<li>\n<p><strong>Grokking the Coding Interview</strong></p>\n<ul>\n<li><a href=\"https://github.com/cl2333/Grokking-the-Coding-Interview-Patterns-for-Coding-Questions\">GitHub Coding Questions</a></li>\n<li><a href=\"https://www.educative.io/courses/grokking-the-coding-interview\">Purchase Course</a></li>\n</ul>\n</li>\n<li>\n<p><strong>Grokking the System Design Interview</strong></p>\n<ul>\n<li><a href=\"https://github.com/ema2159/Grokking-System-Design-Interview-Quizzes\">Quizzes</a></li>\n<li><a href=\"https://www.educative.io/courses/grokking-the-system-design-interview\">Purchase Course</a></li>\n</ul>\n</li>\n<li>\n<p><strong>Elements of Programming Interviews (EPI) in Python</strong></p>\n<ul>\n<li><a href=\"https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949\">Amazon</a></li>\n</ul>\n</li>\n<li>\n<p><strong>Skienna Algorithm Design Manual</strong></p>\n<ul>\n<li><a href=\"https://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena-ebook-dp-B00B8139Z8/dp/B00B8139Z8/ref=mt_other?_encoding=UTF8&#x26;me=&#x26;qid=\">Amazon</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h1><strong>QA Questions</strong></h1>\n<p><strong>10:22:12 From Alexis Kozak to Everyone : Scenario 1</strong></p>\n<ul>\n<li>It's 7:00 pm on a Friday, and you receive a message from Dev Ops that they haven't been able to upgrade a live Production environment as planned. There were feature updates in this release that customers have planned marketing campaigns around. It also included a bug fix for one customer that’s currently having to maintain a very manual workaround. What do you do?</li>\n</ul>\n<p><strong>10:24:40 From Alexis Kozak to Everyone : Scenario 2</strong></p>\n<ul>\n<li>An application has been configured to send an email every time a patient requests a changed email. The automated email sends something to the old email, acknowledging that they changed their email, and if that isn’t right, to please contact Secular Health Network. When you come into the office one morning, you see that thousands of emails have been generated in the space of two hours. What do you do? How do you find the number of emails sent?</li>\n</ul>\n<p><strong>10:28:11 From Alexis Kozak to Everyone : Scenario 3</strong></p>\n<ul>\n<li>A customer has requested a change to SSO logic such that only users from a certain region can access SmartExam. You’ve implemented the rule on their demo environments and given them a testing plan that is simple and straightforward. During testing, you’re included in multiple email chains with different parties, as well as some one-off calls and texts messages. Resources seem scattered, but the testing happens. After receiving confirmation from the customer that testing was successful, you’re told the code is good to go into production. However, upon doing some quick checks, you discover that the rule you wrote doesn’t work and would actually prevent any user from logging into SmartExam. The fix is quite simple. What do you do?</li>\n</ul>"},{"url":"/docs/articles/event-loop/","relativePath":"docs/articles/event-loop.md","relativeDir":"docs/articles","base":"event-loop.md","name":"event-loop","frontmatter":{"title":"The Node.js Event Loop","sections":[],"seo":{"title":"","description":"The Event Loop is one of the most important aspects to understand about Node.js","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Introduction</h2>\n<p>The <strong>Event Loop</strong> is one of the most important aspects to understand about Node.js.</p>\n<p>Why is this so important? Because it explains how Node.js can be asynchronous and have non-blocking I/O, and so it explains basically the \"killer app\" of Node.js, the thing that made it this successful.</p>\n<p>The Node.js JavaScript code runs on a single thread. There is just one thing happening at a time.</p>\n<p>This is a limitation that's actually very helpful, as it simplifies a lot how you program without worrying about concurrency issues.</p>\n<p>You just need to pay attention to how you write your code and avoid anything that could block the thread, like synchronous network calls or infinite loops.</p>\n<p>In general, in most browsers there is an event loop for every browser tab, to make every process isolated and avoid a web page with infinite loops or heavy processing to block your entire browser.</p>\n<p>The environment manages multiple concurrent event loops, to handle API calls for example. Web Workers run in their own event loop as well.</p>\n<p>You mainly need to be concerned that <em>your code</em> will run on a single event loop, and write code with this thing in mind to avoid blocking it.</p>\n<h2>Blocking the event loop</h2>\n<p>Any JavaScript code that takes too long to return back control to the event loop will block the execution of any JavaScript code in the page, even block the UI thread, and the user cannot click around, scroll the page, and so on.</p>\n<p>Almost all the I/O primitives in JavaScript are non-blocking. Network requests, filesystem operations, and so on. Being blocking is the exception, and this is why JavaScript is based so much on callbacks, and more recently on promises and async/await.</p>\n<h2>The call stack</h2>\n<p>The call stack is a LIFO queue (Last In, First Out).</p>\n<p>The event loop continuously checks the <strong>call stack</strong> to see if there's any function that needs to run.</p>\n<p>While doing so, it adds any function call it finds to the call stack and executes each one in order.</p>\n<p>You know the error stack trace you might be familiar with, in the debugger or in the browser console? The browser looks up the function names in the call stack to inform you which function originates the current call:</p>\n<p><img src=\"exception-call-stack.png\" alt=\"Exception call stack\"></p>\n<h2>A simple event loop explanation</h2>\n<p>Let's pick an example:</p>\n<iframe\n  title=\"A simple event loop explanation\"\n  src=\"https://glitch.com/embed/#!/embed/nodejs-dev-0029-01?path=server.js&previewSize=20&attributionHidden=true&sidebarCollapsed=true\"\n  alt=\"nodejs-dev-0029-01 on Glitch\"\n  style=\"height: 400px; width: 100%; border: 0;\">\n</iframe>\n<!--```js\nconst bar = () => console.log('bar')\n\nconst baz = () => console.log('baz')\n\nconst foo = () => {\n  console.log('foo')\n  bar()\n  baz()\n}\n\nfoo()\n```\n\nThis code prints\n\n```txt\nfoo\nbar\nbaz\n```\n\nas expected.-->\n<p>When this code runs, first <code>foo()</code> is called. Inside <code>foo()</code> we first call <code>bar()</code>, then we call <code>baz()</code>.</p>\n<p>At this point the call stack looks like this:</p>\n<p><img src=\"call-stack-first-example.png\" alt=\"Call stack first example\"></p>\n<p>The event loop on every iteration looks if there's something in the call stack, and executes it:</p>\n<p><img src=\"execution-order-first-example.png\" alt=\"Execution order first example\"></p>\n<p>until the call stack is empty.</p>\n<h2>Queuing function execution</h2>\n<p>The above example looks normal, there's nothing special about it: JavaScript finds things to execute, runs them in order.</p>\n<p>Let's see how to defer a function until the stack is clear.</p>\n<p>The use case of <code>setTimeout(() => {}, 0)</code> is to call a function, but execute it once every other function in the code has executed.</p>\n<p>Take this example:</p>\n<iframe\n  title=\"Queuing function execution\"\n  src=\"https://glitch.com/embed/#!/embed/nodejs-dev-0029-02?path=server.js&previewSize=20&attributionHidden=true&sidebarCollapsed=true\"\n  alt=\"nodejs-dev-0029-02 on Glitch\"\n  style=\"height: 400px; width: 100%; border: 0;\">\n</iframe>\n<!--```js\nconst bar = () => console.log('bar')\n\nconst baz = () => console.log('baz')\n\nconst foo = () => {\n  console.log('foo')\n  setTimeout(bar, 0)\n  baz()\n}\n\nfoo()\n```-->\n<p>This code prints, maybe surprisingly:</p>\n<pre><code class=\"language-bash\">foo\nbaz\nbar\n</code></pre>\n<p>When this code runs, first foo() is called. Inside foo() we first call setTimeout, passing <code>bar</code> as an argument, and we instruct it to run immediately as fast as it can, passing 0 as the timer. Then we call baz().</p>\n<p>At this point the call stack looks like this:</p>\n<p><img src=\"call-stack-second-example.png\" alt=\"Call stack second example\"></p>\n<p>Here is the execution order for all the functions in our program:</p>\n<p><img src=\"execution-order-second-example.png\" alt=\"Execution order second example\"></p>\n<p>Why is this happening?</p>\n<h2>The Message Queue</h2>\n<p>When setTimeout() is called, the Browser or Node.js starts the timer. Once the timer expires, in this case immediately as we put 0 as the timeout, the callback function is put in the <strong>Message Queue</strong>.</p>\n<p>The Message Queue is also where user-initiated events like click or keyboard events, or fetch responses are queued before your code has the opportunity to react to them. Or also DOM events like <code>onLoad</code>.</p>\n<p><strong>The loop gives priority to the call stack, and it first processes everything it finds in the call stack, and once there's nothing in there, it goes to pick up things in the message queue.</strong></p>\n<p>We don't have to wait for functions like <code>setTimeout</code>, fetch or other things to do their own work, because they are provided by the browser, and they live on their own threads. For example, if you set the <code>setTimeout</code> timeout to 2 seconds, you don't have to wait 2 seconds - the wait happens elsewhere.</p>\n<h2>ES6 Job Queue</h2>\n<p>ECMAScript 2015 introduced the concept of the Job Queue, which is used by Promises (also introduced in ES6/ES2015). It's a way to execute the result of an async function as soon as possible, rather than being put at the end of the call stack.</p>\n<p>Promises that resolve before the current function ends will be executed right after the current function.</p>\n<p>I find nice the analogy of a rollercoaster ride at an amusement park: the message queue puts you at the back of the queue, behind all the other people, where you will have to wait for your turn, while the job queue is the fastpass ticket that lets you take another ride right after you finished the previous one.</p>\n<p>Example:</p>\n<iframe\n  title=\"ECMAScript 2015 Job Queue\"\n  src=\"https://glitch.com/embed/#!/embed/nodejs-dev-0029-03?path=server.js&previewSize=35&attributionHidden=true&sidebarCollapsed=true\"\n  alt=\"nodejs-dev-0029-03 on Glitch\"\n  style=\"height: 400px; width: 100%; border: 0;\">\n</iframe>\n<!--```js\nconst bar = () => console.log('bar')\n\nconst baz = () => console.log('baz')\n\nconst foo = () => {\n  console.log('foo')\n  setTimeout(bar, 0)\n  new Promise((resolve, reject) =>\n    resolve('should be right after baz, before bar')\n  ).then(resolve => console.log(resolve))\n  baz()\n}\n\nfoo()\n```\n\nThis prints\n\n```txt\nfoo\nbaz\nshould be right after baz, before bar\nbar\n```-->\n<p>That's a big difference between Promises (and Async/await, which is built on promises) and plain old asynchronous functions through <code>setTimeout()</code> or other platform APIs.</p>"},{"url":"/docs/articles/basic-web-dev/","relativePath":"docs/articles/basic-web-dev.md","relativeDir":"docs/articles","base":"basic-web-dev.md","name":"basic-web-dev","frontmatter":{"title":"Web Dev Review","sections":[],"seo":{"title":"","description":"Review-Of-Previous-Concepts","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<hr>\n<h2>description: Review</h2>\n<h1>Review-Of-Previous-Concepts</h1>\n<h3>Review of Concepts</h3>\n<h3>Running JS Locally Concepts</h3>\n<ul>\n<li>\n<p>Match the commands <code>ls</code>, <code>cd</code>, <code>pwd</code> to their descriptions</p>\n<ul>\n<li><code>ls</code> lists contents of current directory</li>\n<li>\n<p><code>cd</code> changes current directory</p>\n<ul>\n<li><code>cd ..</code> takes you up one level</li>\n<li><code>cd</code> alone takes you back home</li>\n</ul>\n</li>\n<li><code>pwd</code> returns current directory</li>\n</ul>\n</li>\n<li>Given a folder structure diagram, a list of 'cd (path)' commands and target files, match the paths to the target files.</li>\n<li>Use VSCode to create a folder. Within the folder create a .js file containing <code>console.log('hello new world');</code> and save it.</li>\n<li>Use node to execute a JavaScript file in the terminal</li>\n</ul>\n<h3>Plain Old JS Object Lesson Concepts</h3>\n<ul>\n<li>\n<p>Label variables as either Primitive vs. Reference</p>\n<ul>\n<li>\n<p>primitives: strings, booleans, numbers, null and undefined</p>\n<ul>\n<li>primitives are immutable</li>\n</ul>\n</li>\n<li>\n<p>refereces: objects (including arrays)</p>\n<ul>\n<li>references are mutable</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Identify when to use <code>.</code> vs <code>[]</code> when accessing values of an object</p>\n<ul>\n<li>\n<p>dot syntax <code>object.key</code></p>\n<ul>\n<li>easier to read</li>\n<li>easier to write</li>\n<li>cannot use variables as keys</li>\n<li>keys cannot begin with a number</li>\n</ul>\n</li>\n<li>\n<p>bracket notation <code>object[\"key]</code></p>\n<ul>\n<li>allows variables as keys</li>\n<li>strings that start with numbers can be use as keys</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Write an object literal with a variable key using interpolation</p>\n<ul>\n<li>\n<p>put it in brackets to access the value of the variable, rather than just make the value that string</p>\n<pre><code class=\"language-javascript\">let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Use the <code>obj[key] !== undefined</code> pattern to check if a given variable that contains a key exists in an object</p>\n<ul>\n<li>can also use <code>(key in object)</code> syntax interchangeably (returns a boolean)</li>\n</ul>\n</li>\n<li>\n<p>Utilize Object.keys and Object.values in a function</p>\n<ul>\n<li><code>Object.keys(obj)</code> returns an array of all the keys in <code>obj</code></li>\n<li><code>Object.values(obj)</code> returns an array of the values in <code>obj</code></li>\n</ul>\n</li>\n<li>\n<p>Iterate through an object using a <code>for in</code> loop</p>\n<pre><code class=\"language-javascript\">let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};\n</code></pre>\n</li>\n<li>\n<p>Define a function that utilizes <code>...rest</code> syntax to accept an arbitrary number of arguments</p>\n<ul>\n<li><code>...rest</code> syntax will store all additional arguments in an array</li>\n<li>\n<p>array will be empty if there are no additional arguments</p>\n<pre><code class=\"language-javascript\">let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>\n<p>Use <code>...spread</code> syntax for Object literals and Array literals</p>\n<pre><code class=\"language-javascript\">let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]\n</code></pre>\n</li>\n<li>\n<p>Destructure an array to reference specific elements</p>\n<p>```javascript</p>\n<p>let array = [35,9];</p>\n<p>let [firstEl, secondEl] = array;</p>\n<p>console.log(firstEl); // => 35</p>\n<p>console.log(secondEl); // => 9</p>\n</li>\n</ul>\n<p>// can also destructure using ... syntax let array = [35,9,14]; let [head, ...tail] = array; console.log(head); // => 35 console.log(tail); // => [9, 14]</p>\n<pre><code class=\"language-javascript\">- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```javascript\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash\n</code></pre>\n<ul>\n<li>\n<p>Write a function that accepts a array as an argument and returns an object representing the count of each character in the array</p>\n<pre><code class=\"language-javascript\">//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}\n</code></pre>\n</li>\n</ul>\n<h3>Callbacks Lesson Concepts</h3>\n<ul>\n<li>\n<p>Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.</p>\n<ul>\n<li>they can be stored in variables, passed as arguments to other functions, and serve as return value for a function</li>\n<li>supports same basic operations as other types (strings, bools, numbers)</li>\n<li>higher-order functions take functions as arguments or return functions as values</li>\n</ul>\n</li>\n<li>\n<p>Given a code snippet containing an anonymous callback, a named callback, and multiple <code>console.log</code>s, predict what will be printed</p>\n<ul>\n<li>what is this referring to?</li>\n</ul>\n</li>\n<li>Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.</li>\n</ul>\n<pre><code class=\"language-javascript\">let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n</code></pre>\n<p>// shorter version let greaterCB = function(val, callback1, callback2) { return Math.max(callback1(val), callback2(val)); } // even shorter, cause why not let greaterCB = (val, cb1, cb2) => Math.max(cb1(val), cb2(val));</p>\n<pre><code class=\"language-javascript\">- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```javascript\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i &#x3C; array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];\n</code></pre>\n<ul>\n<li>\n<p>Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of <code>Array#filter</code>.</p>\n<pre><code class=\"language-javascript\">let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};\n</code></pre>\n</li>\n<li>\n<p>Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of <code>Array#every</code>.</p>\n<pre><code class=\"language-javascript\">let myEvery = function (array, callback) {\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n</code></pre>\n</li>\n</ul>\n<h3>Scope Lesson Concepts</h3>\n<ul>\n<li>\n<p>Identify the difference between <code>const</code>, <code>let</code>, and <code>var</code> declarations</p>\n<ul>\n<li><code>const</code> - cannot reassign variable, scoped to block</li>\n<li><code>let</code> - can reassign variable, scoped to block</li>\n<li><code>var</code> - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!</li>\n<li>a variable will always evaluate to the value it contains regardless of how it was declared</li>\n</ul>\n</li>\n<li>\n<p>Explain the difference between <code>const</code>, <code>let</code>, and <code>var</code> declarations</p>\n<ul>\n<li>\n<p><code>var</code> is function scoped—so if you declare it anywhere in a function, the declaration (but not assignment) is \"hoisted\"</p>\n<ul>\n<li>so it will exist in memory as \"undefined\" which is bad and unpredictable</li>\n</ul>\n</li>\n<li><code>var</code> will also allow you to redeclare a variable, while <code>let</code> or <code>const</code> will raise a syntax error. you shouldn't be able to do that!</li>\n<li><code>const</code> won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object</li>\n<li>block-scoped variables allow new variables with the same name in new scopes</li>\n<li>block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of <code>undefined</code> like <code>var</code> does, so it throws a specific reference error if you try to access the value before it has been declared</li>\n<li>\n<p>if you do not use <code>var</code> or <code>let</code> or <code>const</code> when initializing, it will be declared as global—THIS IS BAD</p>\n<ul>\n<li>if you assign a value without a declaration, it exists in the global scope (so then it would be accessible by all outer scopes, so bad). however, there's no hoisting, so it doesn't exist in the scope until after the line is run</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining</p>\n<ul>\n<li>scope of a program means the set of variables that are available for use within the program</li>\n<li>\n<p>global scope is represented by the <code>window</code> object in the browser and the <code>global</code> object in Node.js</p>\n<ul>\n<li>global variables are available everywhere, and so increase the risk of name collisions</li>\n</ul>\n</li>\n<li>\n<p>local scope is the set of variables available for use within the function</p>\n<ul>\n<li>when we enter a function, we enter a new scope</li>\n<li>includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined (hmm about that last one)</li>\n</ul>\n</li>\n<li>for blocks (denoted by curly braces <code>{}</code>, as in conditionals or <code>for</code> loops), variables can be block scoped</li>\n<li>\n<p>inner scope does not have access to variables in the outer scope</p>\n<ul>\n<li>scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found</li>\n<li>so an inner scope can access outer scope variables</li>\n<li>but an outer scope can never access inner scope variables</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Define an arrow function</p>\n<p>```javascript</p>\n<p>let arrowFunction = (param1, param2) => {</p>\n<p>let sum = param1 + param2;</p>\n<p>return sum;</p>\n<p>}</p>\n</li>\n</ul>\n<p>// with 1 param you can remove parens around parameters let arrowFunction = param => { param += 1; return param; }</p>\n<p>// if your return statement is one line, you can use implied return let arrowFunction = param => param + 1;</p>\n<p>// you don't have to assign to variable, can be anonymous // if you never need to use it again param => param + 1;</p>\n<p>```</p>\n<ul>\n<li>\n<p>Given an arrow function, deduce the value of <code>this</code> without executing the code</p>\n<ul>\n<li>arrow functions are automatically bound to the context they were declared in</li>\n<li>unlike regular function which use the context they are invoked in (unless they have been bound using <code>Function#bind</code>)</li>\n<li>if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context</li>\n<li>\n<p>so you can't use an arrow function to define a method directly</p>\n<p>```javascript</p>\n<p>let obj = {</p>\n<p>name: \"my object\",</p>\n<p>unboundFunc: function () {</p>\n<p>return this.name;</p>\n<p>// this function will be able to be called on different objects</p>\n<p>},</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<p>boundToGlobal: () => { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },</p>\n<pre><code class=\"language-javascript\">makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined\n</code></pre>\n<p>}</p>\n<pre><code class=\"language-javascript\">- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n\n```javascript\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());\n</code></pre>\n<ul>\n<li>\n<p>Define a method that references <code>this</code> on an object literal</p>\n<ul>\n<li>\n<p>when we use <code>this</code> in a method it refers to the object that the method is invoked on</p>\n<ul>\n<li>it will let you access other pieces of information from within that object, or even other methods</li>\n<li>method style invocation - <code>object.method(args)</code> (e.g. built in examples like <code>Array#push</code>, or <code>String#toUpperCase</code>)</li>\n</ul>\n</li>\n<li>context is set every time we invoke a function</li>\n<li>function style invocation sets the context to the global object no matter what</li>\n<li>being inside an object does not make the context that object! you still have to use method-style invocation</li>\n</ul>\n</li>\n<li>\n<p>Utilize the built in <code>Function#bind</code> on a callback to maintain the context of this</p>\n<ul>\n<li>when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function</li>\n</ul>\n<pre><code class=\"language-text\">let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"\n</code></pre>\n<p>``</p>\n</li>\n</ul>\n<h3></h3>\n<h3></h3>\n<pre><code class=\"language-javascript\">   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n</code></pre>\n<ul>\n<li>\n<p>CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!</p>\n<ul>\n<li>could throw an error if it expects this to have some other method or whatever that doesn't exist</li>\n<li>you could also overwrite values or assign values to exist in a space where they should not exist</li>\n</ul>\n</li>\n<li>\n<p>if you call a function as a callback, it will set <code>this</code> to be the outer function itself, even if the function you were calling is a method that was called on a particular object</p>\n<pre><code class=\"language-text\">let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function\n</code></pre>\n</li>\n</ul>\n<p>we can use strict mode with <code>\"use strict\";</code> this will prevent you from accessing the global object with <code>this</code> in functions, so if you try to call <code>this</code> in the global context and change a value, you will get a type error, and the things you try to access will be undefined</p>\n<h3></h3>\n<p>let sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function</p>\n<p>// we can use the built in Function.bind to ensure our context, our <code>this</code>, // is the cat object let boundCat = sayMeow.bind(cat);</p>\n<p>boundCat(); // prints \"meow\"</p>\n<pre><code class=\"language-text\">   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n</code></pre>\n<ul>\n<li>\n<p>CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!</p>\n<ul>\n<li>could throw an error if it expects this to have some other method or whatever that doesn't exist</li>\n<li>you could also overwrite values or assign values to exist in a space where they should not exist</li>\n</ul>\n</li>\n<li>\n<p>if you call a function as a callback, it will set <code>this</code> to be the outer function itself, even if the function you were calling is a method that was called on a particular object</p>\n<p>```javascript</p>\n<p>let cat = {</p>\n<p>purr: function () {</p>\n<p>console.log(\"meow\");</p>\n<p>},</p>\n<p>purrMore: function () {</p>\n<p>this.purr();</p>\n<p>},</p>\n<p>};</p>\n</li>\n</ul>\n<p>global.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function</p>\n<p>```</p>\n<ul>\n<li>we can use strict mode with <code>\"use strict\";</code> this will prevent you from accessing the global object with <code>this</code> in functions, so if you try to call <code>this</code> in the global context and change a value, you will get a type error, and the things you try to access will be undefined</li>\n</ul>\n<h3>POJOs</h3>\n<h4>1. Label variables as either Primitive vs. Reference</h4>\n<p>Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.</p>\n<ul>\n<li>Boolean - Primitive</li>\n<li>Null - Primitive</li>\n<li>Undefined - Primitive</li>\n<li>Number - Primitive</li>\n<li>String - Primitive</li>\n<li>Array - Reference</li>\n<li>Object - Reference</li>\n<li>Function - Reference</li>\n</ul>\n<h4>2. Identify when to use . vs [] when accessing values of an object</h4>\n<pre><code class=\"language-javascript\">let obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);\n</code></pre>\n<h4>3. Write an object literal with a variable key using interpolation</h4>\n<pre><code class=\"language-javascript\">let keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);\n</code></pre>\n<h4>4. Use the obj[key] !== undefined pattern to check if a given variable that contains a key exists in an object</h4>\n<pre><code class=\"language-javascript\">function doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false\n</code></pre>\n<h4>5. Utilize Object.keys and Object.values in a function</h4>\n<pre><code class=\"language-javascript\">function printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));\n</code></pre>\n<h4>6. Iterate through an object using a for in loop</h4>\n<pre><code class=\"language-javascript\">let player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));\n</code></pre>\n<h4>7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments</h4>\n<pre><code class=\"language-javascript\">function restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0\n</code></pre>\n<h4>8. Use ...spread syntax for Object literals and Array literals</h4>\n<pre><code class=\"language-javascript\">let numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);\n</code></pre>\n<h4>9. Destructure an array to reference specific elements</h4>\n<pre><code class=\"language-javascript\">let arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);\n</code></pre>\n<h4>10. Destructure an object to reference specific values</h4>\n<pre><code class=\"language-javascript\">let me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);\n</code></pre>\n<h4>11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array</h4>\n<pre><code class=\"language-javascript\">function charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));\n</code></pre>\n<h3></h3>\n<h3>Review of Concepts</h3>\n<h4>1. Identify the difference between const, let, and var declarations</h4>\n<h4>2. Explain the difference between const, let, and var declarations</h4>\n<pre><code class=\"language-javascript\">var a = 'a';\n</code></pre>\n<ul>\n<li><code>var</code> is the historical keyword used for variable declaration.</li>\n<li><code>var</code> declares variables in function scope, or global scope if not inside a function.</li>\n<li>We consider <code>var</code> to be <em>deprecated</em> and it is never used in this course.</li>\n</ul>\n<pre><code class=\"language-javascript\">let b = 'b';\n</code></pre>\n<ul>\n<li><code>let</code> is the keyword we use most often for variable declaration.</li>\n<li><code>let</code> declares variables in block scope.</li>\n<li>variables declared with <code>let</code> are re-assignable.</li>\n</ul>\n<pre><code class=\"language-javascript\">const c = 'c';\n</code></pre>\n<ul>\n<li><code>const</code> is a specialized form of <code>let</code> that can only be used to <strong>initialize</strong> a variable.</li>\n<li>Except when it is declared, you cannot assign to a <code>const</code> variable.</li>\n<li><code>const</code> scopes variables the same way that <code>let</code> does.</li>\n</ul>\n<h4>3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining</h4>\n<p>Consider this <code>run</code> function, inside which <code>foo</code> and <code>bar</code> have <code>function scope</code>. <code>i</code> and <code>baz</code> are scoped to the block expression.</p>\n<pre><code class=\"language-javascript\">// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();\n</code></pre>\n<p>Notice that referencing <code>baz</code> from outside it's block results in JavaScript throwing a ReferenceError.</p>\n<p>Consider this <code>run</code> function, inside of which <code>foo</code> has <code>function scope</code>.</p>\n<pre><code class=\"language-javascript\">function run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();\n</code></pre>\n<p>Consider this <code>func1</code> function and it's nested scopes.</p>\n<pre><code class=\"language-javascript\">// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}\n</code></pre>\n<h4>6. Implement a closure and explain how the closure effects scope</h4>\n<pre><code class=\"language-javascript\">const adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;\n</code></pre>\n<h4>4. Define an arrow function</h4>\n<pre><code class=\"language-javascript\">const returnValue = (val) => val;\n</code></pre>\n<p>This simple construct will create a function that accepts <code>val</code> as a parameter, and returns <code>val</code> immediately. We do not need to type <code>return val</code>, because this is a single-line function.</p>\n<p>Identically, we could write</p>\n<pre><code class=\"language-javascript\">const returnValue = (val) => {\n    return val;\n};\n</code></pre>\n<h4>5. Given an arrow function, deduce the value of <code>this</code> without executing the code</h4>\n<pre><code class=\"language-javascript\">function fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);\n</code></pre>\n<p>If we use a <em>function declaration</em> style function, the <code>this</code> variable is set to the <code>global</code> object (i.e. <code>Object [global]</code> in Node.JS and <code>Window</code> in your browser).</p>\n<pre><code class=\"language-javascript\">const adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);\n</code></pre>\n<p>In this example, we use a <em>fat arrow</em> style function. Note that when we declare a funciton like this <code>this</code> becomes</p>\n<h4>7. Define a method that references this on an object literal</h4>\n<pre><code class=\"language-javascript\">const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());\n</code></pre>\n<h4>8. Utilize the built in Function#bind on a callback to maintain the context of <code>this</code></h4>\n<pre><code class=\"language-javascript\">const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms\n</code></pre>\n<h4>9. Given a code snippet, identify what <code>this</code> refers to</h4>\n<pre><code class=\"language-javascript\">function Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');\n</code></pre>"},{"url":"/docs/articles/fs-module/","relativePath":"docs/articles/fs-module.md","relativeDir":"docs/articles","base":"fs-module.md","name":"fs-module","frontmatter":{"title":"Fs-Module","sections":[],"seo":{"title":"","description":"Fs-Module","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<p>The <code>fs</code> module provides a lot of very useful functionality to access and interact with the file system.</p>\n<p>There is no need to install it. Being part of the Node.js core, it can be used by simply requiring it:</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n</code></pre>\n<p>Once you do so, you have access to all its methods, which include:</p>\n<ul>\n<li><code>fs.access()</code>: check if the file exists and Node.js can access it with its permissions</li>\n<li><code>fs.appendFile()</code>: append data to a file. If the file does not exist, it's created</li>\n<li><code>fs.chmod()</code>: change the permissions of a file specified by the filename passed. Related: <code>fs.lchmod()</code>, <code>fs.fchmod()</code></li>\n<li><code>fs.chown()</code>: change the owner and group of a file specified by the filename passed. Related: <code>fs.fchown()</code>, <code>fs.lchown()</code></li>\n<li><code>fs.close()</code>: close a file descriptor</li>\n<li><code>fs.copyFile()</code>: copies a file</li>\n<li><code>fs.createReadStream()</code>: create a readable file stream</li>\n<li><code>fs.createWriteStream()</code>: create a writable file stream</li>\n<li><code>fs.link()</code>: create a new hard link to a file</li>\n<li><code>fs.mkdir()</code>: create a new folder</li>\n<li><code>fs.mkdtemp()</code>: create a temporary directory</li>\n<li><code>fs.open()</code>: set the file mode</li>\n<li><code>fs.readdir()</code>: read the contents of a directory</li>\n<li><code>fs.readFile()</code>: read the content of a file. Related: <code>fs.read()</code></li>\n<li><code>fs.readlink()</code>: read the value of a symbolic link</li>\n<li><code>fs.realpath()</code>: resolve relative file path pointers (<code>.</code>, <code>..</code>) to the full path</li>\n<li><code>fs.rename()</code>: rename a file or folder</li>\n<li><code>fs.rmdir()</code>: remove a folder</li>\n<li><code>fs.stat()</code>: returns the status of the file identified by the filename passed. Related: <code>fs.fstat()</code>, <code>fs.lstat()</code></li>\n<li><code>fs.symlink()</code>: create a new symbolic link to a file</li>\n<li><code>fs.truncate()</code>: truncate to the specified length the file identified by the filename passed. Related: <code>fs.ftruncate()</code></li>\n<li><code>fs.unlink()</code>: remove a file or a symbolic link</li>\n<li><code>fs.unwatchFile()</code>: stop watching for changes on a file</li>\n<li><code>fs.utimes()</code>: change the timestamp of the file identified by the filename passed. Related: <code>fs.futimes()</code></li>\n<li><code>fs.watchFile()</code>: start watching for changes on a file. Related: <code>fs.watch()</code></li>\n<li><code>fs.writeFile()</code>: write data to a file. Related: <code>fs.write()</code></li>\n</ul>\n<p>One peculiar thing about the <code>fs</code> module is that all the methods are asynchronous by default, but they can also work synchronously by appending <code>Sync</code>.</p>\n<p>For example:</p>\n<ul>\n<li><code>fs.rename()</code></li>\n<li><code>fs.renameSync()</code></li>\n<li><code>fs.write()</code></li>\n<li><code>fs.writeSync()</code></li>\n</ul>\n<p>This makes a huge difference in your application flow.</p>\n<blockquote>\n<p>Node.js 10 includes <a href=\"https://nodejs.org/api/fs.html#fs_fs_promises_api\">experimental support</a> for a promise based API</p>\n</blockquote>\n<p>For example let's examine the <code>fs.rename()</code> method. The asynchronous API is used with a callback:</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n\nfs.rename('before.json', 'after.json', (err) => {\n    if (err) {\n        return console.error(err);\n    }\n\n    //done\n});\n</code></pre>\n<p>A synchronous API can be used like this, with a try/catch block to handle errors:</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n\ntry {\n    fs.renameSync('before.json', 'after.json');\n    //done\n} catch (err) {\n    console.error(err);\n}\n</code></pre>\n<p>The key difference here is that the execution of your script will block in the second example, until the file operation succeeded.</p>"},{"url":"/docs/articles/","relativePath":"docs/articles/index.md","relativeDir":"docs/articles","base":"index.md","name":"index","frontmatter":{"title":"Articles","weight":2,"excerpt":"resources","seo":{"title":"","description":"This section is similar to a blog but is more technical in nature and time invariant with regard to content.","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<div id=\"search\"></div>\n<div id=\"search\" />\n<p>|<div id=\"search\"></div></p>\n<div id=\"search\" />\n<div id=\"search\"></div>\n<div id=\"search\" />\n<p><span id=\"search\"></span></p>"},{"url":"/docs/articles/http/","relativePath":"docs/articles/http.md","relativeDir":"docs/articles","base":"http.md","name":"http","frontmatter":{"title":"The HTTP Protocol","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h2>The HTTP Protocol\n\n</h2>\n<ul>\n<li>Requires: a connection between client and server</li>\n<li>Stateless: no login process, each request is independent</li>\n<li>Simple format: request header, blank line, possible payload</li>\n<li>Symmetrical: allows data to be sent and recieved</li>\n<li>Very easy to implement but scales very well</li>\n</ul>\n<h2>Example HTTP Request</h2>\n<p>Note lines folded for display.</p>\n<p>What do each of these headers mean? Which are required? Many are defined in the <a href=\"ftp://ftp.isi.edu/in-notes/rfc2616.txt\">HTTP standard</a> but others can be defined via the HTTP extension framework.</p>\n<h2>Example HTTP Response</h2>\n<h2>Example HTTP POST Request</h2>\n<p>Note lines folded for display.</p>\n<p>This is a POST request, note how the data is encoded in the request body.</p>\n<h2>Example HTTP GET Request</h2>\n<p>Note lines folded for display.</p>\n<p>This is the same form submitted via a GET request, here the data is encoded in request URL. Note also the If-Modified-Since header in this request, sent because my browser has just asked for the same resource.</p>\n<h2>HTTP Redirect</h2>\n<p>Alternately</p>\n<p>The HTTP redirect is a server response that can be used to indicate that a resource has moved to a new location. An alternate is to include the above meta tag in a page header to force a redirect from the current page.</p>\n<h2>HTTP Verbs</h2>\n<ul>\n<li>GET - get a resource, <em>Idempotent</em></li>\n<li>POST - send some data to a resource</li>\n<li>HEAD - get headers for a resource</li>\n<li>PUT - create a new resource</li>\n<li>DELETE - delete a resource</li>\n</ul>\n<h2>Common HTTP Response Status Codes</h2>\n<p>Some notable response codes:</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success\">200 OK</a> - Request succeeded and everything went well</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#3xx_Redirection\">301 Moved Permanently</a> - Requested resource has moved and all future requests should be made to new location</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error\">403 Forbidden</a> - Response refused by server (even if request is valid)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error\">404 Not Found</a> - Server could not find requested resource (though it may be available in the future)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_Error\">500 Internal Server Error</a> - Generic error message response when server encountered an error</li>\n</ul>\n<p>See also: <a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes\">full list of HTTP status codes</a></p>\n<h2>Resources</h2>\n<ul>\n<li>Use <a href=\"https://addons.mozilla.org/en-US/firefox/addon/3829\">Live HTTP Headers</a> in Firefox to view headers of requests that you make. Also available as a <a href=\"https://chrome.google.com/webstore/detail/live-http-headers/iaiioopjkcekapmldfgbebdclcnpgnlo\">Chrome Extension</a>.</li>\n<li>Similarly, in Google Chrome, the <a href=\"http://www.chromium.org/devtools/google-chrome-developer-tools-tutorial#resources\">Resources panel</a> in the Developer tools allows you to view the request headers and content for each request that was made when you're looking at a page.</li>\n<li>Wikipedia's <a href=\"http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\">entry on HTTP</a> gives a good overview of the protocol.</li>\n</ul>"},{"url":"/docs/articles/install/","relativePath":"docs/articles/install.md","relativeDir":"docs/articles","base":"install.md","name":"install","frontmatter":{"title":"Install","excerpt":"Web-Dev-Hubis a Unibit theme created for project documentations. You can use it for your project.","seo":{"title":"Install","description":"This is the Install page","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Install","keyName":"property"},{"name":"og:description","value":"This is the Install page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Install"},{"name":"twitter:description","value":"This is the Install page"}]},"template":"docs"},"html":"<p>Node.js can be installed in different ways. This post highlights the most common and convenient ones.</p>\n<p>Official packages for all the major platforms are available at <a href=\"https://nodejs.org/en/download/\">https://nodejs.org/en/download/</a>.</p>\n<p>One very convenient way to install Node.js is through a package manager. In this case, every operating system has its own.</p>\n<p>On macOS, <a href=\"https://brew.sh/\">Homebrew</a> is the de-facto standard, and - once installed - allows you to install Node.js very easily, by running this command in the CLI:</p>\n<pre><code class=\"language-bash\">brew install node\n</code></pre>\n<p>Other package managers for Linux and Windows are listed in <a href=\"https://nodejs.org/en/download/package-manager/\">https://nodejs.org/en/download/package-manager/</a></p>\n<p><code>nvm</code> is a popular way to run Node.js. It allows you to easily switch the Node.js version, and install new versions to try and easily rollback if something breaks, for example.</p>\n<p>It is also very useful to test your code with old Node.js versions.</p>\n<p>See <a href=\"https://github.com/creationix/nvm\">https://github.com/creationix/nvm</a> for more information about this option.</p>\n<p>My suggestion is to use the official installer if you are just starting out and you don't use Homebrew already, otherwise, Homebrew is my favorite solution.</p>\n<p>In any case, when Node.js is installed you'll have access to the <code>node</code> executable program in the command line.</p>"},{"url":"/docs/articles/node-cli-args/","relativePath":"docs/articles/node-cli-args.md","relativeDir":"docs/articles","base":"node-cli-args.md","name":"node-cli-args","frontmatter":{"title":"where-is-npm-pack","weight":1,"excerpt":"How to find out where npm installs the packages","seo":{"title":"npm packages","description":"When you install a package using npm you can perform 2 types of installation:\na local install\na global install\n\nBy default, when you type an npm install command, like:\nthe package is installed in the current file tree, under the node_modules subfolder.\n","robots":[],"extra":[{"name":"og:description","value":"When you install a package using npm you can perform 2 types of installation:\na local install\na global install\n\nBy default, when you type an npm install command, like:\nthe package is installed in the current file tree, under the node_modules subfolder.\n","keyName":"property","relativeUrl":false}],"type":"stackbit_page_meta"},"template":"docs"},"html":"<p>When you install a package using npm you can perform 2 types of installation:</p>\n<ul>\n<li>a local install</li>\n<li>a global install</li>\n</ul>\n<p>By default, when you type an npm install command, like:</p>\n<p>the package is installed in the current file tree, under the node_modules subfolder.</p>\n<p>As this happens, npm also adds the lodash entry in the dependencies property of the package.json file present in the current folder.</p>\n<p>A global installation is performed using the -g flag:</p>\n<p>When this happens, npm won't install the package under the local folder, but instead, it will use a global location.</p>\n<p>Where, exactly?</p>\n<p>The npm root -g command will tell you where that exact location is on your machine.</p>\n<p>On macOS or Linux this location could be /usr/local/lib/node<em>modules. On Windows it could be C:\\Users\\YOU\\AppData\\Roaming\\npm\\node</em>modules</p>\n<p>If you use nvm to manage Node.js versions, however, that location would differ.</p>\n<p>I for example use nvm and my packages location was shown as /Users/joe/.nvm/versions/node/v8.9.0/lib/node_modules.</p>"},{"url":"/docs/articles/how-the-web-works/","relativePath":"docs/articles/how-the-web-works.md","relativeDir":"docs/articles","base":"how-the-web-works.md","name":"how-the-web-works","frontmatter":{"title":"How The Web Works","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h2>What is the World Wide Web?\n\n</h2>\n<p>Perhaps the first thing to establish in our discussion of the web is what exactly it is. This chapter will look in brief overview at the core technologies that go together to make the World Wide Web.</p>\n<p>We can start by differentiating the Internet and the World Wide Web. These are often confused because the Web is the main use that most people have for the Internet and a common web browser is called \"Internet Explorer\". However, we can properly distinguish between them. The Internet is a collection of inter-connected computers using the TCP/IP protocol to exchange information. The World Wide Web is a particular use of the Internet to exchange HTML web pages (and other documents) using the Hypertext Transfer Protocol (HTTP).</p>\n<p>Let's look briefly at the four basic ingredients of the Web:</p>\n<ul>\n<li>TCP/IP - is a low level message protocol that is used to transfer messages between computers on the Internet.</li>\n<li>HTTP - is used by a Web Client to make a request to a Web Server and for the server to return the response.</li>\n<li>URL - is a way of writing down the address of something on the Web so that a browser can work out where to get it from.</li>\n<li>HTML - is a language for writing web pages containing text, images and other content.</li>\n</ul>\n<p>Together, these four technologies allow a web client - the web browser on your computer - to fetch pages from a web server anywhere in the world that might contain links to other documents and so on. It's the links between documents that make this a <em>Web</em> and the Internet that allows it to be the <em>World Wide Web</em>.</p>\n<p>Let's look at each of these technologies in a little more detail; although we'll explore most of them a lot more throughout the rest of this book.</p>\n<h2>TCP/IP and DNS</h2>\n<p>TCP/IP, the Transmission Control Protocol/Internet Protocol, is the standard way of exchanging messages on the Internet - in fact it effectively defines what the Internet is: a network of computers communicating via TCP/IP. For our purposes, there's no need to have a deep understanding of the low level details of TCP/IP, though many of you will learn more about it if you study any networking topics. However there are a few higher level things that touch on how we use the Internet in the context of the World Wide Web.</p>\n<p>A <em>Protocol</em> in this sense is a formal standard for how two machines will talk to each other over a communications channel. It describes what messages are allowed and what they mean and how data is transferred over the network. Later, we'll look at HTTP which is a higher level protocol for web requests. TCP/IP deals with the low level exchange of data and doesn't really care what the content of that data is.</p>\n<p>The Internet is a collection of computer networks joined by physical network channels. Within an organisation, there may be a physical network based on the Ethernet standard (wired or wireless) which effectively connects all computers on the network to each other. Organisations connect to each other via DSL or cable connections. These <em>inter</em>-connected <em>net</em>works make up the Internet. The role of TCP/IP is to allow a computer within one organisation (your laptop) to establish a connection to a computer in another (a web server). Importantly, this connection is a <em>point-to-point</em> connection - like a private channel between the two computers, even though the data is carried by this shared network of networks.</p>\n<p>TCP/IP is a <em>packet oriented</em> protocol. To send a message, it is broken up into small chunks (packets) which are each addressed and sent over the network. The receiving computer intercepts these packets, notices that they are addressed to them, and re-assembles the original message. Packets can arrive out of order (or not at all) and TCP/IP defines what the two communicating computers should do in this case.</p>\n<p>Each computer on the network is assigned a unique <em>IP address</em> which is a 32 bit number usually expressed as four 8 bit digits separated by dots. For example 192.168.1.2 or 137.111.158.22. These numbers are used as the addresses of the packets sent around the Internet. Within an organisation, all computers will share the first part of their address; for example, all Macquarie University computers will have addresses starting with 137.111. This means that any packet sent from within Macquarie to an address in the range 137.111.x.x will find it's destination somewhere inside the organisation. However, if we send a packet to 143.119.160.16 (the NSW Government website) the network protocols need to know that this packet should be forwarded to the NSW Government network before it can be delivered. We can pretend that this all happens by magic (this isn't a networking course) and rest assured that a clever <em>network routing</em> algorithm will get the packets to where they need to go. As long as we know the IP address of the destination computer, we can establish a point-to-point channel and send data back and forth.</p>\n<p>Within your home you might have your own private network, often established by a wireless router that connects to your ADSL or cable service. While this router will have a proper IP address, the network it establishes in your home is a <em>private network</em> and will use one of two address ranges: 192.168.x.x or 10.10.x.x. Both of these are reserved for private use, so that my laptop and your printer might have the same IP address of 192.168.100.13. A trick called Network Address Translation (NAT) carried out by your router allows each of these devices to connect to the Internet through the router, even though they don't have a full IP address. Again, we don't need to worry about the details but sometimes it's useful to know how to communicate directly with devices on your own network, in which case you might start finding out about these private IP addresses.</p>\n<p>A significant issue with the success and ubiquity of the Internet is that we might run out of unique addresses. Since an IP address is a 32 bit number, that means there are only 4,294,967,296 unique addresses. If every computer, mobile phone, printer and electricity meter is to be connected to the Internet, the it's clear that more addresses will be needed. There are two responses to this. The first is that many of these devices share a single IP address (using NAT) which multiplies the number available significantly. THe second is a new standard called IPv6 (rather than IPv4 which I've described here) where addresses are 128 bits long. Most modern devices are able to use IPv6 addressing so the crisis is unlikely to hit us catastrophically.</p>\n<p>IP addresses give a unique identifier for each device but they aren't very easy to remember. We're used to giving the names of web-sites via names like www.nsw.gov.au or sales.example.com. These names are translated into numerical IP addresses via the Domain Name System (DNS) which works using a clever hierarchical algorithm. For example, to work out what sales.example.com means our local DNS server would look at the last part of the address and forward the query to a server that it knows is authoritative for all addresses ending in .com. The .com server may not know which IP address corresponds to sales.example.com so it sends the query on to the DNS server for example.com which will respond with the answer. As the result is passed back to the original DNS server, it is cached (remembered) so that it can be returned more quickly the next time it is requested.</p>\n<p>DNS allows an organisation to set up whatever names it needs and link those names to its servers. It's common to have the main web server called www.example.com but the same server could also be referred to as example.com, sales.example.com or test.example.com. We'll see later how this arrangement can be used to provide a lot of flexibility when setting up web servers.</p>\n<h2>HTTP</h2>\n<p>In 1991 Tim Berners-Lee invented the World Wide Web. He was building on the existing technology of the Internet that allowed computers to exchange information around the world. His invention consisted essentially of three things: the Hypertext Transfer Protocol (HTTP), the Universal Resource Locator (URL) and the Hypertext Markup Language (HTML). HTTP is the language that a web client (your browser) talks to a web server to ask for a page and get the response back. It's a protocol, just like TCP/IP, but it's a much higher level protocol and it's one that we need to understand very well as web programmers.</p>\n<p>HTTP requires that we first establish a point-to-point connection between a client (who is sending a request) and a server (who will fulfil the request if possible). This connection is usually via TCP/IP over the Internet but could also be over any other communication medium such as <a href=\"http://code.google.com/p/bt-http-server/\">bluetooth</a>. Once the connection is established, the conversation can begin.</p>\n<p>One of the important features of HTTP is that it is a simple, text based protocol. The request and response consist of a number of lines of text in a well defined format. Here is an example request that might be sent to a server:</p>\n<p>The first word in the request is always one of the defined <em>HTTP verbs</em> (most frequently GET, HEAD or POST, we'll explore these in more detail later). A GET request asks the server to return the given resource, in this case '/storefront.html' which is probably an HTML file stored somewhere on the server. The last part of the first line (HTTP/1.1) defines the version of the standard that we are using; there was a version 1.0 but most modern browsers will use 1.1. The remaining lines of the request include other <em>headers</em> that qualify the request in some way. The <em>Host</em> header is required and denotes the server that the request is being sent to. The Accept header defines what kinds of document we'd like in return; in this case, any kind of text document is ok. The request ends with a blank line, which is how the server knows that all headers have been received.</p>\n<p>The request is received and processed by the server and a response is sent back to the client containing the web page that was asked for. Again the format of the response is easy to understand:</p>\n<p>The first word of the response must be HTTP/1.1, the remainder of the first line contains a response code (200) and explanation (OK) in this case saying everything is fine, here's the page you asked for. The second header here defines the type of document being returned (it's an HTML page). There is then a blank line which ends the headers (as with the request) and the HTML content is then sent.</p>\n<p>A real request and response pair will have many more headers than this but their format follows this basic pattern: header lines followed by a blank line and an optional body. The point here is that HTTP is a very simple conversation between web client and server.</p>\n<p>One important feature of HTTP is that each request/response pair is independent of every other. This means that all the information about your request must be included in the request headers; the server doesn't remember anything you told it last time. This is one reason that HTTP and the web have been so successful. It is very easy to implement an HTTP server and it can be done on very small devices. This might be one of the reasons why the Web succeeded where other similar systems failed. Since the protocol is so simple, it was easy to write a web server and many people did. This meant that the web was used by many small groups to publish content, forming the groundswell that led to institutional and corporate adoption.</p>\n<p>We'll look at HTTP in more detail later, for now the take home message is:</p>\n<ul>\n<li>HTTP is a simple text based protocol</li>\n<li>The client (browser) sends a request to the server</li>\n<li>The server receives the request and returns a response</li>\n<li>The server doesn't need to remember the client - every request is independant.</li>\n<li>The simple nature of HTTP makes it easy to understand and makes writing web servers relatively easy.</li>\n</ul>\n<h2>Uniform Resource Locators: URL</h2>\n<p>Another part of Tim Berners-Lee's invention is the Uniform Resource Locator, URL. These days, URLs are ubiquitous. We see them on advertisments, on the TV, we send them to each other in email, even reference them in books and reports. Most organisations today will have at least one top-level URL for their website and often have many connected to particular services, departments or advertising campaigns.</p>\n<p>See <a href=\"https://pwp.stevecassidy.net/web/urls.html\">the URL chapter</a> for a detaile discussion.</p>\n<h2>Hypertext Markup Language: HTML</h2>\n<p>HTML is the last link in the chain that makes the Web. It is a language that allows authors to write Hypertext documents that include structure and formatting instructions. <em>Hypertext</em> describes the idea of linking one document to another via <em>hyperlinks</em> so that when you activate a link, you jump to a new document. There were hypertext systems before the birth of the web (<a href=\"http://www.xanadu.com/\">Project Xanadu</a>, <a href=\"http://en.wikipedia.org/wiki/HyperCard\">Hypercard</a>) but HTML has been much more successful than any other standard in this space.</p>\n<p>HTML is a <em>Markup Language</em> which means that it provides a way of adding additional information or markup to plain text. In this case, the markup defines the structure of the document - headers, paragraphs, lists, tables - as well as the hypertext features - links and anchors. There are other markup languages, for example LaTeX is used to write scientific papers by adding markup to text (e.g. \\textbf{bold text} or \\section{A heading}). All markup languages have some way of differentiating the text in a document from the markup instructions. In HTML this is via the angle brackets which surround tag names: &#x3C;tag>.</p>\n<p>HTML was invented by Tim Berners-Lee but it derives from an earlier standard called SGML (Standard Generalised Markup Language) that had been in use for some years as a language for writing technical documentation. It came out of work by IBM on their technical documentation and became an industry standard ratified by the ISO. SGML is in fact a meta-standard in that it defines a way of defining a markup language. HTML is one such markup language and can strictly be treated as such; however, since HTML is so much more common than any other SGML language, it is usually treated as a special case. So, for example, while we could use general purpose SGML authoring tools to write HTML, we generally use applications tailored to writing web pages that only understand HTML.</p>\n<p>Another related markup language is <a href=\"http://www.w3.org/XML/\">XML</a>, the eXtensible Markup Language. XML began as an attempt to streamline the SGML standard to make it more suitable for the web. Like SGML, XML is a meta-standard that defines how markup languages can be written. There is a version of HTML defined as an XML language called <a href=\"http://www.w3.org/MarkUp/\">XHTML</a> but this never really took off and the standardisation work around it was stopped in 2010. Instead, XML has become widely used to describe <em>data</em> rather than <em>documents</em> and we'll look at how it is used today on the web later in this book.</p>"},{"url":"/docs/articles/intro/","relativePath":"docs/articles/intro.md","relativeDir":"docs/articles","base":"intro.md","name":"intro","frontmatter":{"title":"Intro To Node","excerpt":"Web-Dev-Hubis a Unibit theme created for project documentations. You can use it for your project.","seo":{"title":"Intro To Node","description":"This is the Intro To Node page","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Intro To Node","keyName":"property"},{"name":"og:description","value":"This is the Intro To Node page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Intro To Node"},{"name":"twitter:description","value":"This is the Intro To Node page"}]},"template":"docs"},"html":"<p>Node.js is an open-source and cross-platform JavaScript runtime environment. It is a popular tool for almost any kind of project!</p>\n<p>Node.js runs the V8 JavaScript engine, the core of Google Chrome, outside of the browser. This allows Node.js to be very performant.</p>\n<p>A Node.js app is run in a single process, without creating a new thread for every request. Node.js provides a set of asynchronous I/O primitives in its standard library that prevent JavaScript code from blocking and generally, libraries in Node.js are written using non-blocking paradigms, making blocking behavior the exception rather than the norm.</p>\n<p>When Node.js performs an I/O operation, like reading from the network, accessing a database or the filesystem, instead of blocking the thread and wasting CPU cycles waiting, Node.js will resume the operations when the response comes back.</p>\n<p>This allows Node.js to handle thousands of concurrent connections with a single server without introducing the burden of managing thread concurrency, which could be a significant source of bugs.</p>\n<p>Node.js has a unique advantage because millions of frontend developers that write JavaScript for the browser are now able to write the server-side code in addition to the client-side code without the need to learn a completely different language.</p>\n<p>In Node.js the new ECMAScript standards can be used without problems, as you don't have to wait for all your users to update their browsers - you are in charge of deciding which ECMAScript version to use by changing the Node.js version, and you can also enable specific experimental features by running Node.js with flags.</p>\n<h2>A Vast Number of Libraries</h2>\n<p>npm with its simple structure helped the ecosystem of Node.js proliferate, and now the npm registry hosts over 1,000,000 open source packages you can freely use.</p>\n<h2>An Example Node.js Application</h2>\n<p>The most common example Hello World of Node.js is a web server:</p>\n<iframe\n  title=\"Hello world web server\"\n  src=\"https://glitch.com/embed/#!/embed/nodejs-dev-0001-01?path=server.js&previewSize=30&attributionHidden=true&sidebarCollapsed=true\"\n  alt=\"nodejs-dev-0001-01 on Glitch\"\n  style=\"height: 400px; width: 100%; border: 0;\">\n</iframe>\n<!--```js\nconst http = require('http')\n\nconst hostname = '127.0.0.1'\nconst port = 3000\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200\n  res.setHeader('Content-Type', 'text/plain')\n  res.end('Hello World\\n')\n})\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`)\n})\n```\n\nTo run this snippet, save it as a `server.js` file and run `node server.js` in your terminal.-->\n<p>This code first includes the Node.js <a href=\"https://nodejs.org/api/http.html\"><code>http</code> module</a>.</p>\n<p>Node.js has a fantastic <a href=\"https://nodejs.org/api/\">standard library</a>, including first-class support for networking.</p>\n<p>The <code>createServer()</code> method of <code>http</code> creates a new HTTP server and returns it.</p>\n<p>The server is set to listen on the specified port and host name. When the server is ready, the callback function is called, in this case informing us that the server is running.</p>\n<p>Whenever a new request is received, the <a href=\"https://nodejs.org/api/http.html#http_event_request\"><code>request</code> event</a> is called, providing two objects: a request (an <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\"><code>http.IncomingMessage</code></a> object) and a response (an <a href=\"https://nodejs.org/api/http.html#http_class_http_serverresponse\"><code>http.ServerResponse</code></a> object).</p>\n<p>Those 2 objects are essential to handle the HTTP call.</p>\n<p>The first provides the request details. In this simple example, this is not used, but you could access the request headers and request data.</p>\n<p>The second is used to return data to the caller.</p>\n<p>In this case with:</p>\n<pre><code class=\"language-js\">res.statusCode = 200;\n</code></pre>\n<p>we set the statusCode property to 200, to indicate a successful response.</p>\n<p>We set the Content-Type header:</p>\n<pre><code class=\"language-js\">res.setHeader('Content-Type', 'text/plain');\n</code></pre>\n<p>and we close the response, adding the content as an argument to <code>end()</code>:</p>\n<pre><code class=\"language-js\">res.end('Hello World\\n');\n</code></pre>\n<h2>Node.js Frameworks and Tools</h2>\n<p>Node.js is a low-level platform. In order to make things easy and exciting for developers, thousands of libraries were built upon Node.js by the community.</p>\n<p>Many of those established over time as popular options. Here is a non-comprehensive list of the ones worth learning:</p>\n<ul>\n<li><a href=\"https://adonisjs.com/\"><strong>AdonisJs</strong></a>: A full-stack framework highly focused on developer ergonomics, stability, and confidence. Adonis is one of the fastest Node.js web frameworks.</li>\n<li><a href=\"https://expressjs.com/\"><strong>Express</strong></a>: It provides one of the most simple yet powerful ways to create a web server. Its minimalist approach, unopinionated, focused on the core features of a server, is key to its success.</li>\n<li><a href=\"https://fastify.io/\"><strong>Fastify</strong></a>: A web framework highly focused on providing the best developer experience with the least overhead and a powerful plugin architecture. Fastify is one of the fastest Node.js web frameworks.</li>\n<li><a href=\"https://www.gatsbyjs.com/\"><strong>Gatsby</strong></a>: A <a href=\"https://reactjs.org/\">React</a>-based, <a href=\"https://graphql.org/\">GraphQL</a> powered, static site generator with a very rich ecosystem of plugins and starters.</li>\n<li><a href=\"https://hapijs.com\"><strong>hapi</strong></a>: A rich framework for building applications and services that enables developers to focus on writing reusable application logic instead of spending time building infrastructure.</li>\n<li><a href=\"http://koajs.com/\"><strong>koa</strong></a>: It is built by the same team behind Express, aims to be even simpler and smaller, building on top of years of knowledge. The new project born out of the need to create incompatible changes without disrupting the existing community.</li>\n<li><a href=\"https://loopback.io/\"><strong>Loopback.io</strong></a>: Makes it easy to build modern applications that require complex integrations.</li>\n<li><a href=\"https://meteor.com\"><strong>Meteor</strong></a>: An incredibly powerful full-stack framework, powering you with an isomorphic approach to building apps with JavaScript, sharing code on the client and the server. Once an off-the-shelf tool that provided everything, now integrates with frontend libs <a href=\"https://reactjs.org/\">React</a>, <a href=\"https://vuejs.org/\">Vue</a>, and <a href=\"https://angular.io\">Angular</a>. Can be used to create mobile apps as well.</li>\n<li><a href=\"https://github.com/zeit/micro\"><strong>Micro</strong></a>: It provides a very lightweight server to create asynchronous HTTP microservices.</li>\n<li><a href=\"https://nestjs.com/\"><strong>NestJS</strong></a>: A TypeScript based progressive Node.js framework for building enterprise-grade efficient, reliable and scalable server-side applications.</li>\n<li><a href=\"https://nextjs.org/\"><strong>Next.js</strong></a>: <a href=\"https://reactjs.org\">React</a> framework that gives you the best developer experience with all the features you need for production: hybrid static &#x26; server rendering, TypeScript support, smart bundling, route pre-fetching, and more.</li>\n<li><a href=\"https://nx.dev/\"><strong>Nx</strong></a>: A toolkit for full-stack monorepo development using NestJS, Express, <a href=\"https://reactjs.org/\">React</a>, <a href=\"https://angular.io\">Angular</a>, and more! Nx helps scale your development from one team building one application to many teams collaborating on multiple applications!</li>\n<li><a href=\"https://sapper.svelte.dev/\"><strong>Sapper</strong></a>: Sapper is a framework for building web applications of all sizes, with a beautiful development experience and flexible filesystem-based routing. Offers SSR and more!</li>\n<li><a href=\"https://socket.io/\"><strong>Socket.io</strong></a>: A real-time communication engine to build network applications.</li>\n<li><a href=\"https://strapi.io/\"><strong>Strapi</strong></a>: Strapi is a flexible, open-source Headless CMS that gives developers the freedom to choose their favorite tools and frameworks while also allowing editors to easily manage and distribute their content. By making the admin panel and API extensible through a plugin system, Strapi enables the world's largest companies to accelerate content delivery while building beautiful digital experiences.</li>\n</ul>"},{"url":"/docs/articles/module-exports/","relativePath":"docs/articles/module-exports.md","relativeDir":"docs/articles","base":"module-exports.md","name":"module-exports","frontmatter":{"title":"module-exports","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"page","image":"images/theme.png","subtitle":"how we introduce modularity into our code in the node ecosystem"},"html":"<p>Node.js has a built-in module system.</p>\n<p>A Node.js file can import functionality exposed by other Node.js files.</p>\n<p>When you want to import something you use</p>\n<p>to import the functionality exposed in the library.js file that resides in the current file folder.</p>\n<p>In this file, functionality must be exposed before it can be imported by other files.</p>\n<p>Any other object or variable defined in the file by default is private and not exposed to the outer world.</p>\n<p>This is what the module.exports API offered by the <a href=\"https://nodejs.org/api/modules.html\">module system</a> allows us to do.</p>\n<p>When you assign an object or a function as a new exports property, that is the thing that's being exposed, and as such, it can be imported in other parts of your app, or in other apps as well.</p>\n<p>You can do so in 2 ways.</p>\n<p>The first is to assign an object to module.exports, which is an object provided out of the box by the module system, and this will make your file export <em>just that object</em>:</p>\n<p>The second way is to add the exported object as a property of exports. This way allows you to export multiple objects, functions or data:</p>\n<p>or directly</p>\n<p>And in the other file, you'll use it by referencing a property of your import:</p>\n<p>or</p>\n<p>What's the difference between module.exports and exports?</p>\n<p>The first exposes the object it points to. The latter exposes <em>the properties</em> of the object it points to.</p>"},{"url":"/docs/articles/node-repl/","relativePath":"docs/articles/node-repl.md","relativeDir":"docs/articles","base":"node-repl.md","name":"node-repl","frontmatter":{"title":"The-package-lock.json-file","weight":1,"seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs","excerpt":"The package-lock.json file is automatically generated when installing node packages"},"html":"<p>The <code>node</code> command is the one we use to run our Node.js scripts:</p>\n<pre><code class=\"language-bash\">node script.js\n</code></pre>\n<p>If we omit the filename, we use it in REPL mode:</p>\n<pre><code class=\"language-bash\">node\n</code></pre>\n<blockquote>\n<p>Note: REPL also known as Read Evaluate Print Loop is a programming language environment(Basically a console window) that takes single expression as user input and returns the result back to the console after execution.</p>\n</blockquote>\n<p>If you try it now in your terminal, this is what happens:</p>\n<pre><code class=\"language-bash\">❯ node\n>\n</code></pre>\n<p>the command stays in idle mode and waits for us to enter something.</p>\n<blockquote>\n<p>Tip: if you are unsure how to open your terminal, google \"How to open terminal on &#x3C;your-operating-system>\".</p>\n</blockquote>\n<p>The REPL is waiting for us to enter some JavaScript code, to be more precise.</p>\n<p>Start simple and enter</p>\n<pre><code class=\"language-console\">> console.log('test')\ntest\nundefined\n>\n</code></pre>\n<p>The first value, <code>test</code>, is the output we told the console to print, then we get undefined which is the return value of running <code>console.log()</code>.</p>\n<p>We can now enter a new line of JavaScript.</p>\n<h2>Use the tab to autocomplete</h2>\n<p>The cool thing about the REPL is that it's interactive.</p>\n<p>As you write your code, if you press the <code>tab</code> key the REPL will try to autocomplete what you wrote to match a variable you already defined or a predefined one.</p>\n<h2>Exploring JavaScript objects</h2>\n<p>Try entering the name of a JavaScript class, like <code>Number</code>, add a dot and press <code>tab</code>.</p>\n<p>The REPL will print all the properties and methods you can access on that class:</p>\n<p><img src=\"tab.png\" alt=\"Pressing tab reveals object properties\"></p>\n<h2>Explore global objects</h2>\n<p>You can inspect the globals you have access to by typing <code>global.</code> and pressing <code>tab</code>:</p>\n<p><img src=\"globals.png\" alt=\"Globals\"></p>\n<h2>The _ special variable</h2>\n<p>If after some code you type <code>_</code>, that is going to print the result of the last operation.</p>\n<h2>Dot commands</h2>\n<p>The REPL has some special commands, all starting with a dot <code>.</code>. They are</p>\n<ul>\n<li><code>.help</code>: shows the dot commands help</li>\n<li><code>.editor</code>: enables editor mode, to write multiline JavaScript code with ease. Once you are in this mode, enter ctrl-D to run the code you wrote.</li>\n<li><code>.break</code>: when inputting a multi-line expression, entering the .break command will abort further input. Same as pressing ctrl-C.</li>\n<li><code>.clear</code>: resets the REPL context to an empty object and clears any multi-line expression currently being input.</li>\n<li><code>.load</code>: loads a JavaScript file, relative to the current working directory</li>\n<li><code>.save</code>: saves all you entered in the REPL session to a file (specify the filename)</li>\n<li><code>.exit</code>: exits the repl (same as pressing ctrl-C two times)</li>\n</ul>\n<p>The REPL knows when you are typing a multi-line statement without the need to invoke <code>.editor</code>.</p>\n<p>For example if you start typing an iteration like this:</p>\n<pre><code class=\"language-js\">[1, 2, 3].forEach(num => {\n</code></pre>\n<p>and you press <code>enter</code>, the REPL will go to a new line that starts with 3 dots, indicating you can now continue to work on that block.</p>\n<pre><code class=\"language-js\">... console.log(num)\n... })\n</code></pre>\n<p>If you type <code>.break</code> at the end of a line, the multiline mode will stop and the statement will not be executed.</p>"},{"url":"/docs/articles/node-package-manager/","relativePath":"docs/articles/node-package-manager.md","relativeDir":"docs/articles","base":"node-package-manager.md","name":"node-package-manager","frontmatter":{"title":"Sorting Algorithms","weight":0,"excerpt":"Sorting Algorithms","seo":{"title":"","description":"","robots":[],"extra":[{"name":"og:title","value":"Sorting Algorithms","keyName":"property","relativeUrl":false},{"name":"og:description","value":"We are creating the same number of variables with an exact size, independent of our input. No new arrays are created.","keyName":"property","relativeUrl":false},{"name":"og:type","value":"website","keyName":"property","relativeUrl":false},{"name":"twitter:image","value":"images/Classical-2D-floorplanning-data-structures-left-and-their-3D.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"sorting algos","keyName":"name","relativeUrl":false},{"name":"og:image","value":"images/image (9).png","keyName":"property","relativeUrl":true}],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Sorting Algorithms</h2>\n<h3>Sorting Algorithms</h3>\n<ol>\n<li>Explain the complexity of and write a function that performs bubble sort on an array of numbers.</li>\n<li>\n<p>Time Complexity: O(n^2)</p>\n<ul>\n<li>In our worst case, our input is in the opposite order. We have to perform n swaps and loop through our input n times because a swap is made each time.</li>\n</ul>\n</li>\n<li>\n<p>Space Complexity: O(1)</p>\n<ul>\n<li>We are creating the same number of variables with an exact size, independent of our input. No new arrays are created.</li>\n</ul>\n</li>\n<li>Code example for bubbleSort:</li>\n</ol>\n<pre><code class=\"language-javascript\">function bubbleSort(array) {\n    // We could have also had a 'sorted = false' flag and flipped our logic below\n    let swapped = true;\n\n    while (swapped) {\n        swapped = false;\n\n        for (let i = 0; i &#x3C; array.length - 1; i++) {\n            if (array[i] > array[i + 1]) {\n                let temp = array[i];\n                array[i] = array[i + 1];\n                array[i + 1] = temp;\n                // The above three lines could also be in a helper swap function\n                // swap(array, i, i+1);\n                swapped = true;\n            }\n        }\n    }\n\n    return array;\n}\n</code></pre>\n<ol start=\"2\">\n<li>Explain the complexity of and write a function that performs selection sort on an array of numbers.</li>\n<li>\n<p>Time Complexity: O(n^2)</p>\n<ul>\n<li>Our nested loop structure is dependent on the size of our input.</li>\n<li>The outer loop always occurs n times.</li>\n<li>For each of those iterations, we have another loop that runs (n - i) times. This just means that the inner loop runs one less time each iteration, but this averages out to (n/2).</li>\n<li>Our nested structure is then T(n * n/2) = O(n^2)</li>\n</ul>\n</li>\n<li>\n<p>Space Complexity: O(1)</p>\n<ul>\n<li>We are creating the same number of variables with an exact size, independent of our input. No new arrays are created.</li>\n</ul>\n</li>\n<li>Code example for selectSort:</li>\n</ol>\n<pre><code class=\"language-javascript\">function selectionSort(arr) {\n    for (let i = 0; i &#x3C; arr.length; i++) {\n        let minIndex = i;\n\n        for (let j = i + 1; j &#x3C; arr.length; j++) {\n            if (arr[minIndex] > arr[j]) {\n                minIndex = j;\n            }\n        }\n\n        let temp = arr[i];\n        arr[i] = arr[minIndex];\n        arr[minIndex] = temp;\n        // The above three lines could also be in a helper swap function\n        // swap(arr, i, minIndex);\n    }\n    return arr;\n}\n</code></pre>\n<ol start=\"3\">\n<li>Explain the complexity of and write a function that performs insertion sort on an array of numbers.</li>\n<li>\n<p>Time Complexity: O(n^2)</p>\n<ul>\n<li>Our nested loop structure is dependent on the size of our input.</li>\n<li>The outer loop always occurs n times.</li>\n<li>For each of those iterations, we have another loop that runs a maximum of (i - 1) times. This just means that the inner loop runs one more time each iteration, but this averages out to (n/2).</li>\n<li>Our nested structure is then T(n * n/2) = O(n^2)</li>\n</ul>\n</li>\n<li>\n<p>Space Complexity: O(1)</p>\n<ul>\n<li>We are creating the same number of variables with an exact size, independent of our input. No new arrays are created.</li>\n</ul>\n</li>\n<li>Code example for insertionSort:</li>\n</ol>\n<pre><code class=\"language-javascript\">function insertionSort(arr) {\n    for (let i = 1; i &#x3C; arr.length; i++) {\n        let currElement = arr[i];\n        for (var j = i - 1; j >= 0 &#x26;&#x26; currElement &#x3C; arr[j]; j--) {\n            arr[j + 1] = arr[j];\n        }\n        arr[j + 1] = currElement;\n    }\n    return arr;\n}\n</code></pre>\n<ol start=\"4\">\n<li>Explain the complexity of and write a function that performs merge sort on an array of numbers.</li>\n<li>\n<p>Time Complexity: O(n log n)</p>\n<ul>\n<li>Our mergeSort function divides our input in half at each step, recursively calling itself with smaller and smaller input. This results in log n stack frames.</li>\n<li>On each stack frame, our worst case scenario is having to make n comparisons in our merge function in order to determine which element should come next in our sorted array.</li>\n<li>Since we have log n stack frames and n operations on each frame, we end up with an O(n log n) time complexity</li>\n</ul>\n</li>\n<li>\n<p>Space Complexity: O(n)</p>\n<ul>\n<li>We are ultimately creating n subarrays, making our space complexity linear to our input size.</li>\n</ul>\n</li>\n<li>Code example for mergeSort:</li>\n</ol>\n<pre><code class=\"language-javascript\">// The merge function is what is combining our sorted sub-arrays\nfunction merge(array1, array2) {\n    let merged = [];\n\n    // keep running while either array still contains elements\n    while (array1.length || array2.length) {\n        // if array1 is nonempty, take its the first element as ele1\n        // otherwise array1 is empty, so take Infinity as ele1\n        let ele1 = array1.length ? array1[0] : Infinity;\n\n        // do the same for array2, ele2\n        let ele2 = array2.length ? array2[0] : Infinity;\n\n        let next;\n        // remove the smaller of the eles from it's array\n        if (ele1 &#x3C; ele2) {\n            next = array1.shift();\n        } else {\n            next = array2.shift();\n        }\n\n        // and add that ele to the new array\n        merged.push(next);\n    }\n\n    return merged;\n}\n\n// The mergeSort function breaks apart our input into smaller sub-arrays until we have an input of length &#x3C;= 1, which is inherently sorted.\n// Once we have a left and right subarray that's sorted, we can merge them together to get our sorted result of this sub-problem, passing the sorted version back up the call stack.\nfunction mergeSort(array) {\n    if (array.length &#x3C;= 1) {\n        return array;\n    }\n\n    let midIdx = Math.floor(array.length / 2);\n    let leftHalf = array.slice(0, midIdx);\n    let rightHalf = array.slice(midIdx);\n\n    let sortedLeft = mergeSort(leftHalf);\n    let sortedRight = mergeSort(rightHalf);\n\n    return merge(sortedLeft, sortedRight);\n}\n</code></pre>\n<ol start=\"5\">\n<li>Explain the complexity of and write a function that performs quick sort on an array of numbers.</li>\n<li>\n<p>Time Complexity: Average O(n log n), Worst O(n^2)</p>\n<ul>\n<li>In our worst case, the pivot that we select results in every element going into either the left or right array. If this happens we end up making n recursive calls to quickSort, with n comparisons at each call.</li>\n<li>In our average case, we pick something that more evenly splits the arrays, resulting in approximately log n recursive calls and an overall complexity of O(n log n).</li>\n<li>Quick sort is unique in that the worst case is so exceedingly rare that it is often considered an O(n log n) complexity, even though this is not technically accurate.</li>\n</ul>\n</li>\n<li>\n<p>Space Complexity: Our implementation O(n), Possible implementation O(log n)</p>\n<ul>\n<li>The partition arrays that we create are directly proportional to the size of the input, resulting in O(n) space complexity.</li>\n<li>With some tweaking, we could implement an in-place quick sort, which would eliminate the creation of new arrays. In this case, the log n stack frames from the recursion are the only proportional amount of space that is used, resulting in O(log n) space complexity.</li>\n</ul>\n</li>\n<li>Code example for quickSort:</li>\n</ol>\n<pre><code class=\"language-javascript\">function quickSort(array) {\n    if (array.length &#x3C;= 1) {\n        return array;\n    }\n\n    let pivot = array.shift();\n    // This implementation uses filter, which returns a new array with any element that passes the criteria (ie the callback returns true).\n    // We also could have iterated over the array (array.forEach(el => ...)) and pushed each value into the appropriate left/right subarray as we encountered it.\n    let left = array.filter((el) => el &#x3C; pivot);\n    let right = array.filter((el) => el >= pivot);\n\n    let leftSorted = quickSort(left);\n    let rightSorted = quickSort(right);\n\n    return [...leftSorted, pivot, ...rightSorted];\n    // We also could have concatenated the arrays instead of spreading their contents\n    // return leftSorted.concat([pivot]).concat(rightSorted);\n}\n</code></pre>\n<ol start=\"6\">\n<li>Explain the complexity of and write a function that performs a binary search on a sorted array of numbers.</li>\n<li>\n<p>Time Complexity: O(log n)</p>\n<ul>\n<li>With each recursive call, we split our input in half. This means we have to make at most log n checks to know if the element is in our array.</li>\n</ul>\n</li>\n<li>\n<p>Space Complexity: Our implementation O(n), Possible implementation O(1)</p>\n<ul>\n<li>We have to make a subarray for each recursive call. In the worst case (we don't find the element), the total length of these arrays is approximately equal to the length of the original (n).</li>\n<li>If we kept references to the beginning and end index of the portion of the array that we are searching, we could eliminate the need for creating new subarrays. We could also use a while loop to perform this functionality until we either found our target or our beginning and end indices crossed. This would eliminate the space required for recursive calls (adding stack frames). Ultimately we would be using the same number of variables independent of input size, resulting in O(1).</li>\n</ul>\n</li>\n<li>Code example for binarySearch and binarySearchIndex:</li>\n</ol>\n<pre><code class=\"language-javascript\">// Returns simply true/false for presence\nfunction binarySearch(array, target) {\n    if (array.length === 0) {\n        return false;\n    }\n\n    let midIdx = Math.floor(array.length / 2);\n    let leftHalf = array.slice(0, midIdx);\n    let rightHalf = array.slice(midIdx + 1);\n\n    if (target &#x3C; array[midIdx]) {\n        return binarySearch(leftHalf, target);\n    } else if (target > array[midIdx]) {\n        return binarySearch(rightHalf, target);\n    } else {\n        return true;\n    }\n}\n\n// Returns the index or -1 if not found\nfunction binarySearchIndex(array, target) {\n    if (!array.length) return -1;\n\n    const midIdx = Math.floor(array.length / 2);\n    const midEl = array[midIdx];\n\n    if (target &#x3C; midEl) {\n        return binarySearchIndex(array.slice(0, midIdx), target);\n    } else if (target > midEl) {\n        // Since our recursive call will have new indices for the subarray, we have to adjust the return value to align it with the indices of our original array.\n        // If the recursive call returns -1, it was not found and we can immediately return -1\n        // If it was found in the subarray, we have to add on the number of elements that were removed from the beginning of our larger original array.\n        // For example, if we try to find 15 in an array of [5, 10, 15]:\n        // - Our first call to binarySearchIndex will check our middle element of 10\n        // - Since our target is greater, we will recursively call our search on elements to the right, being the subarray [15]\n        // - On our recursive call we found our target! It's index in this call is 0.\n        // - When we return 0 to where binarySearchIndex was called, we need to adjust it to line up with this larger array (the 0th element of this larger array is 5, but our target was at the 0th index of the subarray)\n        // - Since we sliced off 2 elements from the beginning before making our recursive call, we add 2 to the return value to adjust it back to line up with our original array.\n        const idxShift = binarySearchIndex(array.slice(midIdx + 1), target);\n        return idxShift === -1 ? -1 : idxShift + midIdx + 1;\n    } else {\n        return midIdx;\n    }\n}\n</code></pre>"},{"url":"/docs/articles/nodejs/","relativePath":"docs/articles/nodejs.md","relativeDir":"docs/articles","base":"nodejs.md","name":"nodejs","frontmatter":{"title":"Javascript and Node","excerpt":"Web-Dev-Hubis a Unibit theme created for project documentations. You can use it for your project.","seo":{"title":"Javascript and Node","description":"This is the Javascript and Node page","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Javascript and Node","keyName":"property"},{"name":"og:description","value":"This is the Javascript and Node page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Javascript and Node"},{"name":"twitter:description","value":"This is the Javascript and Node page"}]},"template":"docs"},"html":"<p>As a beginner, it's hard to get to a point where you are confident enough in your programming abilities.</p>\n<p>While learning to code, you might also be confused at where does JavaScript end, and where Node.js begins, and vice versa.</p>\n<p>I would recommend you to have a good grasp of the main JavaScript concepts before diving into Node.js:</p>\n<ul>\n<li>Lexical Structure</li>\n<li>Expressions</li>\n<li>Types</li>\n<li>Variables</li>\n<li>Functions</li>\n<li>this</li>\n<li>Arrow Functions</li>\n<li>Loops</li>\n<li>Scopes</li>\n<li>Arrays</li>\n<li>Template Literals</li>\n<li>Semicolons</li>\n<li>Strict Mode</li>\n<li>ECMAScript 6, 2016, 2017</li>\n</ul>\n<p>With those concepts in mind, you are well on your road to become a proficient JavaScript developer, in both the browser and in Node.js.</p>\n<p>The following concepts are also key to understand asynchronous programming, which is one fundamental part of Node.js:</p>\n<ul>\n<li>Asynchronous programming and callbacks</li>\n<li>Timers</li>\n<li>Promises</li>\n<li>Async and Await</li>\n<li>Closures</li>\n<li>The Event Loop</li>\n</ul>"},{"url":"/docs/articles/node-run-cli/","relativePath":"docs/articles/node-run-cli.md","relativeDir":"docs/articles","base":"node-run-cli.md","name":"node-run-cli","frontmatter":{"title":"node-cli-args","weight":1,"excerpt":"How to accept arguments in a Node.js program passed from the command line","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<p>You can pass any number of arguments when invoking a Node.js application using</p>\n<p>Arguments can be standalone or have a key and a value.</p>\n<p>For example:</p>\n<p>or</p>\n<p>This changes how you will retrieve this value in the Node.js code.</p>\n<p>The way you retrieve it is using the process object built into Node.js.</p>\n<p>It exposes an argv property, which is an array that contains all the command line invocation arguments.</p>\n<p>The first element is the full path of the node command.</p>\n<p>The second element is the full path of the file being executed.</p>\n<p>All the additional arguments are present from the third position going forward.</p>\n<p>You can iterate over all the arguments (including the node path and the file path) using a loop:</p>\n<p>You can get only the additional arguments by creating a new array that excludes the first 2 params:</p>\n<p>If you have one argument without an index name, like this:</p>\n<p>you can access it using</p>\n<p>In this case:</p>\n<p>args[0] is name=joe, and you need to parse it. The best way to do so is by using the <a href=\"https://www.npmjs.com/package/minimist\">minimist</a> library, which helps dealing with arguments:</p>\n<p>This time you need to use double dashes before each argument name:</p>"},{"url":"/docs/articles/node-env-variables/","relativePath":"docs/articles/node-env-variables.md","relativeDir":"docs/articles","base":"node-env-variables.md","name":"node-env-variables","frontmatter":{"title":"Node Export Module","weight":1,"excerpt":"How to use the module.exports API to expose data to other files in your application, or to other applications as well","seo":{"title":"module.exports API ","description":"When you want to import something you use\n\nconst library = require('./library');","robots":[],"extra":[{"name":"og:image","value":"images/cool-comet.png","keyName":"property","relativeUrl":true}],"type":"stackbit_page_meta"},"template":"docs"},"html":"<p>Node.js has a built-in module system.</p>\n<p>A Node.js file can import functionality exposed by other Node.js files.</p>\n<p>When you want to import something you use</p>\n<p>to import the functionality exposed in the library.js file that resides in the current file folder.</p>\n<p>In this file, functionality must be exposed before it can be imported by other files.</p>\n<p>Any other object or variable defined in the file by default is private and not exposed to the outer world.</p>\n<p>This is what the module.exports API offered by the <a href=\"https://nodejs.org/api/modules.html\">module system</a> allows us to do.</p>\n<p>When you assign an object or a function as a new exports property, that is the thing that's being exposed, and as such, it can be imported in other parts of your app, or in other apps as well.</p>\n<p>You can do so in 2 ways.</p>\n<p>The first is to assign an object to module.exports, which is an object provided out of the box by the module system, and this will make your file export <em>just that object</em>:</p>\n<p>The second way is to add the exported object as a property of exports. This way allows you to export multiple objects, functions or data:</p>\n<p>or directly</p>\n<p>And in the other file, you'll use it by referencing a property of your import:</p>\n<p>or</p>\n<p>What's the difference between module.exports and exports?</p>\n<p>The first exposes the object it points to. The latter exposes <em>the properties</em> of the object it points to.</p>"},{"url":"/docs/articles/npx/","relativePath":"docs/articles/npx.md","relativeDir":"docs/articles","base":"npx.md","name":"npx","frontmatter":{"title":"The npx Node.js Package Runner","sections":[],"seo":{"title":"","description":"npx is a very cool way to run Node.js code, and provides many useful features","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h1>NPX:</h1>\n<p><code>npx</code> is a very powerful command that's been available in <strong>npm</strong> starting version 5.2, released in July 2017.</p>\n<blockquote>\n<p>If you don't want to install npm, you can <a href=\"https://www.npmjs.com/package/npx\">install npx as a standalone package</a></p>\n</blockquote>\n<p><code>npx</code> lets you run code built with Node.js and published through the npm registry.</p>\n<h2>Easily run local commands</h2>\n<p>Node.js developers used to publish most of the executable commands as global packages, in order for them to be in the path and executable immediately.</p>\n<p>This was a pain because you could not really install different versions of the same command.</p>\n<p>Running <code>npx commandname</code> automatically finds the correct reference of the command inside the <code>node_modules</code> folder of a project, without needing to know the exact path, and without requiring the package to be installed globally and in the user's path.</p>\n<h2>Installation-less command execution</h2>\n<p>There is another great feature of <code>npx</code>, which is allowing to run commands without first installing them.</p>\n<p>This is pretty useful, mostly because:</p>\n<ol>\n<li>you don't need to install anything</li>\n<li>you can run different versions of the same command, using the syntax @version</li>\n</ol>\n<p>A typical demonstration of using <code>npx</code> is through the <code>cowsay</code> command. <code>cowsay</code> will print a cow saying what you wrote in the command. For example:</p>\n<p><code>cowsay \"Hello\"</code> will print</p>\n<pre><code> _______\n&#x3C; Hello >\n -------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n</code></pre>\n<p>This only works if you have the <code>cowsay</code> command globally installed from npm previously. Otherwise you'll get an error when you try to run the command.</p>\n<p><code>npx</code> allows you to run that npm command without having it installed locally:</p>\n<pre><code class=\"language-bash\">npx cowsay \"Hello\"\n</code></pre>\n<p>will do the job.</p>\n<p>Now, this is a funny useless command.\nOther scenarios include:</p>\n<ul>\n<li>running the <code>vue</code> CLI tool to create new applications and run them: <code>npx @vue/cli create my-vue-app</code></li>\n<li>creating a new React app using <code>create-react-app</code>: <code>npx create-react-app my-react-app</code></li>\n</ul>\n<p>and many more.</p>\n<p>Once downloaded, the downloaded code will be wiped.</p>\n<h2>Run some code using a different Node.js version</h2>\n<p>Use the <code>@</code> to specify the version, and combine that with the <a href=\"https://www.npmjs.com/package/node\"><code>node</code> npm package</a>:</p>\n<pre><code class=\"language-bash\">npx node@10 -v #v10.18.1\nnpx node@12 -v #v12.14.1\n</code></pre>\n<p>This helps to avoid tools like <code>nvm</code> or the other Node.js version management tools.</p>\n<h2>Run arbitrary code snippets directly from a URL</h2>\n<p><code>npx</code> does not limit you to the packages published on the npm registry.</p>\n<p>You can run code that sits in a GitHub gist, for example:</p>\n<pre><code class=\"language-bash\">npx https://gist.github.com/zkat/4bc19503fe9e9309e2bfaa2c58074d32\n</code></pre>\n<p>Of course, you need to be careful when running code that you do not control, as with great power comes great responsibility.</p>"},{"url":"/docs/articles/npm/","relativePath":"docs/articles/npm.md","relativeDir":"docs/articles","base":"npm.md","name":"npm","frontmatter":{"title":"Introduction to npm","weight":0,"excerpt":"npm is the standard package manager for nodejs","seo":{"title":"npm","description":"npm is the standard package manager for Node.js.\nIn January 2017 over 350000 packages were reported being listed in the npm registry.\n","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Introduction to npm</h2>\n<p><code>npm</code> is the standard package manager for Node.js.</p>\n<p>In January 2017 over 350000 packages were reported being listed in the npm registry, making it the biggest single language code repository on Earth, and you can be sure there is a package for (almost!) everything.</p>\n<p>It started as a way to download and manage dependencies of Node.js packages, but it has since become a tool used also in frontend JavaScript.</p>\n<p>There are many things that <code>npm</code> does.</p>\n<blockquote>\n<p><a href=\"https://yarnpkg.com/en/\"><strong>Yarn</strong></a> is an alternative to npm. Make sure you check it out as well.</p>\n</blockquote>\n<h2>Downloads</h2>\n<p><code>npm</code> manages downloads of dependencies of your project.</p>\n<h3>Installing all dependencies</h3>\n<p>If a project has a <code>package.json</code> file, by running</p>\n<pre><code class=\"language-bash\">npm install\n</code></pre>\n<p>it will install everything the project needs, in the <code>node_modules</code> folder, creating it if it's not existing already.</p>\n<h3>Installing a single package</h3>\n<p>You can also install a specific package by running</p>\n<pre><code class=\"language-bash\">npm install &#x3C;package-name>\n</code></pre>\n<p>Often you'll see more flags added to this command:</p>\n<ul>\n<li><code>--save</code> installs and adds the entry to the <code>package.json</code> file <em>dependencies</em></li>\n<li><code>--save-dev</code> installs and adds the entry to the <code>package.json</code> file <em>devDependencies</em></li>\n</ul>\n<p>The difference is mainly that devDependencies are usually development tools, like a testing library, while <code>dependencies</code> are bundled with the app in production.</p>\n<h3>Updating packages</h3>\n<p>Updating is also made easy, by running</p>\n<pre><code class=\"language-console\">npm update\n</code></pre>\n<p><code>npm</code> will check all packages for a newer version that satisfies your versioning constraints.</p>\n<p>You can specify a single package to update as well:</p>\n<pre><code class=\"language-console\">npm update &#x3C;package-name>\n</code></pre>\n<h2>Versioning</h2>\n<p>In addition to plain downloads, <code>npm</code> also manages <strong>versioning</strong>, so you can specify any specific version of a package, or require a version higher or lower than what you need.</p>\n<p>Many times you'll find that a library is only compatible with a major release of another library.</p>\n<p>Or a bug in the latest release of a lib, still unfixed, is causing an issue.</p>\n<p>Specifying an explicit version of a library also helps to keep everyone on the same exact version of a package, so that the whole team runs the same version until the <code>package.json</code> file is updated.</p>\n<p>In all those cases, versioning helps a lot, and <code>npm</code> follows the semantic versioning (semver) standard.</p>\n<h2>Running Tasks</h2>\n<p>The package.json file supports a format for specifying command line tasks that can be run by using</p>\n<pre><code class=\"language-console\">npm run &#x3C;task-name>\n</code></pre>\n<p>For example:</p>\n<pre><code class=\"language-json\">{\n    \"scripts\": {\n        \"start-dev\": \"node lib/server-development\",\n        \"start\": \"node lib/server-production\"\n    }\n}\n</code></pre>\n<p>It's very common to use this feature to run Webpack:</p>\n<pre><code class=\"language-json\">{\n    \"scripts\": {\n        \"watch\": \"webpack --watch --progress --colors --config webpack.conf.js\",\n        \"dev\": \"webpack --progress --colors --config webpack.conf.js\",\n        \"prod\": \"NODE_ENV=production webpack -p --config webpack.conf.js\"\n    }\n}\n</code></pre>\n<p>So instead of typing those long commands, which are easy to forget or mistype, you can run</p>\n<pre><code class=\"language-console\">$ npm run watch\n$ npm run dev\n$ npm run prod\n</code></pre>"},{"url":"/docs/articles/nodevsbrowser/","relativePath":"docs/articles/nodevsbrowser.md","relativeDir":"docs/articles","base":"nodevsbrowser.md","name":"nodevsbrowser","frontmatter":{"title":"Node vs Browser","excerpt":"Web-Dev-Hubis a Unibit theme created for project documentations. You can use it for your project.","seo":{"title":"Node vs Browser","description":"Both the browser and Node.js use JavaScript as their programming language.You can pass any number of arguments when invoking a Node.js application using\n\n","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Node vs Browser","keyName":"property"},{"name":"og:description","value":"Both the browser and Node.js use JavaScript as their programming language.\nBuilding apps that run in the browser","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Node vs Browser"},{"name":"twitter:description","value":"This is the Node vs Browser page"},{"name":"og:image","value":"images/node.jpg","keyName":"property","relativeUrl":true}]},"template":"docs"},"html":"<p>Both the browser and Node.js use JavaScript as their programming language.</p>\n<p>Building apps that run in the browser is a completely different thing than building a Node.js application.</p>\n<p>Despite the fact that it's always JavaScript, there are some key differences that make the experience radically different.</p>\n<p>From the perspective of a frontend developer who extensively uses JavaScript, Node.js apps bring with them a huge advantage: the comfort of programming everything - the frontend and the backend - in a single language.</p>\n<p>You have a huge opportunity because we know how hard it is to fully, deeply learn a programming language, and by using the same language to perform all your work on the web - both on the client and on the server, you're in a unique position of advantage.</p>\n<p>What changes is the ecosystem.</p>\n<p>In the browser, most of the time what you are doing is interacting with the DOM, or other Web Platform APIs like Cookies. Those do not exist in Node.js, of course. You don't have the <code>document</code>, <code>window</code> and all the other objects that are provided by the browser.</p>\n<p>And in the browser, we don't have all the nice APIs that Node.js provides through its modules, like the filesystem access functionality.</p>\n<p>Another big difference is that in Node.js you control the environment. Unless you are building an open source application that anyone can deploy anywhere, you know which version of Node.js you will run the application on. Compared to the browser environment, where you don't get the luxury to choose what browser your visitors will use, this is very convenient.</p>\n<p>This means that you can write all the modern ES6-7-8-9 JavaScript that your Node.js version supports.</p>\n<p>Since JavaScript moves so fast, but browsers can be a bit slow and users a bit slow to upgrade, sometimes on the web, you are stuck with using older JavaScript / ECMAScript releases.</p>\n<p>You can use Babel to transform your code to be ES5-compatible before shipping it to the browser, but in Node.js, you won't need that.</p>\n<p>Another difference is that Node.js uses the CommonJS module system, while in the browser we are starting to see the ES Modules standard being implemented.</p>\n<p>In practice, this means that for the time being you use <code>require()</code> in Node.js and <code>import</code> in the browser.</p>"},{"url":"/docs/articles/reading-files/","relativePath":"docs/articles/reading-files.md","relativeDir":"docs/articles","base":"reading-files.md","name":"reading-files","frontmatter":{"title":"Reading Files","excerpt":"Web-Dev-Hubis a Unibit theme created for project documentations. You can use it for your project.","seo":{"title":"Reading files","description":"The simplest way to read a file in Node.js is to use the fs.readFile() method, passing it the file path, encoding and a callback function that will be called","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Reading files","keyName":"property"},{"name":"og:description","value":"This is the Reading files page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Reading files"},{"name":"twitter:description","value":"This is the Reading files page"}]},"template":"docs"},"html":"<p>The simplest way to read a file in Node.js is to use the <code>fs.readFile()</code> method, passing it the file path, encoding and a callback function that will be called with the file data (and the error):</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n\nfs.readFile('/Users/joe/test.txt', 'utf8', (err, data) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    console.log(data);\n});\n</code></pre>\n<p>Alternatively, you can use the synchronous version <code>fs.readFileSync()</code>:</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n\ntry {\n    const data = fs.readFileSync('/Users/joe/test.txt', 'utf8');\n    console.log(data);\n} catch (err) {\n    console.error(err);\n}\n</code></pre>\n<p>Both <code>fs.readFile()</code> and <code>fs.readFileSync()</code> read the full content of the file in memory before returning the data.</p>\n<p>This means that big files are going to have a major impact on your memory consumption and speed of execution of the program.</p>\n<p>In this case, a better option is to read the file content using streams.</p>"},{"url":"/docs/articles/node-common-modules/","relativePath":"docs/articles/node-common-modules.md","relativeDir":"docs/articles","base":"node-common-modules.md","name":"node-common-modules","frontmatter":{"title":"Common Modules","weight":2,"excerpt":"resources","seo":{"title":"","description":"This section is similar to a blog but is more technical in nature and time invariant with regard to content.","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Modules: CommonJS modules<a href=\"https://nodejs.org/api/modules.html#modules_modules_commonjs_modules\">#</a></h2>\n<p><a href=\"https://nodejs.org/api/documentation.html#documentation_stability_index\">Stability: 2</a> - Stable</p>\n<p>In the Node.js module system, each file is treated as a separate module. For example, consider a file named <code>foo.js</code>:</p>\n<pre><code>const circle = require('./circle.js');\nconsole.log(`The area of a circle of radius 4 is ${circle.area(4)}`);\n</code></pre>\n<p>On the first line, <code>foo.js</code> loads the module <code>circle.js</code> that is in the same directory as <code>foo.js</code>.</p>\n<p>Here are the contents of <code>circle.js</code>:</p>\n<pre><code>const { PI } = Math;\n\nexports.area = (r) => PI * r ** 2;\n\nexports.circumference = (r) => 2 * PI * r;\n</code></pre>\n<p>The module <code>circle.js</code> has exported the functions <code>area()</code> and <code>circumference()</code>. Functions and objects are added to the root of a module by specifying additional properties on the special <code>exports</code> object.</p>\n<p>Variables local to the module will be private, because the module is wrapped in a function by Node.js (see <a href=\"https://nodejs.org/api/modules.html#modules_the_module_wrapper\">module wrapper</a>). In this example, the variable <code>PI</code> is private to <code>circle.js</code>.</p>\n<p>The <code>module.exports</code> property can be assigned a new value (such as a function or object).</p>\n<p>Below, <code>bar.js</code> makes use of the <code>square</code> module, which exports a Square class:</p>\n<pre><code>const Square = require('./square.js');\nconst mySquare = new Square(2);\nconsole.log(`The area of mySquare is ${mySquare.area()}`);\n</code></pre>\n<p>The <code>square</code> module is defined in <code>square.js</code>:</p>\n<pre><code>// Assigning to exports will not modify module, must use module.exports\nmodule.exports = class Square {\n  constructor(width) {\n    this.width = width;\n  }\n\n  area() {\n    return this.width ** 2;\n  }\n};\n</code></pre>\n<p>The module system is implemented in the <code>require('module')</code> module.</p>\n<h3>Accessing the main module<a href=\"https://nodejs.org/api/modules.html#modules_accessing_the_main_module\">#</a></h3>\n<p>When a file is run directly from Node.js, <code>require.main</code> is set to its <code>module</code>. That means that it is possible to determine whether a file has been run directly by testing <code>require.main === module</code>.</p>\n<p>For a file <code>foo.js</code>, this will be <code>true</code> if run via <code>node foo.js</code>, but <code>false</code> if run by <code>require('./foo')</code>.</p>\n<p>Because <code>module</code> provides a <code>filename</code> property (normally equivalent to <code>__filename</code>), the entry point of the current application can be obtained by checking <code>require.main.filename</code>.</p>\n<h3>Package manager tips<a href=\"https://nodejs.org/api/modules.html#modules_package_manager_tips\">#</a></h3>\n<p>The semantics of the Node.js <code>require()</code> function were designed to be general enough to support reasonable directory structures. Package manager programs such as <code>dpkg</code>, <code>rpm</code>, and <code>npm</code> will hopefully find it possible to build native packages from Node.js modules without modification.</p>\n<p>Below we give a suggested directory structure that could work:</p>\n<p>Let's say that we wanted to have the folder at <code>/usr/lib/node/&#x3C;some-package>/&#x3C;some-version></code> hold the contents of a specific version of a package.</p>\n<p>Packages can depend on one another. In order to install package <code>foo</code>, it may be necessary to install a specific version of package <code>bar</code>. The <code>bar</code> package may itself have dependencies, and in some cases, these may even collide or form cyclic dependencies.</p>\n<p>Because Node.js looks up the <code>realpath</code> of any modules it loads (that is, it resolves symlinks) and then <a href=\"https://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders\">looks for their dependencies in <code>node_modules</code> folders</a>, this situation can be resolved with the following architecture:</p>\n<ul>\n<li><code>/usr/lib/node/foo/1.2.3/</code>: Contents of the <code>foo</code> package, version 1.2.3.</li>\n<li><code>/usr/lib/node/bar/4.3.2/</code>: Contents of the <code>bar</code> package that <code>foo</code> depends on.</li>\n<li><code>/usr/lib/node/foo/1.2.3/node_modules/bar</code>: Symbolic link to <code>/usr/lib/node/bar/4.3.2/</code>.</li>\n<li><code>/usr/lib/node/bar/4.3.2/node_modules/*</code>: Symbolic links to the packages that <code>bar</code> depends on.</li>\n</ul>\n<p>Thus, even if a cycle is encountered, or if there are dependency conflicts, every module will be able to get a version of its dependency that it can use.</p>\n<p>When the code in the <code>foo</code> package does <code>require('bar')</code>, it will get the version that is symlinked into <code>/usr/lib/node/foo/1.2.3/node_modules/bar</code>. Then, when the code in the <code>bar</code> package calls <code>require('quux')</code>, it'll get the version that is symlinked into <code>/usr/lib/node/bar/4.3.2/node_modules/quux</code>.</p>\n<p>Furthermore, to make the module lookup process even more optimal, rather than putting packages directly in <code>/usr/lib/node</code>, we could put them in <code>/usr/lib/node_modules/&#x3C;name>/&#x3C;version></code>. Then Node.js will not bother looking for missing dependencies in <code>/usr/node_modules</code> or <code>/node_modules</code>.</p>\n<p>In order to make modules available to the Node.js REPL, it might be useful to also add the <code>/usr/lib/node_modules</code> folder to the <code>$NODE_PATH</code> environment variable. Since the module lookups using <code>node_modules</code> folders are all relative, and based on the real path of the files making the calls to <code>require()</code>, the packages themselves can be anywhere.</p>\n<h3>The <code>.mjs</code> extension<a href=\"https://nodejs.org/api/modules.html#modules_the_mjs_extension\">#</a></h3>\n<p>It is not possible to <code>require()</code> files that have the <code>.mjs</code> extension. Attempting to do so will throw <a href=\"https://nodejs.org/api/errors.html#errors_err_require_esm\">an error</a>. The <code>.mjs</code> extension is reserved for <a href=\"https://nodejs.org/api/esm.html\">ECMAScript Modules</a> which cannot be loaded via <code>require()</code>. See <a href=\"https://nodejs.org/api/esm.html\">ECMAScript Modules</a> for more details.</p>\n<h3>All together...<a href=\"https://nodejs.org/api/modules.html#modules_all_together\">#</a></h3>\n<p>To get the exact filename that will be loaded when <code>require()</code> is called, use the <code>require.resolve()</code> function.</p>\n<p>Putting together all of the above, here is the high-level algorithm in pseudocode of what <code>require()</code> does:</p>\n<p>require(X) from module at path Y</p>\n<ol>\n<li>If X is a core module,\na. return the core module\nb. STOP</li>\n<li>If X begins with '/'\na. set Y to be the filesystem root</li>\n<li>If X begins with './' or '/' or '../'\na. LOAD<em>AS</em>FILE(Y + X)\nb. LOAD<em>AS</em>DIRECTORY(Y + X)\nc. THROW \"not found\"</li>\n<li>If X begins with '#'\na. LOAD<em>PACKAGE</em>IMPORTS(X, dirname(Y))</li>\n<li>LOAD<em>PACKAGE</em>SELF(X, dirname(Y))</li>\n<li>LOAD<em>NODE</em>MODULES(X, dirname(Y))</li>\n<li>THROW \"not found\"</li>\n</ol>\n<p>LOAD<em>AS</em>FILE(X)</p>\n<ol>\n<li>If X is a file, load X as its file extension format. STOP</li>\n<li>If X.js is a file, load X.js as JavaScript text. STOP</li>\n<li>If X.json is a file, parse X.json to a JavaScript Object. STOP</li>\n<li>If X.node is a file, load X.node as binary addon. STOP</li>\n</ol>\n<p>LOAD_INDEX(X)</p>\n<ol>\n<li>If X/index.js is a file, load X/index.js as JavaScript text. STOP</li>\n<li>If X/index.json is a file, parse X/index.json to a JavaScript object. STOP</li>\n<li>If X/index.node is a file, load X/index.node as binary addon. STOP</li>\n</ol>\n<p>LOAD<em>AS</em>DIRECTORY(X)</p>\n<ol>\n<li>If X/package.json is a file,\na. Parse X/package.json, and look for \"main\" field.\nb. If \"main\" is a falsy value, GOTO 2.\nc. let M = X + (json main field)\nd. LOAD<em>AS</em>FILE(M)\ne. LOAD<em>INDEX(M)\nf. LOAD</em>INDEX(X) DEPRECATED\ng. THROW \"not found\"</li>\n<li>LOAD_INDEX(X)</li>\n</ol>\n<p>LOAD<em>NODE</em>MODULES(X, START)</p>\n<ol>\n<li>let DIRS = NODE<em>MODULES</em>PATHS(START)</li>\n<li>for each DIR in DIRS:\na. LOAD<em>PACKAGE</em>EXPORTS(X, DIR)\nb. LOAD<em>AS</em>FILE(DIR/X)\nc. LOAD<em>AS</em>DIRECTORY(DIR/X)</li>\n</ol>\n<p>NODE<em>MODULES</em>PATHS(START)</p>\n<ol>\n<li>let PARTS = path split(START)</li>\n<li>let I = count of PARTS - 1</li>\n<li>let DIRS = [GLOBAL_FOLDERS]</li>\n<li>while I >= 0,\na. if PARTS[I] = \"node<em>modules\" CONTINUE\nb. DIR = path join(PARTS[0 .. I] + \"node</em>modules\")\nc. DIRS = DIRS + DIR\nd. let I = I - 1</li>\n<li>return DIRS</li>\n</ol>\n<p>LOAD<em>PACKAGE</em>IMPORTS(X, DIR)</p>\n<ol>\n<li>Find the closest package scope SCOPE to DIR.</li>\n<li>If no scope was found, return.</li>\n<li>If the SCOPE/package.json \"imports\" is null or undefined, return.</li>\n<li>let MATCH = PACKAGE<em>IMPORTS</em>RESOLVE(X, pathToFileURL(SCOPE),\n[\"node\", \"require\"]) <a href=\"https://nodejs.org/api/esm.md#resolver-algorithm-specification\">defined in the ESM resolver</a>.</li>\n<li>RESOLVE<em>ESM</em>MATCH(MATCH).</li>\n</ol>\n<p>LOAD<em>PACKAGE</em>EXPORTS(X, DIR)</p>\n<ol>\n<li>Try to interpret X as a combination of NAME and SUBPATH where the name\nmay have a @scope/ prefix and the subpath begins with a slash (<code>/</code>).</li>\n<li>If X does not match this pattern or DIR/NAME/package.json is not a file,\nreturn.</li>\n<li>Parse DIR/NAME/package.json, and look for \"exports\" field.</li>\n<li>If \"exports\" is null or undefined, return.</li>\n<li>let MATCH = PACKAGE<em>EXPORTS</em>RESOLVE(pathToFileURL(DIR/NAME), \".\" + SUBPATH,\n<code>package.json</code> \"exports\", [\"node\", \"require\"]) <a href=\"https://nodejs.org/api/esm.md#resolver-algorithm-specification\">defined in the ESM resolver</a>.</li>\n<li>RESOLVE<em>ESM</em>MATCH(MATCH)</li>\n</ol>\n<p>LOAD<em>PACKAGE</em>SELF(X, DIR)</p>\n<ol>\n<li>Find the closest package scope SCOPE to DIR.</li>\n<li>If no scope was found, return.</li>\n<li>If the SCOPE/package.json \"exports\" is null or undefined, return.</li>\n<li>If the SCOPE/package.json \"name\" is not the first segment of X, return.</li>\n<li>let MATCH = PACKAGE<em>EXPORTS</em>RESOLVE(pathToFileURL(SCOPE),\n\".\" + X.slice(\"name\".length), <code>package.json</code> \"exports\", [\"node\", \"require\"])\n<a href=\"https://nodejs.org/api/esm.md#resolver-algorithm-specification\">defined in the ESM resolver</a>.</li>\n<li>RESOLVE<em>ESM</em>MATCH(MATCH)</li>\n</ol>\n<p>RESOLVE<em>ESM</em>MATCH(MATCH)</p>\n<ol>\n<li>let { RESOLVED, EXACT } = MATCH</li>\n<li>let RESOLVED_PATH = fileURLToPath(RESOLVED)</li>\n<li>If EXACT is true,\na. If the file at RESOLVED<em>PATH exists, load RESOLVED</em>PATH as its extension\nformat. STOP</li>\n<li>Otherwise, if EXACT is false,\na. LOAD<em>AS</em>FILE(RESOLVED<em>PATH)\nb. LOAD</em>AS<em>DIRECTORY(RESOLVED</em>PATH)</li>\n<li>THROW \"not found\"</li>\n</ol>\n<h3>Caching<a href=\"https://nodejs.org/api/modules.html#modules_caching\">#</a></h3>\n<p>Modules are cached after the first time they are loaded. This means (among other things) that every call to <code>require('foo')</code> will get exactly the same object returned, if it would resolve to the same file.</p>\n<p>Provided <code>require.cache</code> is not modified, multiple calls to <code>require('foo')</code> will not cause the module code to be executed multiple times. This is an important feature. With it, \"partially done\" objects can be returned, thus allowing transitive dependencies to be loaded even when they would cause cycles.</p>\n<p>To have a module execute code multiple times, export a function, and call that function.</p>\n<h4>Module caching caveats<a href=\"https://nodejs.org/api/modules.html#modules_module_caching_caveats\">#</a></h4>\n<p>Modules are cached based on their resolved filename. Since modules may resolve to a different filename based on the location of the calling module (loading from <code>node_modules</code> folders), it is not a <em>guarantee</em> that <code>require('foo')</code> will always return the exact same object, if it would resolve to different files.</p>\n<p>Additionally, on case-insensitive file systems or operating systems, different resolved filenames can point to the same file, but the cache will still treat them as different modules and will reload the file multiple times. For example, <code>require('./foo')</code> and <code>require('./FOO')</code> return two different objects, irrespective of whether or not <code>./foo</code> and <code>./FOO</code> are the same file.</p>\n<h3>Core modules<a href=\"https://nodejs.org/api/modules.html#modules_core_modules\">#</a></h3>\n<p>History</p>\n<p>Node.js has several modules compiled into the binary. These modules are described in greater detail elsewhere in this documentation.</p>\n<p>The core modules are defined within the Node.js source and are located in the <code>lib/</code> folder.</p>\n<p>Core modules are always preferentially loaded if their identifier is passed to <code>require()</code>. For instance, <code>require('http')</code> will always return the built in HTTP module, even if there is a file by that name.</p>\n<p>Core modules can also be identified using the <code>node:</code> prefix, in which case it bypasses the <code>require</code> cache. For instance, <code>require('node:http')</code> will always return the built in HTTP module, even if there is <code>require.cache</code> entry by that name.</p>\n<h3>Cycles<a href=\"https://nodejs.org/api/modules.html#modules_cycles\">#</a></h3>\n<p>When there are circular <code>require()</code> calls, a module might not have finished executing when it is returned.</p>\n<p>Consider this situation:</p>\n<p><code>a.js</code>:</p>\n<pre><code>console.log('a starting');\nexports.done = false;\nconst b = require('./b.js');\nconsole.log('in a, b.done = %j', b.done);\nexports.done = true;\nconsole.log('a done');\n</code></pre>\n<p><code>b.js</code>:</p>\n<pre><code>console.log('b starting');\nexports.done = false;\nconst a = require('./a.js');\nconsole.log('in b, a.done = %j', a.done);\nexports.done = true;\nconsole.log('b done');\n</code></pre>\n<p><code>main.js</code>:</p>\n<pre><code>console.log('main starting');\nconst a = require('./a.js');\nconst b = require('./b.js');\nconsole.log('in main, a.done = %j, b.done = %j', a.done, b.done);\n</code></pre>\n<p>When <code>main.js</code> loads <code>a.js</code>, then <code>a.js</code> in turn loads <code>b.js</code>. At that point, <code>b.js</code> tries to load <code>a.js</code>. In order to prevent an infinite loop, an unfinished copy of the <code>a.js</code> exports object is returned to the <code>b.js</code> module. <code>b.js</code> then finishes loading, and its <code>exports</code> object is provided to the <code>a.js</code> module.</p>\n<p>By the time <code>main.js</code> has loaded both modules, they're both finished. The output of this program would thus be:</p>\n<pre><code>$ node main.js\nmain starting\na starting\nb starting\nin b, a.done = false\nb done\nin a, b.done = true\na done\nin main, a.done = true, b.done = true\n</code></pre>\n<p>Careful planning is required to allow cyclic module dependencies to work correctly within an application.</p>\n<h3>File modules<a href=\"https://nodejs.org/api/modules.html#modules_file_modules\">#</a></h3>\n<p>If the exact filename is not found, then Node.js will attempt to load the required filename with the added extensions: <code>.js</code>, <code>.json</code>, and finally <code>.node</code>.</p>\n<p><code>.js</code> files are interpreted as JavaScript text files, and <code>.json</code> files are parsed as JSON text files. <code>.node</code> files are interpreted as compiled addon modules loaded with <code>process.dlopen()</code>.</p>\n<p>A required module prefixed with <code>'/'</code> is an absolute path to the file. For example, <code>require('/home/marco/foo.js')</code> will load the file at <code>/home/marco/foo.js</code>.</p>\n<p>A required module prefixed with <code>'./'</code> is relative to the file calling <code>require()</code>. That is, <code>circle.js</code> must be in the same directory as <code>foo.js</code> for <code>require('./circle')</code> to find it.</p>\n<p>Without a leading <code>'/'</code>, <code>'./'</code>, or <code>'../'</code> to indicate a file, the module must either be a core module or is loaded from a <code>node_modules</code> folder.</p>\n<p>If the given path does not exist, <code>require()</code> will throw an <a href=\"https://nodejs.org/api/errors.html#errors_class_error\"><code>Error</code></a> with its <code>code</code> property set to <code>'MODULE_NOT_FOUND'</code>.</p>\n<h3>Folders as modules<a href=\"https://nodejs.org/api/modules.html#modules_folders_as_modules\">#</a></h3>\n<p>It is convenient to organize programs and libraries into self-contained directories, and then provide a single entry point to those directories. There are three ways in which a folder may be passed to <code>require()</code> as an argument.</p>\n<p>The first is to create a <a href=\"https://nodejs.org/api/packages.html#packages_node_js_package_json_field_definitions\"><code>package.json</code></a> file in the root of the folder, which specifies a <code>main</code> module. An example <a href=\"https://nodejs.org/api/packages.html#packages_node_js_package_json_field_definitions\"><code>package.json</code></a> file might look like this:</p>\n<pre><code>{ \"name\" : \"some-library\",\n  \"main\" : \"./lib/some-library.js\" }\n</code></pre>\n<p>If this was in a folder at <code>./some-library</code>, then <code>require('./some-library')</code> would attempt to load <code>./some-library/lib/some-library.js</code>.</p>\n<p>This is the extent of the awareness of <code>package.json</code> files within Node.js.</p>\n<p>If there is no <a href=\"https://nodejs.org/api/packages.html#packages_node_js_package_json_field_definitions\"><code>package.json</code></a> file present in the directory, or if the <a href=\"https://nodejs.org/api/packages.html#packages_main\"><code>\"main\"</code></a> entry is missing or cannot be resolved, then Node.js will attempt to load an <code>index.js</code> or <code>index.node</code> file out of that directory. For example, if there was no <a href=\"https://nodejs.org/api/packages.html#packages_node_js_package_json_field_definitions\"><code>package.json</code></a> file in the previous example, then <code>require('./some-library')</code> would attempt to load:</p>\n<ul>\n<li><code>./some-library/index.js</code></li>\n<li><code>./some-library/index.node</code></li>\n</ul>\n<p>If these attempts fail, then Node.js will report the entire module as missing with the default error:</p>\n<pre><code>Error: Cannot find module 'some-library'\n</code></pre>\n<h3>Loading from <code>node_modules</code> folders<a href=\"https://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders\">#</a></h3>\n<p>If the module identifier passed to <code>require()</code> is not a <a href=\"https://nodejs.org/api/modules.html#modules_core_modules\">core</a> module, and does not begin with <code>'/'</code>, <code>'../'</code>, or <code>'./'</code>, then Node.js starts at the parent directory of the current module, and adds <code>/node_modules</code>, and attempts to load the module from that location. Node.js will not append <code>node_modules</code> to a path already ending in <code>node_modules</code>.</p>\n<p>If it is not found there, then it moves to the parent directory, and so on, until the root of the file system is reached.</p>\n<p>For example, if the file at <code>'/home/ry/projects/foo.js'</code> called <code>require('bar.js')</code>, then Node.js would look in the following locations, in this order:</p>\n<ul>\n<li><code>/home/ry/projects/node_modules/bar.js</code></li>\n<li><code>/home/ry/node_modules/bar.js</code></li>\n<li><code>/home/node_modules/bar.js</code></li>\n<li><code>/node_modules/bar.js</code></li>\n</ul>\n<p>This allows programs to localize their dependencies, so that they do not clash.</p>\n<p>It is possible to require specific files or sub modules distributed with a module by including a path suffix after the module name. For instance <code>require('example-module/path/to/file')</code> would resolve <code>path/to/file</code> relative to where <code>example-module</code> is located. The suffixed path follows the same module resolution semantics.</p>\n<h3>Loading from the global folders<a href=\"https://nodejs.org/api/modules.html#modules_loading_from_the_global_folders\">#</a></h3>\n<p>If the <code>NODE_PATH</code> environment variable is set to a colon-delimited list of absolute paths, then Node.js will search those paths for modules if they are not found elsewhere.</p>\n<p>On Windows, <code>NODE_PATH</code> is delimited by semicolons (<code>;</code>) instead of colons.</p>\n<p><code>NODE_PATH</code> was originally created to support loading modules from varying paths before the current <a href=\"https://nodejs.org/api/modules.html#modules_all_together\">module resolution</a> algorithm was defined.</p>\n<p><code>NODE_PATH</code> is still supported, but is less necessary now that the Node.js ecosystem has settled on a convention for locating dependent modules. Sometimes deployments that rely on <code>NODE_PATH</code> show surprising behavior when people are unaware that <code>NODE_PATH</code> must be set. Sometimes a module's dependencies change, causing a different version (or even a different module) to be loaded as the <code>NODE_PATH</code> is searched.</p>\n<p>Additionally, Node.js will search in the following list of GLOBAL_FOLDERS:</p>\n<ul>\n<li>1: <code>$HOME/.node_modules</code></li>\n<li>2: <code>$HOME/.node_libraries</code></li>\n<li>3: <code>$PREFIX/lib/node</code></li>\n</ul>\n<p>Where <code>$HOME</code> is the user's home directory, and <code>$PREFIX</code> is the Node.js configured <code>node_prefix</code>.</p>\n<p>These are mostly for historic reasons.</p>\n<p>It is strongly encouraged to place dependencies in the local <code>node_modules</code> folder. These will be loaded faster, and more reliably.</p>\n<h3>The module wrapper<a href=\"https://nodejs.org/api/modules.html#modules_the_module_wrapper\">#</a></h3>\n<p>Before a module's code is executed, Node.js will wrap it with a function wrapper that looks like the following:</p>\n<pre><code>(function(exports, require, module, __filename, __dirname) {\n// Module code actually lives in here\n});\n</code></pre>\n<p>By doing this, Node.js achieves a few things:</p>\n<ul>\n<li>It keeps top-level variables (defined with <code>var</code>, <code>const</code> or <code>let</code>) scoped to the module rather than the global object.</li>\n<li>\n<p>It helps to provide some global-looking variables that are actually specific to the module, such as:</p>\n<ul>\n<li>The <code>module</code> and <code>exports</code> objects that the implementor can use to export values from the module.</li>\n<li>The convenience variables <code>__filename</code> and <code>__dirname</code>, containing the module's absolute filename and directory path.</li>\n</ul>\n</li>\n</ul>\n<h3>The module scope<a href=\"https://nodejs.org/api/modules.html#modules_the_module_scope\">#</a></h3>\n<h4><code>__dirname</code><a href=\"https://nodejs.org/api/modules.html#modules_dirname\">#</a></h4>\n<p>Added in: v0.1.27</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a></li>\n</ul>\n<p>The directory name of the current module. This is the same as the <a href=\"https://nodejs.org/api/path.html#path_path_dirname_path\"><code>path.dirname()</code></a> of the <a href=\"https://nodejs.org/api/modules.html#modules_filename\"><code>__filename</code></a>.</p>\n<p>Example: running <code>node example.js</code> from <code>/Users/mjr</code></p>\n<pre><code>console.log(__dirname);\n// Prints: /Users/mjr\nconsole.log(path.dirname(__filename));\n// Prints: /Users/mjr\n</code></pre>\n<h4><code>__filename</code><a href=\"https://nodejs.org/api/modules.html#modules_filename\">#</a></h4>\n<p>Added in: v0.0.1</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a></li>\n</ul>\n<p>The file name of the current module. This is the current module file's absolute path with symlinks resolved.</p>\n<p>For a main program this is not necessarily the same as the file name used in the command line.</p>\n<p>See <a href=\"https://nodejs.org/api/modules.html#modules_dirname\"><code>__dirname</code></a> for the directory name of the current module.</p>\n<p>Examples:</p>\n<p>Running <code>node example.js</code> from <code>/Users/mjr</code></p>\n<pre><code>console.log(__filename);\n// Prints: /Users/mjr/example.js\nconsole.log(__dirname);\n// Prints: /Users/mjr\n</code></pre>\n<p>Given two modules: <code>a</code> and <code>b</code>, where <code>b</code> is a dependency of <code>a</code> and there is a directory structure of:</p>\n<ul>\n<li><code>/Users/mjr/app/a.js</code></li>\n<li><code>/Users/mjr/app/node_modules/b/b.js</code></li>\n</ul>\n<p>References to <code>__filename</code> within <code>b.js</code> will return <code>/Users/mjr/app/node_modules/b/b.js</code> while references to <code>__filename</code> within <code>a.js</code> will return <code>/Users/mjr/app/a.js</code>.</p>\n<h4><code>exports</code><a href=\"https://nodejs.org/api/modules.html#modules_exports\">#</a></h4>\n<p>Added in: v0.1.12</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><Object></a></li>\n</ul>\n<p>A reference to the <code>module.exports</code> that is shorter to type. See the section about the <a href=\"https://nodejs.org/api/modules.html#modules_exports_shortcut\">exports shortcut</a> for details on when to use <code>exports</code> and when to use <code>module.exports</code>.</p>\n<h4><code>module</code><a href=\"https://nodejs.org/api/modules.html#modules_module\">#</a></h4>\n<p>Added in: v0.1.16</p>\n<ul>\n<li><a href=\"https://nodejs.org/api/modules.html#modules_the_module_object\"><module></a></li>\n</ul>\n<p>A reference to the current module, see the section about the <a href=\"https://nodejs.org/api/modules.html#modules_the_module_object\"><code>module</code> object</a>. In particular, <code>module.exports</code> is used for defining what a module exports and makes available through <code>require()</code>.</p>\n<h4><code>require(id)</code><a href=\"https://nodejs.org/api/modules.html#modules_require_id\">#</a></h4>\n<p>Added in: v0.1.13</p>\n<ul>\n<li><code>id</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a> module name or path</li>\n<li>Returns: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\"><any></a> exported module content</li>\n</ul>\n<p>Used to import modules, <code>JSON</code>, and local files. Modules can be imported from <code>node_modules</code>. Local modules and JSON files can be imported using a relative path (e.g. <code>./</code>, <code>./foo</code>, <code>./bar/baz</code>, <code>../foo</code>) that will be resolved against the directory named by <a href=\"https://nodejs.org/api/modules.html#modules_dirname\"><code>__dirname</code></a> (if defined) or the current working directory. The relative paths of POSIX style are resolved in an OS independent fashion, meaning that the examples above will work on Windows in the same way they would on Unix systems.</p>\n<pre><code>// Importing a local module with a path relative to the `__dirname` or current\n// working directory. (On Windows, this would resolve to .\\path\\myLocalModule.)\nconst myLocalModule = require('./path/myLocalModule');\n\n// Importing a JSON file:\nconst jsonData = require('./path/filename.json');\n\n// Importing a module from node_modules or Node.js built-in module:\nconst crypto = require('crypto');\n</code></pre>\n<h5><code>require.cache</code><a href=\"https://nodejs.org/api/modules.html#modules_require_cache\">#</a></h5>\n<p>Added in: v0.3.0</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><Object></a></li>\n</ul>\n<p>Modules are cached in this object when they are required. By deleting a key value from this object, the next <code>require</code> will reload the module. This does not apply to <a href=\"https://nodejs.org/api/addons.html\">native addons</a>, for which reloading will result in an error.</p>\n<p>Adding or replacing entries is also possible. This cache is checked before native modules and if a name matching a native module is added to the cache, only <code>node:</code>-prefixed require calls are going to receive the native module. Use with care!</p>\n<pre><code>const assert = require('assert');\nconst realFs = require('fs');\n\nconst fakeFs = {};\nrequire.cache.fs = { exports: fakeFs };\n\nassert.strictEqual(require('fs'), fakeFs);\nassert.strictEqual(require('node:fs'), realFs);\n</code></pre>\n<h5><code>require.extensions</code><a href=\"https://nodejs.org/api/modules.html#modules_require_extensions\">#</a></h5>\n<p>Added in: v0.3.0Deprecated since: v0.10.6</p>\n<p><a href=\"https://nodejs.org/api/documentation.html#documentation_stability_index\">Stability: 0</a> - Deprecated</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><Object></a></li>\n</ul>\n<p>Instruct <code>require</code> on how to handle certain file extensions.</p>\n<p>Process files with the extension <code>.sjs</code> as <code>.js</code>:</p>\n<pre><code>require.extensions['.sjs'] = require.extensions['.js'];\n</code></pre>\n<p>Deprecated. In the past, this list has been used to load non-JavaScript modules into Node.js by compiling them on-demand. However, in practice, there are much better ways to do this, such as loading modules via some other Node.js program, or compiling them to JavaScript ahead of time.</p>\n<p>Avoid using <code>require.extensions</code>. Use could cause subtle bugs and resolving the extensions gets slower with each registered extension.</p>\n<h5><code>require.main</code><a href=\"https://nodejs.org/api/modules.html#modules_require_main\">#</a></h5>\n<p>Added in: v0.1.17</p>\n<ul>\n<li><a href=\"https://nodejs.org/api/modules.html#modules_the_module_object\"><module></a></li>\n</ul>\n<p>The <code>Module</code> object representing the entry script loaded when the Node.js process launched. See <a href=\"https://nodejs.org/api/modules.html#modules_accessing_the_main_module\">\"Accessing the main module\"</a>.</p>\n<p>In <code>entry.js</code> script:</p>\n<pre><code>console.log(require.main);\n</code></pre>\n<pre><code>node entry.js\n</code></pre>\n<pre><code>Module {\n  id: '.',\n  path: '/absolute/path/to',\n  exports: {},\n  filename: '/absolute/path/to/entry.js',\n  loaded: false,\n  children: [],\n  paths:\n   [ '/absolute/path/to/node_modules',\n     '/absolute/path/node_modules',\n     '/absolute/node_modules',\n     '/node_modules' ] }\n</code></pre>\n<h5><code>require.resolve(request[, options])</code><a href=\"https://nodejs.org/api/modules.html#modules_require_resolve_request_options\">#</a></h5>\n<p>History</p>\n<ul>\n<li><code>request</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a> The module path to resolve.</li>\n<li>\n<p><code>options</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><Object></a></p>\n<ul>\n<li><code>paths</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\">&#x3C;string[]></a> Paths to resolve module location from. If present, these paths are used instead of the default resolution paths, with the exception of <a href=\"https://nodejs.org/api/modules.html#modules_loading_from_the_global_folders\">GLOBAL_FOLDERS</a> like <code>$HOME/.node_modules</code>, which are always included. Each of these paths is used as a starting point for the module resolution algorithm, meaning that the <code>node_modules</code> hierarchy is checked from this location.</li>\n</ul>\n</li>\n<li>Returns: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a></li>\n</ul>\n<p>Use the internal <code>require()</code> machinery to look up the location of a module, but rather than loading the module, just return the resolved filename.</p>\n<p>If the module can not be found, a <code>MODULE_NOT_FOUND</code> error is thrown.</p>\n<h6><code>require.resolve.paths(request)</code><a href=\"https://nodejs.org/api/modules.html#modules_require_resolve_paths_request\">#</a></h6>\n<p>Added in: v8.9.0</p>\n<ul>\n<li><code>request</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a> The module path whose lookup paths are being retrieved.</li>\n<li>Returns: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\">&#x3C;string[]></a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type\"><null></a></li>\n</ul>\n<p>Returns an array containing the paths searched during resolution of <code>request</code> or <code>null</code> if the <code>request</code> string references a core module, for example <code>http</code> or <code>fs</code>.</p>\n<h3>The <code>module</code> object<a href=\"https://nodejs.org/api/modules.html#modules_the_module_object\">#</a></h3>\n<p>Added in: v0.1.16</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><Object></a></li>\n</ul>\n<p>In each module, the <code>module</code> free variable is a reference to the object representing the current module. For convenience, <code>module.exports</code> is also accessible via the <code>exports</code> module-global. <code>module</code> is not actually a global but rather local to each module.</p>\n<h4><code>module.children</code><a href=\"https://nodejs.org/api/modules.html#modules_module_children\">#</a></h4>\n<p>Added in: v0.1.16</p>\n<ul>\n<li><a href=\"https://nodejs.org/api/modules.html#modules_the_module_object\">&#x3C;module[]></a></li>\n</ul>\n<p>The module objects required for the first time by this one.</p>\n<h4><code>module.exports</code><a href=\"https://nodejs.org/api/modules.html#modules_module_exports\">#</a></h4>\n<p>Added in: v0.1.16</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\"><Object></a></li>\n</ul>\n<p>The <code>module.exports</code> object is created by the <code>Module</code> system. Sometimes this is not acceptable; many want their module to be an instance of some class. To do this, assign the desired export object to <code>module.exports</code>. Assigning the desired object to <code>exports</code> will simply rebind the local <code>exports</code> variable, which is probably not what is desired.</p>\n<p>For example, suppose we were making a module called <code>a.js</code>:</p>\n<pre><code>const EventEmitter = require('events');\n\nmodule.exports = new EventEmitter();\n\n// Do some work, and after some time emit\n// the 'ready' event from the module itself.\nsetTimeout(() => {\n  module.exports.emit('ready');\n}, 1000);\n</code></pre>\n<p>Then in another file we could do:</p>\n<pre><code>const a = require('./a');\na.on('ready', () => {\n  console.log('module \"a\" is ready');\n});\n</code></pre>\n<p>Assignment to <code>module.exports</code> must be done immediately. It cannot be done in any callbacks. This does not work:</p>\n<p><code>x.js</code>:</p>\n<pre><code>setTimeout(() => {\n  module.exports = { a: 'hello' };\n}, 0);\n</code></pre>\n<p><code>y.js</code>:</p>\n<pre><code>const x = require('./x');\nconsole.log(x.a);\n</code></pre>\n<h5><code>exports</code> shortcut<a href=\"https://nodejs.org/api/modules.html#modules_exports_shortcut\">#</a></h5>\n<p>Added in: v0.1.16</p>\n<p>The <code>exports</code> variable is available within a module's file-level scope, and is assigned the value of <code>module.exports</code> before the module is evaluated.</p>\n<p>It allows a shortcut, so that <code>module.exports.f = ...</code> can be written more succinctly as <code>exports.f = ...</code>. However, be aware that like any variable, if a new value is assigned to <code>exports</code>, it is no longer bound to <code>module.exports</code>:</p>\n<pre><code>module.exports.hello = true; // Exported from require of module\nexports = { hello: false };  // Not exported, only available in the module\n</code></pre>\n<p>When the <code>module.exports</code> property is being completely replaced by a new object, it is common to also reassign <code>exports</code>:</p>\n<pre><code>module.exports = exports = function Constructor() {\n  // ... etc.\n};\n</code></pre>\n<p>To illustrate the behavior, imagine this hypothetical implementation of <code>require()</code>, which is quite similar to what is actually done by <code>require()</code>:</p>\n<pre><code>function require(/* ... */) {\n  const module = { exports: {} };\n  ((module, exports) => {\n    // Module code here. In this example, define a function.\n    function someFunc() {}\n    exports = someFunc;\n    // At this point, exports is no longer a shortcut to module.exports, and\n    // this module will still export an empty default object.\n    module.exports = someFunc;\n    // At this point, the module will now export someFunc, instead of the\n    // default object.\n  })(module, module.exports);\n  return module.exports;\n}\n</code></pre>\n<h4><code>module.filename</code><a href=\"https://nodejs.org/api/modules.html#modules_module_filename\">#</a></h4>\n<p>Added in: v0.1.16</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a></li>\n</ul>\n<p>The fully resolved filename of the module.</p>\n<h4><code>module.id</code><a href=\"https://nodejs.org/api/modules.html#modules_module_id\">#</a></h4>\n<p>Added in: v0.1.16</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a></li>\n</ul>\n<p>The identifier for the module. Typically this is the fully resolved filename.</p>\n<h4><code>module.isPreloading</code><a href=\"https://nodejs.org/api/modules.html#modules_module_ispreloading\">#</a></h4>\n<p>Added in: v15.4.0</p>\n<ul>\n<li>Type: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type\"><boolean></a> <code>true</code> if the module is running during the Node.js preload phase.</li>\n</ul>\n<h4><code>module.loaded</code><a href=\"https://nodejs.org/api/modules.html#modules_module_loaded\">#</a></h4>\n<p>Added in: v0.1.16</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type\"><boolean></a></li>\n</ul>\n<p>Whether or not the module is done loading, or is in the process of loading.</p>\n<h4><code>module.parent</code><a href=\"https://nodejs.org/api/modules.html#modules_module_parent\">#</a></h4>\n<p>Added in: v0.1.16Deprecated since: v14.6.0, v12.19.0</p>\n<p><a href=\"https://nodejs.org/api/documentation.html#documentation_stability_index\">Stability: 0</a> - Deprecated: Please use <a href=\"https://nodejs.org/api/modules.html#modules_require_main\"><code>require.main</code></a> and <a href=\"https://nodejs.org/api/modules.html#modules_module_children\"><code>module.children</code></a> instead.</p>\n<ul>\n<li><a href=\"https://nodejs.org/api/modules.html#modules_the_module_object\"><module></a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type\"><null></a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type\"><undefined></a></li>\n</ul>\n<p>The module that first required this one, or <code>null</code> if the current module is the entry point of the current process, or <code>undefined</code> if the module was loaded by something that is not a CommonJS module (E.G.: REPL or <code>import</code>).</p>\n<h4><code>module.path</code><a href=\"https://nodejs.org/api/modules.html#modules_module_path\">#</a></h4>\n<p>Added in: v11.14.0</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a></li>\n</ul>\n<p>The directory name of the module. This is usually the same as the <a href=\"https://nodejs.org/api/path.html#path_path_dirname_path\"><code>path.dirname()</code></a> of the <a href=\"https://nodejs.org/api/modules.html#modules_module_id\"><code>module.id</code></a>.</p>\n<h4><code>module.paths</code><a href=\"https://nodejs.org/api/modules.html#modules_module_paths\">#</a></h4>\n<p>Added in: v0.4.0</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\">&#x3C;string[]></a></li>\n</ul>\n<p>The search paths for the module.</p>\n<h4><code>module.require(id)</code><a href=\"https://nodejs.org/api/modules.html#modules_module_require_id\">#</a></h4>\n<p>Added in: v0.5.1</p>\n<ul>\n<li><code>id</code> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type\"><string></a></li>\n<li>Returns: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types\"><any></a> exported module content</li>\n</ul>\n<p>The <code>module.require()</code> method provides a way to load a module as if <code>require()</code> was called from the original module.</p>\n<p>In order to do this, it is necessary to get a reference to the <code>module</code> object. Since <code>require()</code> returns the <code>module.exports</code>, and the <code>module</code> is typically <em>only</em> available within a specific module's code, it must be explicitly exported in order to be used.</p>\n<h3>The <code>Module</code> object<a href=\"https://nodejs.org/api/modules.html#modules_the_module_object_1\">#</a></h3>\n<p>This section was moved to <a href=\"https://nodejs.org/api/module.html#module_the_module_object\">Modules: <code>module</code> core module</a>.</p>\n<ul>\n<li><a href=\"https://nodejs.org/api/module.html#module_module_builtinmodules\"><code>module.builtinModules</code></a></li>\n<li><a href=\"https://nodejs.org/api/module.html#module_module_createrequire_filename\"><code>module.createRequire(filename)</code></a></li>\n<li><a href=\"https://nodejs.org/api/module.html#module_module_syncbuiltinesmexports\"></a></li>\n</ul>"},{"url":"/docs/articles/os-module/","relativePath":"docs/articles/os-module.md","relativeDir":"docs/articles","base":"os-module.md","name":"os-module","frontmatter":{"title":"OS-Module","sections":[],"seo":{"title":"","description":"OS-Module","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h1>This module provides many functions that you can use to retrieve information from the underlying operating system and the computer the program runs on, and interact with it.</h1>\n<pre><code class=\"language-js\">const os = require('os');\n</code></pre>\n<p>There are a few useful properties that tell us some key things related to handling files:</p>\n<p><code>os.EOL</code> gives the line delimiter sequence. It's <code>\\n</code> on Linux and macOS, and <code>\\r\\n</code> on Windows.</p>\n<p><code>os.constants.signals</code> tells us all the constants related to handling process signals, like SIGHUP, SIGKILL and so on.</p>\n<p><code>os.constants.errno</code> sets the constants for error reporting, like EADDRINUSE, EOVERFLOW and more.</p>\n<p>You can read them all on <a href=\"https://nodejs.org/api/os.html#os_signal_constants\">https://nodejs.org/api/os.html#os_signal_constants</a>.</p>\n<p>Let's now see the main methods that <code>os</code> provides:</p>\n<h2><code>os.arch()</code></h2>\n<p>Return the string that identifies the underlying architecture, like <code>arm</code>, <code>x64</code>, <code>arm64</code>.</p>\n<h2><code>os.cpus()</code></h2>\n<p>Return information on the CPUs available on your system.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">[\n    {\n        model: 'Intel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz',\n        speed: 2400,\n        times: {\n            user: 281685380,\n            nice: 0,\n            sys: 187986530,\n            idle: 685833750,\n            irq: 0\n        }\n    },\n    {\n        model: 'Intel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz',\n        speed: 2400,\n        times: {\n            user: 282348700,\n            nice: 0,\n            sys: 161800480,\n            idle: 703509470,\n            irq: 0\n        }\n    }\n];\n</code></pre>\n<h2><code>os.endianness()</code></h2>\n<p>Return <code>BE</code> or <code>LE</code> depending if Node.js was compiled with <a href=\"https://en.wikipedia.org/wiki/Endianness\">Big Endian or Little Endian</a>.</p>\n<h2><code>os.freemem()</code></h2>\n<p>Return the number of bytes that represent the free memory in the system.</p>\n<h2><code>os.homedir()</code></h2>\n<p>Return the path to the home directory of the current user.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">'/Users/joe';\n</code></pre>\n<h2><code>os.hostname()</code></h2>\n<p>Return the host name.</p>\n<h2><code>os.loadavg()</code></h2>\n<p>Return the calculation made by the operating system on the load average.</p>\n<p>It only returns a meaningful value on Linux and macOS.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">[3.68798828125, 4.00244140625, 11.1181640625];\n</code></pre>\n<h2><code>os.networkInterfaces()</code></h2>\n<p>Returns the details of the network interfaces available on your system.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">{ lo0:\n   [ { address: '127.0.0.1',\n       netmask: '255.0.0.0',\n       family: 'IPv4',\n       mac: 'fe:82:00:00:00:00',\n       internal: true },\n     { address: '::1',\n       netmask: 'ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff',\n       family: 'IPv6',\n       mac: 'fe:82:00:00:00:00',\n       scopeid: 0,\n       internal: true },\n     { address: 'fe80::1',\n       netmask: 'ffff:ffff:ffff:ffff::',\n       family: 'IPv6',\n       mac: 'fe:82:00:00:00:00',\n       scopeid: 1,\n       internal: true } ],\n  en1:\n   [ { address: 'fe82::9b:8282:d7e6:496e',\n       netmask: 'ffff:ffff:ffff:ffff::',\n       family: 'IPv6',\n       mac: '06:00:00:02:0e:00',\n       scopeid: 5,\n       internal: false },\n     { address: '192.168.1.38',\n       netmask: '255.255.255.0',\n       family: 'IPv4',\n       mac: '06:00:00:02:0e:00',\n       internal: false } ],\n  utun0:\n   [ { address: 'fe80::2513:72bc:f405:61d0',\n       netmask: 'ffff:ffff:ffff:ffff::',\n       family: 'IPv6',\n       mac: 'fe:80:00:20:00:00',\n       scopeid: 8,\n       internal: false } ] }\n</code></pre>\n<h2><code>os.platform()</code></h2>\n<p>Return the platform that Node.js was compiled for:</p>\n<ul>\n<li><code>darwin</code></li>\n<li><code>freebsd</code></li>\n<li><code>linux</code></li>\n<li><code>openbsd</code></li>\n<li><code>win32</code></li>\n<li>...more</li>\n</ul>\n<h2><code>os.release()</code></h2>\n<p>Returns a string that identifies the operating system release number</p>\n<h2><code>os.tmpdir()</code></h2>\n<p>Returns the path to the assigned temp folder.</p>\n<h2><code>os.totalmem()</code></h2>\n<p>Returns the number of bytes that represent the total memory available in the system.</p>\n<h2><code>os.type()</code></h2>\n<p>Identifies the operating system:</p>\n<ul>\n<li><code>Linux</code></li>\n<li><code>Darwin</code> on macOS</li>\n<li><code>Windows_NT</code> on Windows</li>\n</ul>\n<h2><code>os.uptime()</code></h2>\n<p>Returns the number of seconds the computer has been running since it was last rebooted.</p>\n<h2><code>os.userInfo()</code></h2>\n<p>Returns an object that contains the current <code>username</code>, <code>uid</code>, <code>gid</code>, <code>shell</code>, and <code>homedir</code></p>"},{"url":"/docs/articles/semantic/","relativePath":"docs/articles/semantic.md","relativeDir":"docs/articles","base":"semantic.md","name":"semantic","frontmatter":{"title":"Semantic Versioning","sections":[],"seo":{"title":"","description":"Semantic Versioning using npm","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<p>If there's one great thing in Node.js packages, it's that they all agreed on using Semantic Versioning for their version numbering.</p>\n<p>The Semantic Versioning concept is simple: all versions have 3 digits: <code>x.y.z</code>.</p>\n<ul>\n<li>the first digit is the major version</li>\n<li>the second digit is the minor version</li>\n<li>the third digit is the patch version</li>\n</ul>\n<p>When you make a new release, you don't just up a number as you please, but you have rules:</p>\n<ul>\n<li>you up the major version when you make incompatible API changes</li>\n<li>you up the minor version when you add functionality in a backward-compatible manner</li>\n<li>you up the patch version when you make backward-compatible bug fixes</li>\n</ul>\n<p>The convention is adopted all across programming languages, and it is very important that every <code>npm</code> package adheres to it, because the whole system depends on that.</p>\n<p>Why is that so important?</p>\n<p>Because <code>npm</code> set some rules we can use in the <code>package.json</code> file to choose which versions it can update our packages to, when we run <code>npm update</code>.</p>\n<p>The rules use those symbols:</p>\n<ul>\n<li><code>^</code></li>\n<li><code>~</code></li>\n<li><code>></code></li>\n<li><code>>=</code></li>\n<li><code>&#x3C;</code></li>\n<li><code>&#x3C;=</code></li>\n<li><code>=</code></li>\n<li><code>-</code></li>\n<li><code>||</code></li>\n</ul>\n<p>Let's see those rules in detail:</p>\n<ul>\n<li><code>^</code>: It will only do updates that do not change the leftmost non-zero number. If you write <code>^0.13.0</code>, when running <code>npm update</code>, it can update to <code>0.13.1</code>, <code>0.13.2</code>, and so on, but not to <code>0.14.0</code> or above. If you write <code>^1.13.0</code>, when running <code>npm update</code>, it can update to <code>1.13.1</code>, <code>1.14.0</code> and so on, but will not update to <code>2.0.0</code> or above.</li>\n<li><code>~</code>: if you write <code>~0.13.0</code>, when running <code>npm update</code> it can update to patch releases: <code>0.13.1</code> is ok, but <code>0.14.0</code> is not.</li>\n<li><code>></code>: you accept any version higher than the one you specify</li>\n<li><code>>=</code>: you accept any version equal to or higher than the one you specify</li>\n<li><code>&#x3C;=</code>: you accept any version equal or lower to the one you specify</li>\n<li><code>&#x3C;</code>: you accept any version lower to the one you specify</li>\n<li><code>=</code>: you accept that exact version</li>\n<li><code>-</code>: you accept a range of versions. Example: <code>2.1.0 - 2.6.2</code></li>\n<li><code>||</code>: you combine sets. Example: <code>&#x3C; 2.1 || > 2.6</code></li>\n</ul>\n<p>You can combine some of those notations, for example use <code>1.0.0 || >=1.1.0 &#x3C;1.2.0</code> to either use 1.0.0 or one release from 1.1.0 up, but lower than 1.2.0.</p>\n<p>There are other rules, too:</p>\n<ul>\n<li>no symbol: you accept only that specific version you specify (<code>1.2.1</code>)</li>\n<li><code>latest</code>: you want to use the latest version available</li>\n</ul>"},{"url":"/docs/articles/v8/","relativePath":"docs/articles/v8.md","relativeDir":"docs/articles","base":"v8.md","name":"v8","frontmatter":{"title":"npm global or local packages","weight":1,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<p>The main difference between local and global packages is this:</p>\n<ul>\n<li><strong>local packages</strong> are installed in the directory where you run npm install &#x3C;package-name>, and they are put in the node_modules folder under this directory</li>\n<li><strong>global packages</strong> are all put in a single place in your system (exactly where depends on your setup), regardless of where you run npm install -g &#x3C;package-name></li>\n</ul>\n<p>In your code you can only require local packages:</p>\n<p>so when should you install in one way or another?</p>\n<p>In general, <strong>all packages should be installed locally</strong>.</p>\n<p>This makes sure you can have dozens of applications in your computer, all running a different version of each package if needed.</p>\n<p>Updating a global package would make all your projects use the new release, and as you can imagine this might cause nightmares in terms of maintenance, as some packages might break compatibility with further dependencies, and so on.</p>\n<p>All projects have their own local version of a package, even if this might appear like a waste of resources, it's minimal compared to the possible negative consequences.</p>\n<p>A package <strong>should be installed globally</strong> when it provides an executable command that you run from the shell (CLI), and it's reused across projects.</p>\n<p>You can also install executable commands locally and run them using npx, but some packages are just better installed globally.</p>\n<p>Great examples of popular global packages which you might know are</p>\n<ul>\n<li>npm</li>\n<li>create-react-app</li>\n<li>vue-cli</li>\n<li>grunt-cli</li>\n<li>mocha</li>\n<li>react-native-cli</li>\n<li>gatsby-cli</li>\n<li>forever</li>\n<li>nodemon</li>\n</ul>\n<p>You probably have some packages installed globally already on your system. You can see them by running</p>\n<p>on your command line.</p>"},{"url":"/docs/articles/understanding-firebase/","relativePath":"docs/articles/understanding-firebase.md","relativeDir":"docs/articles","base":"understanding-firebase.md","name":"understanding-firebase","frontmatter":{"title":"Firebase","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h1>Understand Firebase projects</h1>\n<p><strong>Note:</strong> If you're using the <a href=\"https://firebase.google.com/docs/projects/api/reference/rest?authuser=0\">Firebase Management REST API</a> to programmatically create a Firebase project, you must first <a href=\"https://cloud.google.com/resource-manager/reference/rest/v1/projects?authuser=0\">create a Google Cloud project</a>, then <a href=\"https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects/addFirebase?authuser=0\">add Firebase services</a> to the existing project.<strong>Note:</strong> The <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#project-number\">project number</a> and the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#project-id\">project ID</a> are the truly <em>unique identifiers</em> for a project across all of Firebase and Google Cloud.<strong>After Firebase provisions resources for a Firebase project, you cannot change its project ID.</strong> To use a specific identifier for Firebase resources, you must edit the project ID during the initial creation of the project.<strong>Caution:</strong> We do not recommend manually modifying an app's Firebase config file or object. If you initialize an app with invalid or missing values for any of these required \"Firebase options\", then your end users may experience serious issues.<strong>Note:</strong> For each Android app, if you provide a SHA-1 key for the app, you need to provide a package name and SHA-1 key combination that is globally unique across all of Google Cloud.</p>\n<p>This page offers brief overviews of several important concepts about Firebase projects. When available, follow the links to find more detailed information about features, services, and even other platforms. At the bottom of this page, find a listing of <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#best-practices\">general best practices</a> for Firebase projects.</p>\n<h2>Relationship between Firebase projects, apps, and products</h2>\n<p>A Firebase project is the top-level entity for Firebase. In a project, you create Firebase apps by registering your iOS, Android, or web apps. After you register your apps with Firebase, you can add the Firebase SDKs for any number of <a href=\"https://firebase.google.com/products/?authuser=0\">Firebase products</a>, like Analytics, Cloud Firestore, Performance Monitoring, or Remote Config.</p>\n<p>Learn more detailed information about this process in the Getting Started guides (<a href=\"https://firebase.google.com/docs/ios/setup?authuser=0\">iOS</a> | <a href=\"https://firebase.google.com/docs/android/setup?authuser=0\">Android</a> | <a href=\"https://firebase.google.com/docs/web/setup?authuser=0\">web</a> | <a href=\"https://firebase.google.com/docs/unity/setup?authuser=0\">Unity</a> | <a href=\"https://firebase.google.com/docs/cpp/setup?authuser=0\">C++</a>).</p>\n<h2>Relationship between Firebase projects and Google Cloud</h2>\n<p>When you create a new Firebase project in the Firebase console, you're actually creating a <a href=\"https://cloud.google.com/docs/overview/?authuser=0#projects\">Google Cloud project</a> behind the scenes. You can think of a Google Cloud project as a virtual container for data, code, configuration, and services. <strong>A Firebase project is a Google Cloud project that has additional Firebase-specific configurations and services.</strong> You can even create a Google Cloud project first, then add Firebase to the project later.</p>\n<p>Since a Firebase project <strong><em>is</em></strong> a Google Cloud project:</p>\n<ul>\n<li>Projects that appear in the <a href=\"https://console.firebase.google.com/?authuser=0\">Firebase console</a> also appear in the <a href=\"https://cloud.google.com/docs/overview/?authuser=0#google-cloud-console\">Google Cloud Console</a> and <a href=\"https://console.cloud.google.com/apis/?authuser=0\">Google APIs console</a>.</li>\n<li><a href=\"https://firebase.google.com/pricing/?authuser=0\">Billing</a> and <a href=\"https://firebase.google.com/docs/projects/iam/overview?authuser=0\">permissions</a> for projects are shared across Firebase and Google Cloud.</li>\n<li>Unique identifiers for a project (like the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#project-number\">project number</a> and the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#project-id\">project ID</a>) are shared across Firebase and Google Cloud.</li>\n<li>You can use products and APIs from both Firebase and Google Cloud in a project.</li>\n<li>Deleting a project deletes it across Firebase and Google Cloud.</li>\n</ul>\n<h2>Setting up a Firebase project and registering apps</h2>\n<p>You can set up a Firebase project and register apps in the <a href=\"https://console.firebase.google.com/?authuser=0\">Firebase console</a> (or, for advanced use cases, via the <a href=\"https://firebase.google.com/docs/projects/api/reference/rest?authuser=0\">Firebase Management REST API</a> or the <a href=\"https://firebase.google.com/docs/cli?authuser=0#management-commands\">Firebase CLI</a>). When you set up a project and register apps, you need to make some organizational decisions and add Firebase-specific configuration information to your local projects.</p>\n<p>Make sure to review some <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#best-practices\">general project-level best practices</a> (at the bottom of this page) before setting up a project and registering apps.</p>\n<h3>The project name</h3>\n<p>When you create a project, you provide a <strong>project name</strong>. This identifier is the <em>internal-only name</em> for a project in the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#manage-console\">Firebase console</a>, the <a href=\"https://cloud.google.com/docs/overview/?authuser=0#google-cloud-console\">Google Cloud Console</a>, and the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#manage-cli\">Firebase CLI</a>. The project name is not exposed in any publicly visible Firebase or Google Cloud product, service, or resource; it simply serves to help you more easily distinguish among multiple projects.</p>\n<p>You can edit a project name at any time in the settings <a href=\"https://console.firebase.google.com/project/_/settings/general/?authuser=0\"><strong>Project settings</strong></a> of the Firebase console. The project name is displayed in the top pane.</p>\n<h3>The project number</h3>\n<p>A Firebase project (and its <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#firebase-cloud-relationship\">associated Google Cloud project</a>) has a <strong>project number</strong>. This is the Google-assigned globally unique canonical identifier for the project. Use this identifier when configuring integrations and/or making API calls to Firebase, Google, or third-party services.</p>\n<h4>API calls and the project number</h4>\n<p>For many API calls, you need to include a unique identifier for a project. Although many APIs accept the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#project-id\">project ID</a>, it's recommended that you use the <strong>project number</strong> for making API calls to Firebase, Google, or third-party services.</p>\n<p>Learn more about using project identifiers, especially the project number, in Google's <a href=\"https://google.aip.dev/cloud/2510\">AIP 2510 standard</a>.</p>\n<h4>Find the project number</h4>\n<ul>\n<li>Firebase console: Click settings <a href=\"https://console.firebase.google.com/project/_/settings/general/?authuser=0\"><strong>Project settings</strong></a>. The project number is displayed in the top pane.</li>\n<li>Firebase CLI: Run firebase projects:list. The project number is displayed along with all the Firebase projects associated with your account.</li>\n<li>Firebase Management REST API: Call <a href=\"https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects/list?authuser=0\">projects.list</a>. The response body contains the project number in the <a href=\"https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects?authuser=0#FirebaseProject\">FirebaseProject</a> object.</li>\n</ul>\n<h3>The project ID</h3>\n<p>A Firebase project (and its <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#firebase-cloud-relationship\">associated Google Cloud project</a>) has a <strong>project ID</strong>. This is a user-defined unique identifier for the project across all of Firebase and Google Cloud. When you create a Firebase project, Firebase automatically assigns a unique ID to the project, but you can edit it during project setup. This identifier should generally be treated as a convenience alias to reference the project.</p>\n<p>If you delete a project, the project ID is also deleted and can never be used again by any other project.</p>\n<h4>Firebase resources and the project ID</h4>\n<p>The project ID displays in publicly visible Firebase resources, for example:</p>\n<ul>\n<li>Default Hosting subdomain — <strong>PROJECT_ID</strong>.web.app and <strong>PROJECT_ID</strong>.firebaseapp.com</li>\n<li>Default Realtime Database URL — <strong>PROJECT_ID</strong>-default-rtdb.firebaseio.com or <strong>PROJECT_ID</strong>-default-rtdb.<strong>REGION_CODE</strong>.firebasedatabase.app</li>\n<li>Default Cloud Storage bucket name — <strong>PROJECT_ID</strong>.appspot.com</li>\n</ul>\n<p>For all of the aforementioned resources, you can create non-default instances. The publicly visible names of non-defaults are fully-customizable. You can <a href=\"https://firebase.google.com/docs/hosting/custom-domain?authuser=0\">connect custom domains</a> to a Firebase-hosted site, <a href=\"https://firebase.google.com/docs/database/usage/sharding?authuser=0\">shard the Realtime Database</a>, and <a href=\"https://firebase.google.com/docs/storage?authuser=0\">create multiple Cloud Storage buckets</a> (visit the platform-specific Get Started page).</p>\n<h4>The Firebase CLI and the project ID</h4>\n<p>For some use cases, you might have multiple Firebase projects associated with the same local app directory. In these situations, when you use the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#manage-cli\">Firebase CLI</a>, you need to pass the --project flag with the firebase commands to communicate which Firebase project you want to interact with.</p>\n<p>You can also set up a <a href=\"https://firebase.google.com/docs/cli?authuser=0#project_aliases\">project alias</a> for each Firebase project so that you don't have to remember project IDs.</p>\n<h4>API calls and the project ID</h4>\n<p>For many API calls, you need to include a unique identifier for a project. Although many APIs accept the project ID, it's recommended that you use the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#project-number\"><strong>project number</strong></a> for making API calls to Firebase, Google, or third-party services.</p>\n<p>Learn more about using project identifiers, especially the project number, in Google's <a href=\"https://google.aip.dev/cloud/2510\">AIP 2510 standard</a>.</p>\n<h4>Find the project ID</h4>\n<ul>\n<li>Firebase console: Click settings <a href=\"https://console.firebase.google.com/project/_/settings/general/?authuser=0\"><strong>Project settings</strong></a>. The project ID is displayed in the top pane.</li>\n<li>Firebase CLI: Run firebase projects:list. The project ID is displayed along with all the Firebase projects associated with your account.</li>\n<li>Firebase Management REST API: Call <a href=\"https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects/list?authuser=0\">projects.list</a>. The response body contains the project ID in the <a href=\"https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects?authuser=0#FirebaseProject\">FirebaseProject</a> object.</li>\n</ul>\n<h3>Firebase config files and objects</h3>\n<p>When you register an app with a Firebase project, the Firebase console provides a Firebase configuration file (iOS/Android apps) or a configuration object (web apps) that you add directly to your local app directory.</p>\n<ul>\n<li>For iOS apps, you add a GoogleService-Info.plist configuration file.</li>\n<li>For Android apps, you add a google-services.json configuration file.</li>\n<li>For web apps, you add a Firebase configuration object.</li>\n</ul>\n<p>At any time, you can <a href=\"https://support.google.com/firebase/answer/7015592?authuser=0\">obtain an app's Firebase config file or object</a>.</p>\n<p>A Firebase config file or object associates an app with a specific Firebase project and its resources (databases, storage buckets, etc.). The configuration includes \"Firebase options\", which are parameters required by Firebase and Google services to communicate with Firebase server APIs and to associate client data with the Firebase project and Firebase app. Here are the required, minimum \"Firebase options\":</p>\n<ul>\n<li><a href=\"https://cloud.google.com/docs/authentication/api-keys?authuser=0\"><strong>API key</strong></a>: a simple encrypted string used when calling certain APIs that don't need to access private user data (example value: AIzaSyDOCAbC123dEf456GhI789jKl012-MnO)</li>\n<li><a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#project-id\"><strong>Project ID</strong></a>: a user-defined unique identifier for the project across all of Firebase and Google Cloud. This identifier may appear in URLs or names for some Firebase resources, but it should generally be treated as a convenience alias to reference the project. (example value: myapp-project-123)</li>\n<li>\n<p><strong>Application ID (\"AppID\")</strong>: the unique identifier for the Firebase app across all of Firebase with a platform-specific format:</p>\n<ul>\n<li>Firebase iOS apps: GOOGLE<em>APP</em>ID (example value: 1:1234567890:ios:321abc456def7890)\nThis is <em>not</em> an Apple bundle ID.</li>\n<li>Firebase Android apps: mobilesdk<em>app</em>id (example value: 1:1234567890:android:321abc456def7890)\nThis is <em>not</em> an Android package name or Android application ID.</li>\n<li>Firebase Web apps: appId (example value: 1:65211879909:web:3ae38ef1cdcb2e01fe5f0c)</li>\n</ul>\n</li>\n</ul>\n<p>The content of the Firebase config file or object is considered public, including the app's platform-specific ID (iOS bundle ID or Android package name) and the Firebase project-specific values, like the API Key, project ID, Realtime Database URL, and Cloud Storage bucket name. Given this, <strong>use Firebase Security Rules</strong> to protect your data and files in <a href=\"https://firebase.google.com/docs/database/security?authuser=0\">Realtime Database</a>, <a href=\"https://firebase.google.com/docs/firestore/security/get-started?authuser=0\">Cloud Firestore</a>, and <a href=\"https://firebase.google.com/docs/storage/security?authuser=0\">Cloud Storage</a>.</p>\n<p>For open source projects, we generally do not recommend including the app's Firebase config file or object in source control because, in most cases, your users should create their own Firebase projects and point their apps to their own Firebase resources (via their own Firebase config file or object).</p>\n<h2>Managing a Firebase project</h2>\n<p>Make sure to review the <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#best-practices\">general project-level best practices</a> (at the bottom of this page) for considerations that might affect how you manage a Firebase project.</p>\n<h3>Tools to manage a project</h3>\n<h4>Firebase console</h4>\n<p>The <a href=\"https://console.firebase.google.com/?authuser=0\">Firebase console</a> offers the richest environment for managing Firebase products, apps, and project-level settings.</p>\n<p><img src=\"https://firebase.google.com/docs/projects/images/firebase_console_overview.png?authuser=0\"></p>\n<p>The left-side panel of the console lists the Firebase products, organized by top-level categories. At the top of the left-side panel, access a project's settings by clicking settings. A project's settings include <a href=\"https://firebase.google.com/integrations?authuser=0\">integrations</a>, <a href=\"https://firebase.google.com/docs/projects/iam/overview?authuser=0\">access permissions</a>, and <a href=\"https://firebase.google.com/pricing?authuser=0\">billing</a>.</p>\n<p>The middle of the console displays buttons that launch setup workflows to register various types of apps. After you start using Firebase, the main area of the console changes into a dashboard that displays stats on the products you use.</p>\n<h4>Firebase CLI (a command line tool)</h4>\n<p>Firebase also offers the <a href=\"https://firebase.google.com/docs/cli?authuser=0\">Firebase CLI</a> for configuring and managing specific Firebase products, like Firebase Hosting and Cloud Functions for Firebase.</p>\n<p>After installing the CLI, you have access to the <a href=\"https://firebase.google.com/docs/cli?authuser=0#command_reference\">global firebase command</a>. Use the CLI to <a href=\"https://firebase.google.com/docs/cli?authuser=0#initialize_a_firebase_project\">link your local app directory to a Firebase project</a>, then <a href=\"https://firebase.google.com/docs/cli?authuser=0#deployment\">deploy</a> new versions of Firebase-hosted content or updates to functions.</p>\n<h4>Firebase Management REST API</h4>\n<p>Using the <a href=\"https://firebase.google.com/docs/projects/api/reference/rest?authuser=0\">Firebase Management REST API</a>, you can programmatically manage a Firebase project. For example, you can programmatically register an app with a project or list the apps that are already registered (<a href=\"https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.iosApps?authuser=0#methods\">iOS</a> | <a href=\"https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps?authuser=0#methods\">Android</a> | <a href=\"https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.webApps?authuser=0#methods\">web</a>).</p>\n<h2>General best practices</h2>\n<h3>Adding apps to a project</h3>\n<p><strong>Ensure that all apps within a project are platform variants of the same application</strong> from an end-user perspective. It's advisable to register the iOS, Android, and web versions of the same app or game with the same Firebase project. All the apps in a project generally share the same Firebase resources (database, storage buckets, etc.).</p>\n<p>If you have <strong><em>multiple build variants</em></strong> with different iOS bundle IDs or Android package names defined, you can register each variant with a separate Firebase project. However, if you have variants that share the <em>same</em> Firebase resources, register them with the <em>same</em> Firebase project.</p>\n<p>Here are some general limits for Firebase projects, apps, and sites:</p>\n<ul>\n<li>\n<p><strong>Number of projects per account</strong></p>\n<ul>\n<li>Spark pricing plan — Project-creation quota is limited to a lower count of projects (usually around 5-10).</li>\n<li>Blaze pricing plan — Project-creation quota per account increases substantially as long as the associated Cloud Billing account is in good standing.</li>\n</ul>\n<p>The limit on project-creation quota is rarely a concern for most developers, but if needed, you can <a href=\"https://support.google.com/cloud/answer/6330231?authuser=0\">request an increase in project quota</a>.</p>\n<p>Be aware that the complete deletion of a project requires 30 days and counts toward project quota until the project is fully deleted.</p>\n</li>\n<li>\n<p><strong>Number of apps per project</strong></p>\n<p>Firebase restricts the total number of Firebase Apps within a Firebase project to 30.</p>\n<p>You should ensure that all Firebase Apps within a single Firebase project are platform variants of the same application from an end-user perspective. Read more about best practices for <a href=\"https://firebase.google.com/docs/projects/learn-more?authuser=0#multi-tenancy\">multi-tenancy</a> below.</p>\n<p>Learn more about the <a href=\"https://firebase.google.com/support/faq?authuser=0#apps-per-project\">limit on apps per project</a> in the FAQ.</p>\n</li>\n<li>\n<p><strong>Number of Hosting sites per project</strong></p>\n<p>The <a href=\"https://firebase.google.com/docs/hosting/multisites?authuser=0\">Firebase Hosting multisite feature</a> supports a maximum of 36 sites per project.</p>\n</li>\n</ul>\n<h3>Multi-tenancy</h3>\n<p>Connecting several different logically independent apps and/or web sites to a single Firebase project (often called \"multi-tenancy\") is not recommended. Multi-tenancy can lead to serious configuration and data privacy concerns problems, including unintended issues with analytics aggregation, shared authentication, overly-complex database structures, and difficulties with security rules.</p>\n<p>Generally, <strong>if a set of apps don't share the same data and configurations, strongly consider registering each app with a different Firebase project.</strong></p>\n<p>For example, if you develop a white label application, each independently labelled app should have its own Firebase project, but the iOS and Android versions of that label can be in the same project. Each independently labeled app shouldn't (for privacy reasons) share data with the others.</p>\n<h2>Launching your app</h2>\n<ul>\n<li>Set up <a href=\"https://firebase.google.com/docs/projects/billing/avoid-surprise-bills?authuser=0#set-up-budget-alert-emails\">budget alerts</a> for your project in the Google Cloud Console.</li>\n<li>Monitor the <a href=\"https://console.firebase.google.com/project/_/usage?authuser=0\"><em>Usage and billing</em> dashboard</a> in the Firebase console to get an overall picture of your project's usage across multiple Firebase services.</li>\n<li>Review the <a href=\"https://firebase.google.com/support/guides/launch-checklist?authuser=0\">Firebase launch checklist</a>.</li>\n</ul>"},{"url":"/docs/articles/the-uniform-resource-locator-(url)/","relativePath":"docs/articles/the-uniform-resource-locator-(url).md","relativeDir":"docs/articles","base":"the-uniform-resource-locator-(url).md","name":"the-uniform-resource-locator-(url)","frontmatter":{"title":"The Uniform Resource Locator (URL)","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h3>Let's look at the anatomy of a URL:\n\n</h3>\n<p>The first part of the URL is http://, this is often left out when URLs are written, so we might see the above as www.mq.edu.au/about/profile/history.html. This will work when you type it into your web browser because the browser will assume you meant this as an HTTP URL. However, if we are being pedantic, the prefix is required as it tells us something about the web address - that we should use the HTTP protocol to access it.</p>\n<p>URLs are not only useful for HTTP addresses. Other <em>schemes</em> are allowed and they tell the client how to get access to the content that the URL describes. The most common you will see is https:// which is the secure variant of HTTP (we'll find out about that later). HTTPS uses the same protocol as HTTP but over a secure connection so that information that is exchanged can't be intercepted. Another scheme is ftp:// which tells the browser to use the older FTP protocol to access the content. Finally, you might see a mailto URL which allows us to write a link that triggers the browser to start composing an email message. This has a slightly different form: <a href=\"mailto:Steve.Cassidy@mq.edu.au\">Steve.Cassidy@mq.edu.au</a> but it's still a URL. In fact, the pattern looks like this:</p>\n<p>For the HTTP scheme the pattern is:</p>\n<p>The first part &#x3C;net_loc> is the network location of the resource: the domain name of the web server that holds the web page we want. This is preceded by two forward slashes and followed by a single forward slash. Then follows the &#x3C;path> which the server will use to identify which page we want. The ;&#x3C;params>?&#x3C;query>#&#x3C;fragment> are used to further qualify the resource that we want; we'll see some examples of how they are used later in the book.</p>\n<p>The URL is a unique form of identifier in that it has two roles. First, it identifies a document, video or music file that's out on the web (we call these things <em>resources</em>). Each resource has a unique URL and you can refer to them via the URL. If we two people refer to the same URL, then they know they have read the same document. Secondly, the URL contains enough information for a web client to retrieve a copy of the resource. The client can use the scheme defined (HTTP) to connect to the server and send an HTTP request for the path part of the URL.</p>\n<p>There are other kinds of formal identifier that don't have this second property. For example, every book has an ISBN (International Standard Book Number) which uniquely identifies it. However, the ISBN contains no information about how to get a copy of the book. To do so, you'd need to look up the ISBN in a catalogue which might tell you who the publisher was and then contact them for a copy. Alternately you could go to a book-shop or library and use their catalogue to find the book. With a URL, there's no need for a catalogue or third party service to decode the identifier. The information on how to retrieve the resource is right there in the Uniform Resource Locator.</p>\n<p>The <a href=\"http://www.ietf.org/\">Internet Engineering Task Force (IETF)</a> is as close as we get to a governing body for the Internet and it's home to many of the standards that define how the Internet and the Web work. The standards documents are called <em>Request for Comments</em> or RFC, a name which reflects the democratic nature of the early Internet. <a href=\"http://datatracker.ietf.org/doc/rfc2068/\">RFC2068</a> defines HTTP version 1.1 and <a href=\"http://datatracker.ietf.org/doc/rfc1738/\">RFC1738</a> defines the URL. Look out also for <a href=\"http://datatracker.ietf.org/doc/rfc2324/\">RFC2324</a> which can be relevant after a long coding session.</p>\n<h2>Uniform Resource Identifiers</h2>\n<p>There's another similar term that is sometimes used instead of URL: Uniform Resource Identifier (URI). URI is actually a more general term that includes URLs and Universal Resource Names (URNs). URNs are identifiers that don't contain any locator information such as the ISBN. They have a formal syntax so I can cite a particular ISBN as a URN as URN:ISBN:978-0-395-36341-6 (an example from the <a href=\"http://tools.ietf.org/html/draft-ietf-urnbis-rfc3187bis-isbn-urn-01\">IETF RFC3187</a> document that defines the standard). As explained above, we need a third party service to resolve a URN into a real location (a URL). You might see the term URI used in discussions of web technologies; it is often used instead of URL but generally means the same thing if we're talking about HTTP based services.</p>\n<p>Since URLs are both names and addresses it becomes important that once you put a resource on the web, it stays there. This is discussed in Tim Berners-Lee's paper called \"<a href=\"http://www.w3.org/Provider/Style/URI\">Cool URIs don't change</a>\". It's a principle that all web designers should bear in mind as it is easy to violate as we re-build old web-sites.</p>\n<h2>Absolute and relative URLs</h2>\n<p>When we include a URL in a web page there are a number of choices about how it can be written. The first option is to include the full URL:</p>\n<p>This is clearly a link to a resource on the server at <em>example.org</em> using the http protocol. However, if this page is being served by the server at <em>example.org</em> then we could also write this link as:</p>\n<p>This is known as a <em>relative URL</em> and is interpreted relative to the URL of the page that is currently being viewed. Let's assume that this page is at the URL <a href=\"http://example.org/about/info.html\">http://example.org/about/info.html</a>. Note that the URL above starts with a / character, in this case, the browser will interpret this URL by adding the protocol (http) and domain (example.org) parts of the page URL to this one to get <a href=\"http://example.org/static/style.css\">http://example.org/static/style.css</a>.</p>\n<p>Another way to write a URL is:</p>\n<p>In this case there is no / at the start of the URL and so this is interpreted relative to the page URL by removing everything but the last part of the URL <a href=\"http://example.org/about/\">http://example.org/about/</a> and then adding the new URL text to get <a href=\"http://example.org/about/static/style.css\">http://example.org/about/static/style.css</a>. Note that this is different to the previous example. If the intention was to reference the same URL as before, you could use the URL:</p>\n<p>Here the .. path refers to the parent directory (thinking of these paths as filenames) so the path becomes /about/../static/style.css which can be shortened to /static/style.css.</p>\n<p>The different URL styles have different uses. If you are writing a static HTML page that you will view on your local computer and perhaps host on the web somewhere (but you're not sure where) then you might put all of your files in one directory and use a relative URL like static/style.css to refer to linked resources. This ensures that your directory of files could be dropped anywhere into a web server file system and it would be self-contained and the links would work.</p>\n<p>However, if you are writing a web application that will be hosted on some domain (like example.org) you know that you have control of all URLs on that site and so would more likely use a relative URL starting with a / (like /static/style.css). This is important if your web application has complex routes (eg. pages like /users/steve/profile/edit) and you want to ensure that whatever the page URL being served, the links to stylesheets and other resources will work. The application can be deployed on different servers (like example.org and example.com) and the links will still work because they don't mention the domain name at all.</p>\n<p>Finally, absolute URLs (like <a href=\"http://example.org/static/style.css\">http://example.org/static/style.css</a>) will be used when we know that this URL is fixed at this location. It may be something external to our own site, or something that we know will be hosted at this URL on our site. There is an argument from a Search Engine Optimisation (SEO) viewpoint that all URLs in a website should be absolute urls even when they refer to assets on the same site. The reasons relate to the way that search engines crawl sites and the possible duplication of content if two URLs point to the same page (eg. <a href=\"https://example.org/\">https://example.org/</a> and <a href=\"http://example.org\">http://example.org</a>).</p>\n<p>One final form of relative URL looks like this:</p>\n<p>This URL is only missing the protocol part and is turned into an absolute URL by adding the protocol part of the current page URL. So if the current page was requested over http or https, this URL will use the same protocol. This is often useful if a site can be served over both protocols although it is increasingly the case that https is being used everywhere so this may become less common as time progresses.</p>\n<p><a href=\"https://www.facebook.com/sharer/sharer.php?u=https://bgoonz-blog.netlify.app/\">Share To Facebook:</a></p>"},{"url":"/docs/articles/writing-files/","relativePath":"docs/articles/writing-files.md","relativeDir":"docs/articles","base":"writing-files.md","name":"writing-files","frontmatter":{"title":"Writing Files","excerpt":"Web-Dev-Hubis a Unibit theme created for project documentations. You can use it for your project.","seo":{"title":"Writing Files","description":"This is the Writing Files page. The easiest way to write to files in Node.js is to use the fs.writeFile() API. const fs = require('fs');","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Writing Files","keyName":"property"},{"name":"og:description","value":"This is the Writing Files page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Writing Files"},{"name":"twitter:description","value":"This is the Writing Files page"}]},"template":"docs"},"html":"<p>The easiest way to write to files in Node.js is to use the <code>fs.writeFile()</code> API.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n\nconst content = 'Some content!';\n\nfs.writeFile('/Users/joe/test.txt', content, (err) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    //file written successfully\n});\n</code></pre>\n<p>Alternatively, you can use the synchronous version <code>fs.writeFileSync()</code>:</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n\nconst content = 'Some content!';\n\ntry {\n    const data = fs.writeFileSync('/Users/joe/test.txt', content);\n    //file written successfully\n} catch (err) {\n    console.error(err);\n}\n</code></pre>\n<p>By default, this API will <strong>replace the contents of the file</strong> if it does already exist.</p>\n<p>You can modify the default by specifying a flag:</p>\n<pre><code class=\"language-js\">fs.writeFile('/Users/joe/test.txt', content, { flag: 'a+' }, (err) => {});\n</code></pre>\n<p>The flags you'll likely use are</p>\n<ul>\n<li><code>r+</code> open the file for reading and writing</li>\n<li><code>w+</code> open the file for reading and writing, positioning the stream at the beginning of the file. The file is created if not existing</li>\n<li><code>a</code> open the file for writing, positioning the stream at the end of the file. The file is created if not existing</li>\n<li><code>a+</code> open the file for reading and writing, positioning the stream at the end of the file. The file is created if not existing</li>\n</ul>\n<p>(you can find more flags at <a href=\"https://nodejs.org/api/fs.html#fs_file_system_flags\">https://nodejs.org/api/fs.html#fs_file_system_flags</a>)</p>\n<h2>Append to a file</h2>\n<p>A handy method to append content to the end of a file is <code>fs.appendFile()</code> (and its <code>fs.appendFileSync()</code> counterpart):</p>\n<pre><code class=\"language-js\">const content = 'Some content!';\n\nfs.appendFile('file.log', content, (err) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    //done!\n});\n</code></pre>\n<h2>Using streams</h2>\n<p>All those methods write the full content to the file before returning the control back to your program (in the async version, this means executing the callback)</p>\n<p>In this case, a better option is to write the file content using streams.</p>"},{"url":"/docs/articles/semantic-html/","relativePath":"docs/articles/semantic-html.md","relativeDir":"docs/articles","base":"semantic-html.md","name":"semantic-html","frontmatter":{"title":"lorem-ipsum","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<p>Three different aspects of web site production:</p>\n<ul>\n<li>Content -- the text, images, etc. What the user wants to read.</li>\n<li>Style -- how the content is arranged on the page, fonts, colours, page style.</li>\n<li>Behaviour -- how users interact with the site, data processing, dynamic page elements.</li>\n</ul>\n<p>Since each requires different skills, a good (software) design would seperate them.</p>\n<p>Each of these areas has a different associated technology in the web world: HTML, Cascading Style Sheets (CSS) and Javascript.</p>\n<p>Note that it hasn't always been this way, HTML can do a bunch of Style things (eg. the &#x3C;font> tag) but now that we have good standards compliant browser we don't need to use them.</p>\n<h2>Document Production</h2>\n<p><img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Metal_movable_type.jpg/640px-Metal_movable_type.jpg\"></p>\n<p>Moveable type, source <a href=\"http://commons.wikimedia.org/wiki/File:Metal_movable_type.jpg\">Wikimedia Commons</a></p>\n<p>Many years ago, when printed pages were made with moveable type, the printer who assembled the page of type was responsible for all aspects of the page design. They would choose the typeface, and in the early days even make the matrix and cast the type themselves. They would lay out the lines of text, choosing suitable spacing in each line, deciding where to break the line and adding hyphens to improve the overall look of the page while maintaining readability. The page was then set in the press and pages were printed.</p>\n<p>Even before that, the monks who copied manuscripts did everything themselves, copying the text and adding beautiful illuminations to each page to add to the value of the book.</p>\n<p>As the industry developed though, the task of type-setter became more mechanical. Other people became expert in how to best lay out pages, what visual design elements would best communicate the desired message etc. The type-setter still made the technical choices to achieve the desired goals, but didn't have to be an expert in design. The production of a printed document would involve a number of people who were expert in their given area, from author to visual designer to type-setter.</p>\n<p>This team based approach to document production means that each person can develop their own expertise and to a certain extent, doesn't need to worry about what the people later in the chain will do. The author doesn't worry about how to place figures or images in the page, just that they will be there; the designer doesn't need to be concerned about kerning and the use of em-spaces in type-setting; the type-setter isn't an expert in the content of the text. All can work together to produce a superior printed document.</p>\n<p>The world of document production worked like this for a long time until the invention of the personal computer and <em>Desktop Publishing</em> software. Suddenly, authors became designers and type-setters through easy to use computer software. They could choose fonts, set margins, force hyphenation and make minute decisions about the layout and look and feel of each page. Not surprisingly, this becomes a significant distraction from the task of creating content, but it also means that the expertise of the specialist designer or type-setter isn't used any more. This might lead to more productivity as the production process is compressed, but it doesn't usually lead to more readable, better presented documents; many of the early self-produced documents were an unsightly mix of fonts, colours and sizes.</p>\n<p>If we fast-forward to the software tools we have today for document production, it's interesting to note that the expertise of the designer and typesetter has crept back in to the process. Rather than being involved in the production of every document, these people are now able to write stylesheets and templates as well as contribute to the algorithms used in the software to lay out the text on a page. Most companies will have a standard document template that is used for reports or letters, this has usually been designed by a professional and all the author needs to do is enter the text in the right place. Stylesheets in word processors mean that there will be a consistency of font use throughout the document and importantly, that the decisions on which fonts and how they are used doesn't need to be made by the author.</p>\n<p>So, to summarise this little discussion of history, there have always been people who's expertise is the way that a text is rendered on the page. With the onset of desktop publishing software, there has been a tendency for the author to spend time in document design, meaning that the relevant expertise was not being applied. However, modern software now allows for the designer's voice to be heard again through the use of stylesheets and document templates. This leaves the author to concentrate on the text meaning they will be more productive and should produce better looking documents as well.</p>\n<h2>Web Document Production</h2>\n<p>Fundamentally, the web is a technology for delivering content to readers through a document based interface (the web browser). So, producing web content is a document production process and as such, should parallel the ideas discussed above. It's interesting to look at the development of HTML and see how it parallels the developments described above.</p>\n<p>Early HTML was a language for encoding content. It included tags for headings, paragraphs, lists etc. but didn't provide any way to change the way these things were rendered by the browser. The browser made sensible decisions and web documents all looked about the same. The focus was on the content. Soon, <a href=\"http://www.ncsa.illinois.edu/Projects/mosaic.html\">graphical browsers</a> started to appear that allowed images to be included in pages and people started to want to have some control over the appearance of their pages.</p>\n<p>The growth of the web into the commercial arena and the wider range of documents being published led to the 'browser wars' between Netscape and Microsoft. One of the features of this war was the arms race of features in each browser designed to make web pages look better. Each vendor would introduce new ways to control the look and feel of pages, for example the &#x3C;FONT> tag was introduced by Netscape to allow control of the font used to display text while Microsoft included the &#x3C;MARQUEE> tag that displayed text scrolling across the page. Eventually, some of these tags were standardised into a later version of HTML and were implemented by most of the browsers. These tags encouraged authors to get involved in page design, in fact they had to since the only way to control the appearance of a page was to insert codes into the text.</p>\n<p>While the &#x3C;FONT> tag allowed some control over the appearance of text, there was still a problem of laying out a page as a whole. The solution that became standard practice was to mis-use the &#x3C;TABLE> tag and construct the whole page as a table with rows and columns for the different page elements such as header, menu, content and footer. This worked really well, but again meant that the HTML code that an author was writing had to contain a lot of information about the layout of the page. In addition, it was common for people to mis-use tags just for the sake of appearance, for example to have more control over the appearance of headings, one might just encode them using &#x3C;B> or &#x3C;FONT> tags rather than header tags.</p>\n<p>All of these additions to HTML and the mis-use of existing tags meant that a language that was originally designed to allow authors to concentrate on content had turned into a page layout language. Luckily, sense has prevailed and we have now developed ways to control page layout without adding special instructions into the HTML code - that is, we have the Cascading Stylesheet language (CSS). Once again, we can let the author concentrate on content in HTML while all (or most) design decisions are encoded in the stylesheet.</p>\n<p>The current suite of web languages understood by your browser (HTML, CSS and Javascript) each serve different roles in the web development process:</p>\n<ul>\n<li>HTML - Content</li>\n<li>CSS - Style</li>\n<li>Javascript - Behaviour</li>\n</ul>\n<p>The third of these - Javascript and Behaviour - refer to the way that Javascript can be used to change the way that the user interacts with the page. This doesn't really have an analogue in the print document production world but it's an important aspect of modern web content production. It fits into this framework because the behavioural changes that Javascript can introduce should not be the concern of the content author or the visual designer (though both might have opinions on what they'd like to see).</p>\n<p>It is useful to think of these three aspects of web design as independent things. The same web content could be presented using alternate stylesheets and have a completely different impact. Similarly, Javascript can be used to change the way that a user interacts with content, making it more usable. We can see the Style and Behaviour aspects as layers that are applied to the core Content to enhance it for the user.</p>\n<h2>The Separation of Concerns</h2>\n<p>From a Computer Science/Software Engineering point of view there is a very important principle called the <a href=\"http://en.wikipedia.org/wiki/Separation_of_concerns\">Separation of Concerns</a> (SoC) that is illustrated perfectly by the way that the various web languages have evolved. The SoC principle is about partitioning the work that we do in software development into parts that can be considered separately. This is achieved by <em>modularisation</em> within a software project and is helped by things like classes and interface descriptions between modules</p>\n<ul>\n<li>in fact these things have been developed to support SoC.</li>\n</ul>\n<p>The SoC principle allows us to develop large complex software by allowing us to concentrate on different aspects of the solution. It could be that we do that alone, spending time on one aspect and then another, or as a team with different people assigned to different aspects. Either way, being able to work on part of the problem makes it manageable and improves the overall quality of the solution.</p>\n<p>In web development, the separation of concerns is supported by the different languages that work together to build a modern web application. It is important to recognise this and make sure that we use each of these tools in such a way as to respect their roles and capabilities. So, while it is possible to use HTML structures to make text large and bold for a heading, we don't, we use one of the header tags and rely on the stylesheet to apply the appropriate settings. Having the author respect good HTML usage means that the designer can make assumptions about the page structure in the stylesheet and ensure that the document appearance is consistent for the user.</p>\n<h2>Semantic HTML Markup</h2>\n<p>One corollary of this kind of thinking is that each component that we use should be used as it was designed and according to it's role in the overall picture. In particular for HTML this implies that the markup we use should encode only the <em>structure</em> of the document rather than aspects of the <em>appearance</em> which is properly dealt with using CSS. Further, this means that we should use markup in a way that imparts useful <em>meaning</em> to the document structure. This is generally known as using <em>Semantic HTML</em> (<a href=\"http://en.wikipedia.org/wiki/Semantic_HTML\">Wikipedia</a>, <a href=\"http://microformats.org/wiki/posh\">POSH</a> on Microformats.org) and is the current best practice in HTML authoring.</p>\n<p>To clarify this point we can look at some examples. Writing semantic HTML means using the HTML tags as they were designed to be used - to convey the meaning of a particular document structure or textual element. So a good example is when we want to encode the main heading in a page I would use the H1 tag:</p>\n<p>This seems obvious, but in some cases, an author might decide that the default rendering of the H1 tag is too big, so rather than using CSS to define an alternate style, they use the H2 tag instead.</p>\n<p>This may seem harmless, after all we've still marked up this text as a heading. The problem is that we've lost the information that this is the main heading in the page that was conveyed by the H1 tag.</p>\n<p>Even worse, I could use the B (bold) tag and the now deprecated FONT tag to make my text look like a heading:</p>\n<p>In this case the appearance might be ok but the markup is not appropriate for the task. The author's focus has been on the appearance rather than the meaning of the markup; we could say that the author is overstepping their responsibilities a little - the appearance of the text should be the domain of the designer. If the heading is encoded as in this example, the designer will not be able to re-style the headings in a robust way (we could apply a style to bold paragraphs but that would also apply to any other use of this markup in the text).</p>\n<p>The example illustrates the importance of using an appropriate markup tag where one exists. In the case of a heading, this is pretty clear but other parts of the document might need a bit of thought to see what markup is appropriate. One common issue is whether to use a TABLE for some information that you want to appear as a list or array. TABLE is meant for data that has columns and rows, for example, the results of a survey or test scores for a class of students.</p>\n<p>While it is less common these days, the most frequent mis-use of tables is as a means of laying out all or part of a page as a rectangular grid. You may still see this in the navigation links on a page which the designer might want to appear in a row near the top of the page or a column down the side. Semantically this is a list and should really be marked up as such. If a table-like appearance is needed then CSS rules can be used to acheive this (eg. display: table-row).</p>\n<p>TABLE is sometimes used for things that might be more appropriately marked up as lists, eg. using UL (unordered list), OL (ordered list) or DL (description list) tags. An example might be the list of ingredients for a recipe; you might be tempted to encode it as a table because you want the quantities to be lined up in a column on the left. It might be appropriate to use TABLE here but a bit of reflection might tell you that it's really an unordered list - for example you might note that while there's usually a quantity for each ingredient it's not always the case ('salt to taste') so this isn't really columns of data, just list items that might have a distinguished field.</p>\n<p>A final example might be the description of a staff member in an online directory, the commonly contains entries for name, office, phone number, email address etc and it might seem natural to encode this as a table if you want a nice neat layout. However, in this case there is more appropriate markup in the DL (description list) tag. Each entry in a description list contains two parts DT (description title) and DD (description data) which are used to mark up the property name and value:</p>\n<p>Some authors are put off the description list because of the default style that is associated with it which puts the DT and DD parts on different lines. However, changing this is very easy with CSS so it really should be used for information that is structured in this way.</p>\n<p>Using the right semantic markup <em>adds</em> information to the text that can be used by the designer to enhance the communicative power of the web page. Using a consistent style for headings makes it easier for a reader to see the structure of a page and understand it. Similarly, I can use inline tags for things like <em>emphasis</em> (EM), Abbrv. (abbreviations, ABBR), “a quotation” (Q) or <strong>a strongly emphasised point</strong> (STRONG). Each of these has a default style (or in some cases like ABBR, is just the same as the default text style) but can be re-styled by the designer to achieve a particular look and feel. If these elements are used consistently throughout a text, the overall readability of the text can be greatly improved.</p>\n<p>Another motivation for using semantic markup is for users who cannot read via a normal web browser. Blind people make use software that reads out the content of a web page; if the page uses the appropriate semantic markup then the software can make use of this to present the content more appropriately to the user. This might include using the headings to provide a summary of the page or the emphasis tags to generate an appropriate intonation pattern. You might also think about the difference in reading out a list vs. a table of data - that might be a useful way of choosing between the two for a particular part of your page.</p>\n<h3>Exercises</h3>\n<ol>\n<li>\n<p>Find an appropriate HTML tag to mark up the following items:</p>\n<ul>\n<li>the name of a book that you are citing in an essay</li>\n<li>a fragment of computer code, eg. a bit of Python</li>\n<li>an abbreviation or acronym and it's expansion (e.g. HTML - Hypertext Markup language)</li>\n</ul>\n</li>\n</ol>\n<h2>Extending the Semantics of HTML</h2>\n<p>The tag set defined by the HTML standard supports a wide range of content and was designed to cover the most common document structures and entities that appear on the web. However, the designers of HTML couldn't forsee everything that you might want to mark in your documents and so an extension mechanism is included such that you can effectively add new semantics to existing tags. This is the HTML class attribute which allows you to enter a user defined class for any tag. It is effectively a specialisation of any tag that can be used to encode special meanings for your documents.</p>\n<p>The class attribute is meant to contain one or more class identifiers which are single words that mean something to your application. They can be applied to any HTML tag. An example might be the use of the class important to mark something as important in some way. I can add this to a paragraph or a list item:</p>\n<p>In this example, the class attribute is specialising the meaning of the main HTML tag so that we can differentiate important paragraphs and list items from others. We might want to do this so that we can highlight them in some way in the final presentation of the text. In this way, the designer can make the decision about how to emphasise this text (maybe differently on desktop and mobile devices) and the author is free just to decide which things are important. The alternative in this case might have been to use an emphasis EM tag around the text we wanted to emphasise. The advantage of the class attribute is that we identify the whole paragraph or list item as important and we are able to differentiate different kinds of emphasis. This might be useful where, for example, there are some things that are 'important' and others that are 'critical' in a set of instructions. The use of class attributes means that we can transfer the concepts that mean something in the domain of the document directly into the HTML code and then allow the designer to make decisions about how the different ideas are expressed visually.</p>\n<p>Sometimes there isn't an HTML tag that really fits what you are trying to express; in these cases you can use the generic DIV and SPAN tags along with a class attribute. For example, it has been common to use a series of DIV tags to denote the overall structure of a web page:</p>\n<p>This pattern allows the designer to write a stylesheet that places each section at the right place on the page with the right fonts, colours etc. This pattern has become so common that the new HTML5 standard has included new tags named after some of these classes, so you can now write:</p>\n<p>This is part of the evolution of the HTML language; the observation that some kinds of structure are being used very widely leading to the introduction of new elements that properly convey the semantics that are required.</p>\n<p>One final note about the use of classes to convey new semantics. It is possible to use more than one class name where that is appropriate to convey more specialisations. For example, all of the code examples in this text are marked up as PRE tags with the class code and another class to denote the language the code is written in, so on this page I have examples like:</p>\n<p>Note that I have to encode the HTML markup as entity references using the &#x26; notation so that they appear correctly when you view them in the web browser (view source to check this out). Having more than one class name means that I can apply standard styling to code examples and special style for different languages. It also means that I could write a script to pull out all of the examples in a given language if I wanted to check their syntax etc.</p>\n<h1>A View of HTML\n\n</h1>\n<p>Rather than being a chapter that will teach you the HTML language this will be a chapter about the language, how it works, why it has the structures it does and what you should and shouldn't do with it.</p>\n<p>Most people will know some HTML by now (assuming you've been studying computing for a while or have a general interest in the web). My task here is not to teach you HTML or act as a reference for the language, there are plenty of resources around that will do this. Some examples are:</p>\n<ul>\n<li><a href=\"http://www.w3schools.com/html/default.asp\">w3schools HTML tutorial</a> w3schools is one of the most widely used tutorial and reference sites on the web for HTML and other web technologies.</li>\n<li><a href=\"https://developer.mozilla.org/en-US/learn/html\">Learn HTML</a> from the Mozilla Developer Network, the organisation that produces the Firefox browser. This page has pointers to a number of HTML tutorials and resources.</li>\n</ul>\n<h2>About HTML</h2>\n<p>HTML is a <em>markup language</em>, which is a formal language used to add encode structured documents, often by mixing formal elements and plain text. Another example is the LaTeX language used to typeset scientific and technical documents. Here's a fragment of LaTeX that shows the use of commands preceded by a backslash character and curly braces to enclose text:</p>\n<p>These commands are interpreted by the LaTeX system which uses then to produce nicely typeset PDF output. Markup can also be used to identify regions of text for analysis. Here's an example from a language corpus used to study human interaction:</p>\n<p>In this example, special character sequences are used to mark things like speaker turns, pauses, phrases and overlapping speech. This markup can be used to help analyse the language and find examples of certain linguistic phenomena (for example, find me examples of <em>'you know'</em> and show me what the next person says in response).</p>\n<p>HTML is the <em>Hypertext</em> Markup Language, meaning that it is designed to encode hypertext documents - that is, documents containing links to other documents on the World Wide Web. In fact, the hyperlink is just a small part of HTML and much more interesting are all the other parts of the language that allows us to produce useful documents for the web.</p>\n<p>HTML is based on an earlier standard called SGML (Standard Generalised Markup language) which had a successor called XML (eXtensible Markup Language). SGML and XML are both languages for defining markup languages, that is they define the syntax of a markup language but allow you to develop your own language for a specific purpose. The syntax is the angle brackets containing start and end tags &#x3C;p> and &#x3C;/p> that you will be familiar with (and a number of other rules). SGML and XML based languages all use this same syntax but allow the language designer to make up their own tags and define how they should be used together. HTML was designed originally by Tim Berners-Lee and later by the W3C as a language to encode pages of content for the web.</p>\n<p>Importantly, HTML is a <em>markup language</em> not a <em>programming language</em>. The job of a markup language is to record the structure of a document; that structure can then be interpreted by a program to generate some output. A programming language contains instructions that will be executed (or interpreted) to carry out some action or compute some result.</p>\n<h2>Versions of HTML</h2>\n<p>The first version of HTML was developed by Tim Berners-Lee as part of his World Wide Web project along with the HTTP protocol and the URL syntax. At first it was a very simple language for encoding articles and so had tags for headings, paragraphs, lists etc. Later, the language evolved to encompas new features in the browser such as the ability to display images, tables and modify the font that text was displayed in. The evolution of HTML has been quite gradual and at times part of intense competition between browser vendors (look up the <a href=\"http://en.wikipedia.org/wiki/Browser_wars\">Browser Wars</a> to get the full story). The Internet Engineering Task Force (IETF) and later the World Wide Web Consortium (W3C) tried to standardise the language but it took some time for industry practice to align with the W3C standards. Luckily now we are in a period of relative stability where the standards process aligns well with what the major browsers are able to understand.</p>\n<p>A version of HTML is defined by a Document Type Definintion (DTD) - a formal definition of the allowed tags and attributes and the allowed structure of an HTML document. The DTD says that you can have a &#x3C;p> tag and that it can contain a &#x3C;strong> tag but that a &#x3C;li> has to be inside a &#x3C;ul> or &#x3C;ol> tag and so on. If a document conforms to the DTD (follows the rules) we say that it is <em>valid</em>, if it contains errors such as having an unknown tag or a tag in the wrong place it is invalid.</p>\n<p>Early versions of HTML were subject to a lot of change and it wasn't until HTML version 4.0.1, released in 1999 that there was a bit of stability in the language and consensus about what should be included and what should be left out. Before then, HTML had grown to contain a lot of <em>visual</em> markup that had been developed by the browser vendors (Netscape and Microsoft) to try to make their browser look better than the competition. An example is the &#x3C;font> tag introduced by Microsoft (and copied by Netscape) which could change the font used to render some text. By the time HTML 4.01 was published, Cascading Style Sheets (CSS) were becoming more widely adopted and the use of markup that explicitly referred to the visual appearance of the content was discouraged.</p>\n<p>HTML 4.0.1 is still the latest version of the official W3C standard although there have been a large number of changes implemented by the browser vendors since the time it was released.</p>\n<p>In 1997 the XML standard was introduced. XML was intended to generalise the use of markup on the web and allow developers to design thier own markup languages for specific purposes. XML is an evolution of the earlier SGML standard on which HTML had been based; it simplified the syntax rules a lot and made it easier to write parsers for XML. One of the early applications of XML was to develop XHTML - a version of HTML converted to adhere to the XML standard. XHTML 1.0 retained almost all of the tags in HTML 4.0.1 but introduced the constraints of XML. For example in an XML document every opening tag must have a corresponding close tag; in HTML, many close tags are optional (e.g. you can leave out the closing &#x3C;p> tag for a paragraph since it is implied by the next opening &#x3C;p> tag) and many tags never have a close tag because they never contain any text (e.g. &#x3C;img> or &#x3C;br>). In XHTML then, paragraphs always require a close tag and empty tags are written with the new XML syntax: &#x3C;br />.</p>\n<p>One of the motivations for introducing XHTML was to try to encourage web developers to adhere more closely to the published standards. The web had grown up with a culture of view-source where people would learn how to encode web pages by looking at the source HTML of other web pages rather than by reading the standard. They would then write their own pages and if they looked ok in the browser, they would publish them. To cope with the amount of badly formed HTML content on the web, the browser vendors built thier HTML parsers to be very forgiving. If you put a paragraph inside an image tag or a header inside a paragraph it would have a go at rendering the content. As a consequence, very few web publishers cared about generating proper HTML and anyone who wanted to parse web content had to make very few assumptions about HTML structure.</p>\n<p>Around this time there was a move towards having more automated clients consuming web content. One group was the search engine developers who were just interested in the textual content of pages but other groups were trying to glean real data from the web. For example, price comparison services were starting up which tried to extract pricing information from store listings. Other services might try to find event information from web pages. All of these services needed to parse the HTML structure and had problems when the HTML was badly structured; this became known as <a href=\"http://essaysfromexodus.scripting.com/whatIsTagSoup\">Tag Soup</a> since one could not rely on proper HTML structure it was just treated as an unstructured collection of tagged text. Permissive parsers such as <a href=\"http://www.crummy.com/software/BeautifulSoup/\">Beautiful Soup</a> (Python) and <a href=\"http://home.ccil.org/~cowan/XML/tagsoup/\">Tagsoup</a> (Java) were developed to cope with the messy markup and give the developer as much detail as possible from the page.</p>\n<h1>HTML5</h1>\n<p>The most recent version of HTML is HTML5 - note the name with no spaces which is quite different to earlier versions. HTML5 was a big change in the way that the standard was put together and followed a long break in the development of standards for HTML: HTML 4.0.1 was last updated in 2000, HTML5 was finally released in 2012. The goal of HTML5 was to standardise current practice in browsers, rather than to define new structures or limit what was possible. The W3C worked with the browser developers to agree on standards for new technologies that they had introduced. For example, being able to include audio and video elements in HTML had been possible in some browsers; HTML5 defined a standard for these that all browser vendors could agree on and implement.</p>"},{"url":"/docs/audio/audio-feature-extraction/","relativePath":"docs/audio/audio-feature-extraction.md","relativeDir":"docs/audio","base":"audio-feature-extraction.md","name":"audio-feature-extraction","frontmatter":{"title":"Audio Feature Extraction","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h2>Lorem ipsum</h2>\n<p>Lorem ipsum dolor sit amet, <strong>consectetur adipiscing elit</strong>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<ul>\n<li>Lorem ipsum</li>\n<li>dolor sit amet</li>\n</ul>"},{"url":"/docs/articles/node-js-language/","relativePath":"docs/articles/node-js-language.md","relativeDir":"docs/articles","base":"node-js-language.md","name":"node-js-language","frontmatter":{"title":"packagejson","weight":1,"excerpt":"The package.json file is a key element in lots of app codebases based on the Node.js ecosystem.","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<p>If you work with JavaScript, or you've ever interacted with a JavaScript project, Node.js or a frontend project, you surely met the package.json file.</p>\n<p>What's that for? What should you know about it, and what are some of the cool things you can do with it?</p>\n<p>The package.json file is kind of a manifest for your project. It can do a lot of things, completely unrelated. It's a central repository of configuration for tools, for example. It's also where npm and yarn store the names and versions for all the installed packages.</p>\n<h2>The file structure</h2>\n<p>Here's an example package.json file:</p>\n<p>It's empty! There are no fixed requirements of what should be in a package.json file, for an application. The only requirement is that it respects the JSON format, otherwise it cannot be read by programs that try to access its properties programmatically.</p>\n<p>If you're building a Node.js package that you want to distribute over npm things change radically, and you must have a set of properties that will help other people use it. We'll see more about this later on.</p>\n<p>This is another package.json:</p>\n<p>It defines a name property, which tells the name of the app, or package, that's contained in the same folder where this file lives.</p>\n<p>Here's a much more complex example, which was extracted from a sample Vue.js application:</p>\n<p>there are <em>lots</em> of things going on here:</p>\n<ul>\n<li>version indicates the current version</li>\n<li>name sets the application/package name</li>\n<li>description is a brief description of the app/package</li>\n<li>main set the entry point for the application</li>\n<li>private if set to true prevents the app/package to be accidentally published on npm</li>\n<li>scripts defines a set of node scripts you can run</li>\n<li>dependencies sets a list of npm packages installed as dependencies</li>\n<li>devDependencies sets a list of npm packages installed as development dependencies</li>\n<li>engines sets which versions of Node.js this package/app works on</li>\n<li>browserslist is used to tell which browsers (and their versions) you want to support</li>\n</ul>\n<p>All those properties are used by either npm or other tools that we can use.</p>\n<h2>Properties breakdown</h2>\n<p>This section describes the properties you can use in detail. We refer to \"package\" but the same thing applies to local applications which you do not use as packages.</p>\n<p>Most of those properties are only used on <a href=\"https://www.npmjs.com/\">https://www.npmjs.com/</a>, others by scripts that interact with your code, like npm or others.</p>\n<h3>name</h3>\n<p>Sets the package name.</p>\n<p>Example:</p>\n<p>The name must be less than 214 characters, must not have spaces, it can only contain lowercase letters, hyphens (-) or underscores (_).</p>\n<p>This is because when a package is published on npm, it gets its own URL based on this property.</p>\n<p>If you published this package publicly on GitHub, a good value for this property is the GitHub repository name.</p>\n<h3>author</h3>\n<p>Lists the package author name</p>\n<p>Example:</p>\n<p>Can also be used with this format:</p>\n<h3>contributors</h3>\n<p>As well as the author, the project can have one or more contributors. This property is an array that lists them.</p>\n<p>Example:</p>\n<p>Can also be used with this format:</p>\n<h3>bugs</h3>\n<p>Links to the package issue tracker, most likely a GitHub issues page</p>\n<p>Example:</p>\n<h3>homepage</h3>\n<p>Sets the package homepage</p>\n<p>Example:</p>\n<h3>version</h3>\n<p>Indicates the current version of the package.</p>\n<p>Example:</p>\n<p>This property follows the semantic versioning (semver) notation for versions, which means the version is always expressed with 3 numbers: x.x.x.</p>\n<p>The first number is the major version, the second the minor version and the third is the patch version.</p>\n<p>There is a meaning in these numbers: a release that only fixes bugs is a patch release, a release that introduces backward-compatible changes is a minor release, a major release can have breaking changes.</p>\n<h3>license</h3>\n<p>Indicates the license of the package.</p>\n<p>Example:</p>\n<h3>keywords</h3>\n<p>This property contains an array of keywords that associate with what your package does.</p>\n<p>Example:</p>\n<p>This helps people find your package when navigating similar packages, or when browsing the <a href=\"https://www.npmjs.com/\">https://www.npmjs.com/</a> website.</p>\n<h3>description</h3>\n<p>This property contains a brief description of the package</p>\n<p>Example:</p>\n<p>This is especially useful if you decide to publish your package to npm so that people can find out what the package is about.</p>\n<h3>repository</h3>\n<p>This property specifies where this package repository is located.</p>\n<p>Example:</p>\n<p>Notice the github prefix. There are other popular services baked in:</p>\n<p>You can explicitly set the version control system:</p>\n<p>You can use different version control systems:</p>\n<h3>main</h3>\n<p>Sets the entry point for the package.</p>\n<p>When you import this package in an application, that's where the application will search for the module exports.</p>\n<p>Example:</p>\n<h3>private</h3>\n<p>if set to true prevents the app/package to be accidentally published on npm</p>\n<p>Example:</p>\n<h3>scripts</h3>\n<p>Defines a set of node scripts you can run</p>\n<p>Example:</p>\n<p>These scripts are command line applications. You can run them by calling npm run XXXX or yarn XXXX, where XXXX is the command name. Example: npm run dev.</p>\n<p>You can use any name you want for a command, and scripts can do literally anything you want.</p>\n<h3>dependencies</h3>\n<p>Sets a list of npm packages installed as dependencies.</p>\n<p>When you install a package using npm or yarn:</p>\n<p>that package is automatically inserted in this list.</p>\n<p>Example:</p>\n<h3>devDependencies</h3>\n<p>Sets a list of npm packages installed as development dependencies.</p>\n<p>They differ from dependencies because they are meant to be installed only on a development machine, not needed to run the code in production.</p>\n<p>When you install a package using npm or yarn:</p>\n<p>that package is automatically inserted in this list.</p>\n<p>Example:</p>\n<h3>engines</h3>\n<p>Sets which versions of Node.js and other commands this package/app work on</p>\n<p>Example:</p>\n<h3>browserslist</h3>\n<p>Is used to tell which browsers (and their versions) you want to support. It's referenced by Babel, Autoprefixer, and other tools, to only add the polyfills and fallbacks needed to the browsers you target.</p>\n<p>Example:</p>\n<p>This configuration means you want to support the last 2 major versions of all browsers with at least 1% of usage (from the <a href=\"https://caniuse.com/\">CanIUse.com</a> stats), except IE8 and lower.</p>\n<p>(<a href=\"https://www.npmjs.com/package/browserslist\">see more</a>)</p>\n<h3>Command-specific properties</h3>\n<p>The package.json file can also host command-specific configuration, for example for Babel, ESLint, and more.</p>\n<p>Each has a specific property, like eslintConfig, babel and others. Those are command-specific, and you can find how to use those in the respective command/project documentation.</p>\n<h2>Package versions</h2>\n<p>You have seen in the description above version numbers like these: ~3.0.0 or ^0.13.0. What do they mean, and which other version specifiers can you use?</p>\n<p>That symbol specifies which updates your package accepts, from that dependency.</p>\n<p>Given that using semver (semantic versioning) all versions have 3 digits, the first being the major release, the second the minor release and the third is the patch release, you have these \"<a href=\"https://nodejs.dev/learn/semantic-versioning-using-npm/\">Rules</a>\".</p>\n<p>You can combine most of the versions in ranges, like this: 1.0.0 || >=1.1.0 &#x3C;1.2.0, to either use 1.0.0 or one release from 1.1.0 up, but lower than 1.2.0.</p>\n<h1>Cheat Sheet:</h1>\n<pre><code class=\"language-js\">/* *******************************************************************************************\n * SYNOPSIS\n * http://nodejs.org/api/synopsis.html\n * ******************************************************************************************* */\n\n\nvar http = require('http');\n\n// An example of a web server written with Node which responds with 'Hello World'.\n// To run the server, put the code into a file called example.js and execute it with the node program.\nhttp.createServer(function (request, response) {\n  response.writeHead(200, {'Content-Type': 'text/plain'});\n  response.end('Hello World\\n');\n}).listen(8124);\n\nconsole.log('Server running at http://127.0.0.1:8124/');\n\n\n/* *******************************************************************************************\n * GLOBAL OBJECTS\n * http://nodejs.org/api/globals.html\n * ******************************************************************************************* */\n\n\n// In browsers, the top-level scope is the global scope.\n// That means that in browsers if you're in the global scope var something will define a global variable.\n// In Node this is different. The top-level scope is not the global scope; var something inside a Node module will be local to that module.\n\n__filename;  // The filename of the code being executed. (absolute path)\n__dirname;   // The name of the directory that the currently executing script resides in. (absolute path)\nmodule;      // A reference to the current module. In particular module.exports is used for defining what a module exports and makes available through require().\nexports;     // A reference to the module.exports that is shorter to type.\nprocess;     // The process object is a global object and can be accessed from anywhere. It is an instance of EventEmitter.\nBuffer;      // The Buffer class is a global type for dealing with binary data directly.\n\n\n/* *******************************************************************************************\n * CONSOLE\n * http://nodejs.org/api/console.html\n * ******************************************************************************************* */\n\n\nconsole.log([data], [...]);             // Prints to stdout with newline.\nconsole.info([data], [...]);            // Same as console.log.\nconsole.error([data], [...]);           // Same as console.log but prints to stderr.\nconsole.warn([data], [...]);            // Same as console.error.\nconsole.dir(obj);                       // Uses util.inspect on obj and prints resulting string to stdout.\nconsole.time(label);                    // Mark a time.\nconsole.timeEnd(label);                 // Finish timer, record output.\nconsole.trace(label);                   // Print a stack trace to stderr of the current position.\nconsole.assert(expression, [message]);  // Same as assert.ok() where if the expression evaluates as false throw an AssertionError with message.\n\n\n/* *******************************************************************************************\n * TIMERS\n * http://nodejs.org/api/timers.html\n * ******************************************************************************************* */\n\n\nsetTimeout(callback, delay, [arg], [...]);   // To schedule execution of a one-time callback after delay milliseconds. Optionally you can also pass arguments to the callback.\nclearTimeout(t);                             // Stop a timer that was previously created with setTimeout().\nsetInterval(callback, delay, [arg], [...]);  // To schedule the repeated execution of callback every delay milliseconds. Optionally you can also pass arguments to the callback.\nclearInterval(t);                            // Stop a timer that was previously created with setInterval().\nsetImmediate(callback, [arg], [...]);        // To schedule the \"immediate\" execution of callback after I/O events callbacks and before setTimeout and setInterval.\nclearImmediate(immediateObject);             // Stop a timer that was previously created with setImmediate().\n\nunref();  // Allow you to create a timer that is active but if it is the only item left in the event loop, node won't keep the program running.\nref();    // If you had previously unref()d a timer you can call ref() to explicitly request the timer hold the program open.\n\n\n/* *******************************************************************************************\n * MODULES\n * http://nodejs.org/api/modules.html\n * ******************************************************************************************* */\n\n\nvar module = require('./module.js');    // Loads the module module.js in the same directory.\nmodule.require('./another_module.js');  // load another_module as if require() was called from the module itself.\n\nmodule.id;        // The identifier for the module. Typically this is the fully resolved filename.\nmodule.filename;  // The fully resolved filename to the module.\nmodule.loaded;    // Whether or not the module is done loading, or is in the process of loading.\nmodule.parent;    // The module that required this one.\nmodule.children;  // The module objects required by this one.\n\nexports.area = function (r) {\n  return Math.PI * r * r;\n};\n\n// If you want the root of your module's export to be a function (such as a constructor)\n// or if you want to export a complete object in one assignment instead of building it one property at a time,\n// assign it to module.exports instead of exports.\nmodule.exports = function(width) {\n  return {\n    area: function() {\n      return width * width;\n    }\n  };\n}\n\n\n/* *******************************************************************************************\n * PROCESS\n * http://nodejs.org/api/process.html\n * ******************************************************************************************* */\n\n\nprocess.on('exit', function(code) {});              // Emitted when the process is about to exit\nprocess.on('uncaughtException', function(err) {});  // Emitted when an exception bubbles all the way back to the event loop. (should not be used)\n\nprocess.stdout;           // A writable stream to stdout.\nprocess.stderr;           // A writable stream to stderr.\nprocess.stdin;            // A readable stream for stdin.\n\nprocess.argv;             // An array containing the command line arguments.\nprocess.env;              // An object containing the user environment.\nprocess.execPath;         // This is the absolute pathname of the executable that started the process.\nprocess.execArgv;         // This is the set of node-specific command line options from the executable that started the process.\n\nprocess.arch;             // What processor architecture you're running on: 'arm', 'ia32', or 'x64'.\nprocess.config;           // An Object containing the JavaScript representation of the configure options that were used to compile the current node executable.\nprocess.pid;              // The PID of the process.\nprocess.platform;         // What platform you're running on: 'darwin', 'freebsd', 'linux', 'sunos' or 'win32'.\nprocess.title;            // Getter/setter to set what is displayed in 'ps'.\nprocess.version;          // A compiled-in property that exposes NODE_VERSION.\nprocess.versions;         // A property exposing version strings of node and its dependencies.\n\nprocess.abort();          // This causes node to emit an abort. This will cause node to exit and generate a core file.\nprocess.chdir(dir);       // Changes the current working directory of the process or throws an exception if that fails.\nprocess.cwd();            // Returns the current working directory of the process.\nprocess.exit([code]);     // Ends the process with the specified code. If omitted, exit uses the 'success' code 0.\nprocess.getgid();         // Gets the group identity of the process.\nprocess.setgid(id);       // Sets the group identity of the process.\nprocess.getuid();         // Gets the user identity of the process.\nprocess.setuid(id);       // Sets the user identity of the process.\nprocess.getgroups();      // Returns an array with the supplementary group IDs.\nprocess.setgroups(grps);  // Sets the supplementary group IDs.\n\nprocess.initgroups(user, extra_grp);  // Reads /etc/group and initializes the group access list, using all groups of which the user is a member.\nprocess.kill(pid, [signal]);          // Send a signal to a process. pid is the process id and signal is the string describing the signal to send.\nprocess.memoryUsage();                // Returns an object describing the memory usage of the Node process measured in bytes.\nprocess.nextTick(callback);           // On the next loop around the event loop call this callback.\nprocess.maxTickDepth;                 // Callbacks passed to process.nextTick will usually be called at the end of the current flow of execution, and are thus approximately as fast as calling a function synchronously.\nprocess.umask([mask]);                // Sets or reads the process's file mode creation mask.\nprocess.uptime();                     // Number of seconds Node has been running.\nprocess.hrtime();                     // Returns the current high-resolution real time in a [seconds, nanoseconds] tuple Array.\n\n\n/* *******************************************************************************************\n * CHILD PROCESS\n * http://nodejs.org/api/child_process.html\n * ******************************************************************************************* */\n\n\n// Node provides a tri-directional popen facility through the child_process module.\n// It is possible to stream data through a child's stdin, stdout, and stderr in a fully non-blocking way.\n\nChildProcess;                                                 // Class. ChildProcess is an EventEmitter.\n\nchild.stdin;                                                  // A Writable Stream that represents the child process's stdin\nchild.stdout;                                                 // A Readable Stream that represents the child process's stdout\nchild.stderr;                                                 // A Readable Stream that represents the child process's stderr.\nchild.pid;                                                    // The PID of the child process\nchild.connected;                                              // If .connected is false, it is no longer possible to send messages\nchild.kill([signal]);                                         // Send a signal to the child process\nchild.send(message, [sendHandle]);                            // When using child_process.fork() you can write to the child using child.send(message, [sendHandle]) and messages are received by a 'message' event on the child.\nchild.disconnect();                                           // Close the IPC channel between parent and child, allowing the child to exit gracefully once there are no other connections keeping it alive.\nchild_process.spawn(command, [args], [options]);              // Launches a new process with the given command, with command line arguments in args. If omitted, args defaults to an empty Array.\nchild_process.exec(command, [options], callback);             // Runs a command in a shell and buffers the output.\nchild_process.execFile(file, [args], [options], [callback]);  // Runs a command in a shell and buffers the output.\nchild_process.fork(modulePath, [args], [options]);            // This is a special case of the spawn() functionality for spawning Node processes. In addition to having all the methods in a normal ChildProcess instance, the returned object has a communication channel built-in.\n\n\n/* *******************************************************************************************\n * UTIL\n * http://nodejs.org/api/util.html\n * ******************************************************************************************* */\n\n\n// These functions are in the module 'util'. Use require('util') to access them.\n\nutil.format(format, [...]);    // Returns a formatted string using the first argument as a printf-like format. (%s, %d, %j)\nutil.debug(string);            // A synchronous output function. Will block the process and output string immediately to stderr.\nutil.error([...]);             // Same as util.debug() except this will output all arguments immediately to stderr.\nutil.puts([...]);              // A synchronous output function. Will block the process and output all arguments to stdout with newlines after each argument.\nutil.print([...]);             // A synchronous output function. Will block the process, cast each argument to a string then output to stdout. (no newlines)\nutil.log(string);              // Output with timestamp on stdout.\nutil.inspect(object, [opts]);  // Return a string representation of object, which is useful for debugging. (options: showHidden, depth, colors, customInspect)\nutil.isArray(object);          // Returns true if the given \"object\" is an Array. false otherwise.\nutil.isRegExp(object);         // Returns true if the given \"object\" is a RegExp. false otherwise.\nutil.isDate(object);           // Returns true if the given \"object\" is a Date. false otherwise.\nutil.isError(object);          // Returns true if the given \"object\" is an Error. false otherwise.\nutil.promisify(fn)             // Takes a function whose last argument is a callback and returns a version that returns promises.\n\nutil.inherits(constructor, superConstructor);  // Inherit the prototype methods from one constructor into another.\n\n\n/* *******************************************************************************************\n * EVENTS\n * http://nodejs.org/api/events.html\n * ******************************************************************************************* */\n\n\n// All objects which emit events are instances of events.EventEmitter. You can access this module by doing: require(\"events\");\n// To access the EventEmitter class, require('events').EventEmitter.\n// All EventEmitters emit the event 'newListener' when new listeners are added and 'removeListener' when a listener is removed.\n\nemitter.addListener(event, listener);        // Adds a listener to the end of the listeners array for the specified event.\nemitter.on(event, listener);                 // Same as emitter.addListener().\nemitter.once(event, listener);               // Adds a one time listener for the event. This listener is invoked only the next time the event is fired, after which it is removed.\nemitter.removeListener(event, listener);     // Remove a listener from the listener array for the specified event.\nemitter.removeAllListeners([event]);         // Removes all listeners, or those of the specified event.\nemitter.setMaxListeners(n);                  // By default EventEmitters will print a warning if more than 10 listeners are added for a particular event.\nemitter.listeners(event);                    // Returns an array of listeners for the specified event.\nemitter.emit(event, [arg1], [arg2], [...]);  // Execute each of the listeners in order with the supplied arguments. Returns true if event had listeners, false otherwise.\n\nEventEmitter.listenerCount(emitter, event);  // Return the number of listeners for a given event.\n\n\n/* *******************************************************************************************\n * STREAM\n * http://nodejs.org/api/stream.html\n * ******************************************************************************************* */\n\n\n// A stream is an abstract interface implemented by various objects in Node. For example a request to an HTTP server is a stream, as is stdout.\n// Streams are readable, writable, or both. All streams are instances of EventEmitter.\n\n// The Readable stream interface is the abstraction for a source of data that you are reading from.\n// In other words, data comes out of a Readable stream.\n// A Readable stream will not start emitting data until you indicate that you are ready to receive it.\n// Examples of readable streams include: http responses on the client, http requests on the server, fs read streams\n// zlib streams, crypto streams, tcp sockets, child process stdout and stderr, process.stdin.\n\nvar readable = getReadableStreamSomehow();\n\nreadable.on('readable', function() {});   // When a chunk of data can be read from the stream, it will emit a 'readable' event.\nreadable.on('data', function(chunk) {});  // If you attach a data event listener, then it will switch the stream into flowing mode, and data will be passed to your handler as soon as it is available.\nreadable.on('end', function() {});        // This event fires when there will be no more data to read.\nreadable.on('close', function() {});      // Emitted when the underlying resource (for example, the backing file descriptor) has been closed. Not all streams will emit this.\nreadable.on('error', function() {});      // Emitted if there was an error receiving data.\n\n// The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n// This method should only be called in non-flowing mode. In flowing-mode, this method is called automatically until the internal buffer is drained.\nreadable.read([size]);\n\nreadable.setEncoding(encoding);           // Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\nreadable.resume();                        // This method will cause the readable stream to resume emitting data events.\nreadable.pause();                         // This method will cause a stream in flowing-mode to stop emitting data events.\nreadable.pipe(destination, [options]);    // This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\nreadable.unpipe([destination]);           // This method will remove the hooks set up for a previous pipe() call. If the destination is not specified, then all pipes are removed.\nreadable.unshift(chunk);                  // This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n\n\n// The Writable stream interface is an abstraction for a destination that you are writing data to.\n// Examples of writable streams include: http requests on the client, http responses on the server, fs write streams,\n// zlib streams, crypto streams, tcp sockets, child process stdin, process.stdout, process.stderr.\n\nvar writer = getWritableStreamSomehow();\n\nwritable.write(chunk, [encoding], [callback]);  // This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled.\nwriter.once('drain', write);                    // If a writable.write(chunk) call returns false, then the drain event will indicate when it is appropriate to begin writing more data to the stream.\n\nwritable.end([chunk], [encoding], [callback]);  // Call this method when no more data will be written to the stream.\nwriter.on('finish', function() {});             // When the end() method has been called, and all data has been flushed to the underlying system, this event is emitted.\nwriter.on('pipe', function(src) {});            // This is emitted whenever the pipe() method is called on a readable stream, adding this writable to its set of destinations.\nwriter.on('unpipe', function(src) {});          // This is emitted whenever the unpipe() method is called on a readable stream, removing this writable from its set of destinations.\nwriter.on('error', function(src) {});           // Emitted if there was an error when writing or piping data.\n\n\n// Duplex streams are streams that implement both the Readable and Writable interfaces. See above for usage.\n// Examples of Duplex streams include: tcp sockets, zlib streams, crypto streams.\n\n// Transform streams are Duplex streams where the output is in some way computed from the input. They implement both the Readable and Writable interfaces. See above for usage.\n// Examples of Transform streams include: zlib streams, crypto streams.\n\n\n/* *******************************************************************************************\n * FILE SYSTEM\n * http://nodejs.org/api/fs.html\n * ******************************************************************************************* */\n\n\n// To use this module do require('fs').\n// All the methods have asynchronous and synchronous forms.\n\nfs.rename(oldPath, newPath, callback);  // Asynchronous rename. No arguments other than a possible exception are given to the completion callback.Asynchronous ftruncate. No arguments other than a possible exception are given to the completion callback.\nfs.renameSync(oldPath, newPath);        // Synchronous rename.\n\nfs.ftruncate(fd, len, callback);        // Asynchronous ftruncate. No arguments other than a possible exception are given to the completion callback.\nfs.ftruncateSync(fd, len);              // Synchronous ftruncate.\nfs.truncate(path, len, callback);       // Asynchronous truncate. No arguments other than a possible exception are given to the completion callback.\nfs.truncateSync(path, len);             // Synchronous truncate.\n\nfs.chown(path, uid, gid, callback);     // Asynchronous chown. No arguments other than a possible exception are given to the completion callback.\nfs.chownSync(path, uid, gid);           // Synchronous chown.\nfs.fchown(fd, uid, gid, callback);      // Asynchronous fchown. No arguments other than a possible exception are given to the completion callback.\nfs.fchownSync(fd, uid, gid);            // Synchronous fchown.\nfs.lchown(path, uid, gid, callback);    // Asynchronous lchown. No arguments other than a possible exception are given to the completion callback.\nfs.lchownSync(path, uid, gid);          // Synchronous lchown.\n\nfs.chmod(path, mode, callback);         // Asynchronous chmod. No arguments other than a possible exception are given to the completion callback.\nfs.chmodSync(path, mode);               // Synchronous chmod.\nfs.fchmod(fd, mode, callback);          // Asynchronous fchmod. No arguments other than a possible exception are given to the completion callback.\nfs.fchmodSync(fd, mode);                // Synchronous fchmod.\nfs.lchmod(path, mode, callback);        // Asynchronous lchmod. No arguments other than a possible exception are given to the completion callback.\nfs.lchmodSync(path, mode);              // Synchronous lchmod.\n\nfs.stat(path, callback);                // Asynchronous stat. The callback gets two arguments (err, stats) where stats is a fs.Stats object.\nfs.statSync(path);                      // Synchronous stat. Returns an instance of fs.Stats.\nfs.lstat(path, callback);               // Asynchronous lstat. The callback gets two arguments (err, stats) where stats is a fs.Stats object. lstat() is identical to stat(), except that if path is a symbolic link, then the link itself is stat-ed, not the file that it refers to.\nfs.lstatSync(path);                     // Synchronous lstat. Returns an instance of fs.Stats.\nfs.fstat(fd, callback);                 // Asynchronous fstat. The callback gets two arguments (err, stats) where stats is a fs.Stats object. fstat() is identical to stat(), except that the file to be stat-ed is specified by the file descriptor fd.\nfs.fstatSync(fd);                       // Synchronous fstat. Returns an instance of fs.Stats.\n\nfs.link(srcpath, dstpath, callback);             // Asynchronous link. No arguments other than a possible exception are given to the completion callback.\nfs.linkSync(srcpath, dstpath);                   // Synchronous link.\nfs.symlink(srcpath, dstpath, [type], callback);  // Asynchronous symlink. No arguments other than a possible exception are given to the completion callback. The type argument can be set to 'dir', 'file', or 'junction' (default is 'file') and is only available on Windows (ignored on other platforms)\nfs.symlinkSync(srcpath, dstpath, [type]);        // Synchronous symlink.\nfs.readlink(path, callback);                     // Asynchronous readlink. The callback gets two arguments (err, linkString).\nfs.readlinkSync(path);                           // Synchronous readlink. Returns the symbolic link's string value.\nfs.unlink(path, callback);                       // Asynchronous unlink. No arguments other than a possible exception are given to the completion callback.\nfs.unlinkSync(path);                             // Synchronous unlink.\n\nfs.realpath(path, [cache], callback);     // Asynchronous realpath. The callback gets two arguments (err, resolvedPath).\nfs.realpathSync(path, [cache]);           // Synchronous realpath. Returns the resolved path.\n\nfs.rmdir(path, callback);                 // Asynchronous rmdir. No arguments other than a possible exception are given to the completion callback.\nfs.rmdirSync(path);                       // Synchronous rmdir.\nfs.mkdir(path, [mode], callback);         // Asynchronous mkdir. No arguments other than a possible exception are given to the completion callback. mode defaults to 0777.\nfs.mkdirSync(path, [mode]);               // Synchronous mkdir.\nfs.readdir(path, callback);               // Asynchronous readdir. Reads the contents of a directory. The callback gets two arguments (err, files) where files is an array of the names of the files in the directory excluding '.' and '..'.\nfs.readdirSync(path);                     // Synchronous readdir. Returns an array of filenames excluding '.' and '..'.\nfs.close(fd, callback);                   // Asynchronous close. No arguments other than a possible exception are given to the completion callback.\nfs.closeSync(fd);                         // Synchronous close.\nfs.open(path, flags, [mode], callback);   // Asynchronous file open.\nfs.openSync(path, flags, [mode]);         // Synchronous version of fs.open().\nfs.utimes(path, atime, mtime, callback);  // Change file timestamps of the file referenced by the supplied path.\nfs.utimesSync(path, atime, mtime);        // Synchronous version of fs.utimes().\nfs.futimes(fd, atime, mtime, callback);   // Change the file timestamps of a file referenced by the supplied file descriptor.\nfs.futimesSync(fd, atime, mtime);         // Synchronous version of fs.futimes().\nfs.fsync(fd, callback);                   // Asynchronous fsync. No arguments other than a possible exception are given to the completion callback.\nfs.fsyncSync(fd);                         // Synchronous fsync.\n\nfs.write(fd, buffer, offset, length, position, callback);  // Write buffer to the file specified by fd.\nfs.writeSync(fd, buffer, offset, length, position);        // Synchronous version of fs.write(). Returns the number of bytes written.\nfs.read(fd, buffer, offset, length, position, callback);   // Read data from the file specified by fd.\nfs.readSync(fd, buffer, offset, length, position);         // Synchronous version of fs.read. Returns the number of bytesRead.\nfs.readFile(filename, [options], callback);                // Asynchronously reads the entire contents of a file.\nfs.readFileSync(filename, [options]);                      // Synchronous version of fs.readFile. Returns the contents of the filename. If the encoding option is specified then this function returns a string. Otherwise it returns a buffer.\n\nfs.writeFile(filename, data, [options], callback);   // Asynchronously writes data to a file, replacing the file if it already exists. data can be a string or a buffer.\nfs.writeFileSync(filename, data, [options]);         // The synchronous version of fs.writeFile.\nfs.appendFile(filename, data, [options], callback);  // Asynchronously append data to a file, creating the file if it not yet exists. data can be a string or a buffer.\nfs.appendFileSync(filename, data, [options]);        // The synchronous version of fs.appendFile.\nfs.watch(filename, [options], [listener]);           // Watch for changes on filename, where filename is either a file or a directory. The returned object is a fs.FSWatcher. The listener callback gets two arguments (event, filename). event is either 'rename' or 'change', and filename is the name of the file which triggered the event.\nfs.exists(path, callback);                           // Test whether or not the given path exists by checking with the file system. Then call the callback argument with either true or false. (should not be used)\nfs.existsSync(path);                                 // Synchronous version of fs.exists. (should not be used)\n\n// fs.Stats: objects returned from fs.stat(), fs.lstat() and fs.fstat() and their synchronous counterparts are of this type.\nstats.isFile();\nstats.isDirectory()\nstats.isBlockDevice()\nstats.isCharacterDevice()\nstats.isSymbolicLink()  // (only valid with fs.lstat())\nstats.isFIFO()\nstats.isSocket()\n\nfs.createReadStream(path, [options]);   // Returns a new ReadStream object.\nfs.createWriteStream(path, [options]);  // Returns a new WriteStream object.\n\n\n/* *******************************************************************************************\n * PATH\n * http://nodejs.org/api/fs.html\n * ******************************************************************************************* */\n\n\n// Use require('path') to use this module.\n// This module contains utilities for handling and transforming file paths.\n// Almost all these methods perform only string transformations.\n// The file system is not consulted to check whether paths are valid.\n\npath.normalize(p);                    // Normalize a string path, taking care of '..' and '.' parts.\npath.join([path1], [path2], [...]);   // Join all arguments together and normalize the resulting path.\npath.resolve([from ...], to);         // Resolves 'to' to an absolute path.\npath.relative(from, to);              // Solve the relative path from 'from' to 'to'.\npath.dirname(p);                      // Return the directory name of a path. Similar to the Unix dirname command.\npath.basename(p, [ext]);              // Return the last portion of a path. Similar to the Unix basename command.\npath.extname(p);                      // Return the extension of the path, from the last '.' to end of string in the last portion of the path.\n\npath.sep;                             // The platform-specific file separator. '\\\\' or '/'.\npath.delimiter;                       // The platform-specific path delimiter, ';' or ':'.\n\n\n/* *******************************************************************************************\n * HTTP\n * http://nodejs.org/api/http.html\n * ******************************************************************************************* */\n\n\n// To use the HTTP server and client one must require('http').\n\nhttp.STATUS_CODES;                                             // A collection of all the standard HTTP response status codes, and the short description of each.\nhttp.request(options, [callback]);                             // This function allows one to transparently issue requests.\nhttp.get(options, [callback]);                                 // Set the method to GET and calls req.end() automatically.\n\nserver = http.createServer([requestListener]);                 // Returns a new web server object. The requestListener is a function which is automatically added to the 'request' event.\nserver.listen(port, [hostname], [backlog], [callback]);        // Begin accepting connections on the specified port and hostname.\nserver.listen(path, [callback]);                               // Start a UNIX socket server listening for connections on the given path.\nserver.listen(handle, [callback]);                             // The handle object can be set to either a server or socket (anything with an underlying _handle member), or a {fd: &#x3C;n>} object.\nserver.close([callback]);                                      // Stops the server from accepting new connections.\nserver.setTimeout(msecs, callback);                            // Sets the timeout value for sockets, and emits a 'timeout' event on the Server object, passing the socket as an argument, if a timeout occurs.\n\nserver.maxHeadersCount;  // Limits maximum incoming headers count, equal to 1000 by default. If set to 0 - no limit will be applied.\nserver.timeout;          // The number of milliseconds of inactivity before a socket is presumed to have timed out.\n\nserver.on('request', function (request, response) { });        // Emitted each time there is a request.\nserver.on('connection', function (socket) { });                // When a new TCP stream is established.\nserver.on('close', function () { });                           // Emitted when the server closes.\nserver.on('checkContinue', function (request, response) { });  // Emitted each time a request with an http Expect: 100-continue is received.\nserver.on('connect', function (request, socket, head) { });    // Emitted each time a client requests a http CONNECT method.\nserver.on('upgrade', function (request, socket, head) { });    // Emitted each time a client requests a http upgrade.\nserver.on('clientError', function (exception, socket) { });    // If a client connection emits an 'error' event - it will forwarded here.\n\nrequest.write(chunk, [encoding]);                              // Sends a chunk of the body.\nrequest.end([data], [encoding]);                               // Finishes sending the request. If any parts of the body are unsent, it will flush them to the stream.\nrequest.abort();                                               // Aborts a request.\nrequest.setTimeout(timeout, [callback]);                       // Once a socket is assigned to this request and is connected socket.setTimeout() will be called.\nrequest.setNoDelay([noDelay]);                                 // Once a socket is assigned to this request and is connected socket.setNoDelay() will be called.\nrequest.setSocketKeepAlive([enable], [initialDelay]);          // Once a socket is assigned to this request and is connected socket.setKeepAlive() will be called.\n\nrequest.on('response', function(response) { });                // Emitted when a response is received to this request. This event is emitted only once.\nrequest.on('socket', function(socket) { });                    // Emitted after a socket is assigned to this request.\nrequest.on('connect', function(response, socket, head) { });   // Emitted each time a server responds to a request with a CONNECT method. If this event isn't being listened for, clients receiving a CONNECT method will have their connections closed.\nrequest.on('upgrade', function(response, socket, head) { });   // Emitted each time a server responds to a request with an upgrade. If this event isn't being listened for, clients receiving an upgrade header will have their connections closed.\nrequest.on('continue', function() { });                        // Emitted when the server sends a '100 Continue' HTTP response, usually because the request contained 'Expect: 100-continue'. This is an instruction that the client should send the request body.\n\nresponse.write(chunk, [encoding]);                             // This sends a chunk of the response body. If this merthod is called and response.writeHead() has not been called, it will switch to implicit header mode and flush the implicit headers.\nresponse.writeContinue();                                      // Sends a HTTP/1.1 100 Continue message to the client, indicating that the request body should be sent.\nresponse.writeHead(statusCode, [reasonPhrase], [headers]);     // Sends a response header to the request.\nresponse.setTimeout(msecs, callback);                          // Sets the Socket's timeout value to msecs. If a callback is provided, then it is added as a listener on the 'timeout' event on the response object.\nresponse.setHeader(name, value);                               // Sets a single header value for implicit headers. If this header already exists in the to-be-sent headers, its value will be replaced. Use an array of strings here if you need to send multiple headers with the same name.\nresponse.getHeader(name);                                      // Reads out a header that's already been queued but not sent to the client. Note that the name is case insensitive.\nresponse.removeHeader(name);                                   // Removes a header that's queued for implicit sending.\nresponse.addTrailers(headers);                                 // This method adds HTTP trailing headers (a header but at the end of the message) to the response.\nresponse.end([data], [encoding]);                              // This method signals to the server that all of the response headers and body have been sent; that server should consider this message complete. The method, response.end(), MUST be called on each response.\n\nresponse.statusCode;                                           // When using implicit headers (not calling response.writeHead() explicitly), this property controls the status code that will be sent to the client when the headers get flushed.\nresponse.headersSent;                                          // Boolean (read-only). True if headers were sent, false otherwise.\nresponse.sendDate;                                             // When true, the Date header will be automatically generated and sent in the response if it is not already present in the headers. Defaults to true.\n\nresponse.on('close', function () { });  // Indicates that the underlying connection was terminated before response.end() was called or able to flush.\nresponse.on('finish', function() { });  // Emitted when the response has been sent.\n\nmessage.httpVersion;                    // In case of server request, the HTTP version sent by the client. In the case of client response, the HTTP version of the connected-to server.\nmessage.headers;                        // The request/response headers object.\nmessage.trailers;                       // The request/response trailers object. Only populated after the 'end' event.\nmessage.method;                         // The request method as a string. Read only. Example: 'GET', 'DELETE'.\nmessage.url;                            // Request URL string. This contains only the URL that is present in the actual HTTP request.\nmessage.statusCode;                     // The 3-digit HTTP response status code. E.G. 404.\nmessage.socket;                         // The net.Socket object associated with the connection.\n\nmessage.setTimeout(msecs, callback);    // Calls message.connection.setTimeout(msecs, callback).\n\n\n/* *******************************************************************************************\n * URL\n * http://nodejs.org/api/url.html\n * ******************************************************************************************* */\n\n\n// This module has utilities for URL resolution and parsing. Call require('url') to use it.\n\nurl.parse(urlStr, [parseQueryString], [slashesDenoteHost]);  // Take a URL string, and return an object.\nurl.format(urlObj);                                          // Take a parsed URL object, and return a formatted URL string.\nurl.resolve(from, to);                                       // Take a base URL, and a href URL, and resolve them as a browser would for an anchor tag.\n\n\n/* *******************************************************************************************\n * QUERY STRING\n * http://nodejs.org/api/querystring.html\n * ******************************************************************************************* */\n\n\n// This module provides utilities for dealing with query strings. Call require('querystring') to use it.\n\nquerystring.stringify(obj, [sep], [eq]);         // Serialize an object to a query string. Optionally override the default separator ('&#x26;') and assignment ('=') characters.\nquerystring.parse(str, [sep], [eq], [options]);  // Deserialize a query string to an object. Optionally override the default separator ('&#x26;') and assignment ('=') characters.\n\n\n/* *******************************************************************************************\n * ASSERT\n * http://nodejs.org/api/assert.html\n * ******************************************************************************************* */\n\n\n// This module is used for writing unit tests for your applications, you can access it with require('assert').\n\nassert.fail(actual, expected, message, operator);     // Throws an exception that displays the values for actual and expected separated by the provided operator.\nassert(value, message); assert.ok(value, [message]);  // Tests if value is truthy, it is equivalent to assert.equal(true, !!value, message);\nassert.equal(actual, expected, [message]);            // Tests shallow, coercive equality with the equal comparison operator ( == ).\nassert.notEqual(actual, expected, [message]);         // Tests shallow, coercive non-equality with the not equal comparison operator ( != ).\nassert.deepEqual(actual, expected, [message]);        // Tests for deep equality.\nassert.notDeepEqual(actual, expected, [message]);     // Tests for any deep inequality.\nassert.strictEqual(actual, expected, [message]);      // Tests strict equality, as determined by the strict equality operator ( === )\nassert.notStrictEqual(actual, expected, [message]);   // Tests strict non-equality, as determined by the strict not equal operator ( !== )\nassert.throws(block, [error], [message]);             // Expects block to throw an error. error can be constructor, RegExp or validation function.\nassert.doesNotThrow(block, [message]);                // Expects block not to throw an error, see assert.throws for details.\nassert.ifError(value);                                // Tests if value is not a false value, throws if it is a true value. Useful when testing the first argument, error in callbacks.\n\n\n/* *******************************************************************************************\n * OS\n * http://nodejs.org/api/os.html\n * ******************************************************************************************* */\n\n\n// Provides a few basic operating-system related utility functions.\n// Use require('os') to access this module.\n\nos.tmpdir();             // Returns the operating system's default directory for temp files.\nos.endianness();         // Returns the endianness of the CPU. Possible values are \"BE\" or \"LE\".\nos.hostname();           // Returns the hostname of the operating system.\nos.type();               // Returns the operating system name.\nos.platform();           // Returns the operating system platform.\nos.arch();               // Returns the operating system CPU architecture.\nos.release();            // Returns the operating system release.\nos.uptime();             // Returns the system uptime in seconds.\nos.loadavg();            // Returns an array containing the 1, 5, and 15 minute load averages.\nos.totalmem();           // Returns the total amount of system memory in bytes.\nos.freemem();            // Returns the amount of free system memory in bytes.\nos.cpus();               // Returns an array of objects containing information about each CPU/core installed: model, speed (in MHz), and times (an object containing the number of milliseconds the CPU/core spent in: user, nice, sys, idle, and irq).\nos.networkInterfaces();  // Get a list of network interfaces.\nos.EOL;                  // A constant defining the appropriate End-of-line marker for the operating system.\n\n\n/* *******************************************************************************************\n * BUFFER\n * http://nodejs.org/api/buffer.html\n * ******************************************************************************************* */\n\n\n// Buffer is used to dealing with binary data\n// Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap\n\nBuffer.from(size);                                                  // Allocates a new buffer of size octets.\nBuffer.from(array);                                                 // Allocates a new buffer using an array of octets.\nBuffer.from(str, [encoding]);                                       // Allocates a new buffer containing the given str. encoding defaults to 'utf8'.\n\nBuffer.isEncoding(encoding);                                        // Returns true if the encoding is a valid encoding argument, or false otherwise.\nBuffer.isBuffer(obj);                                               // Tests if obj is a Buffer\nBuffer.concat(list, [totalLength]);                                 // Returns a buffer which is the result of concatenating all the buffers in the list together.\nBuffer.byteLength(string, [encoding]);                              // Gives the actual byte length of a string.\n\nbuf.write(string, [offset], [length], [encoding]);                  // Writes string to the buffer at offset using the given encoding\nbuf.toString([encoding], [start], [end]);                           // Decodes and returns a string from buffer data encoded with encoding (defaults to 'utf8') beginning at start (defaults to 0) and ending at end (defaults to buffer.length).\nbuf.toJSON();                                                       // Returns a JSON-representation of the Buffer instance, which is identical to the output for JSON Arrays\nbuf.copy(targetBuffer, [targetStart], [sourceStart], [sourceEnd]);  // Does copy between buffers. The source and target regions can be overlapped\nbuf.slice([start], [end]);                                          // Returns a new buffer which references the same memory as the old, but offset and cropped by the start (defaults to 0) and end (defaults to buffer.length) indexes. Negative indexes start from the end of the buffer.\nbuf.fill(value, [offset], [end]);                                   // Fills the buffer with the specified value\nbuf[index];                                                         // Get and set the octet at index\nbuf.length;                                                         // The size of the buffer in bytes, Note that this is not necessarily the size of the contents\n\nbuffer.INSPECT_MAX_BYTES;                                           // How many bytes will be returned when buffer.inspect() is called. This can be overridden by user modules.\n</code></pre>"},{"url":"/docs/audio/audio/","relativePath":"docs/audio/audio.md","relativeDir":"docs/audio","base":"audio.md","name":"audio","frontmatter":{"title":"Audio","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Lorem ipsum</h2>\n<p>Lorem ipsum dolor sit amet, <strong>consectetur adipiscing elit</strong>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<ul>\n<li>Lorem ipsum</li>\n<li>dolor sit amet</li>\n</ul>"},{"url":"/docs/articles/web-standards-checklist/","relativePath":"docs/articles/web-standards-checklist.md","relativeDir":"docs/articles","base":"web-standards-checklist.md","name":"web-standards-checklist","frontmatter":{"title":"Web Standards Checklist","weight":0,"excerpt":"(HTML, XHTML, XML, CSS, XSLT, DOM, MathML, SVG etc) and *pursue best practices* (valid code, accessible code, semantically correct code, user-friendly URLs etc).","seo":{"title":"Web Standards Checklist","description":"as an aid for developers who are interested in moving towards web standards","robots":[],"extra":[]},"template":"docs"},"html":"<h2>Web Standards Checklist</h2>\n<p>The term web standards can mean different things to different people. For some, it is '<em>table-free sites</em>', for others it is '<em>using valid code</em>'. However, web standards are much broader than that. A site built to web standards should <em>adhere to standards</em> (HTML, XHTML, XML, CSS, XSLT, DOM, MathML, SVG etc) and <em>pursue best practices</em> (valid code, accessible code, semantically correct code, user-friendly URLs etc).</p>\n<p>In other words, a site built to web standards should ideally be <em>lean, clean, CSS-based, accessible, usable and search engine friendly</em>.</p>\n<h3>About the checklist</h3>\n<p>This is a guide that can be used:</p>\n<ul>\n<li>to show the breadth of web standards</li>\n<li>as a handy tool for developers during the production phase of websites</li>\n<li>as an aid for developers who are interested in moving towards web standards</li>\n</ul>\n<h3>The checklist</h3>\n<ol>\n<li>\n<p><a href=\"http://maxdesign.com.au/news/checklist/#quality\">Quality of code</a></p>\n<ol>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-1\">Does the site use a correct Doctype?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-2\">Does the site use a Character set?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-3\">Does the site use Valid (X)HTML?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-4\">Does the site use Valid CSS?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-5\">Does the site use any CSS hacks?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-6\">Does the site use unnecessary classes or ids?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-7\">Is the code well structured?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-8\">Does the site have any broken links?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-9\">How does the site perform in terms of speed/page size?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section1-10\">Does the site have JavaScript errors?</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"http://maxdesign.com.au/news/checklist/#degree\">Degree of separation between content and presentation</a></p>\n<ol>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section2-1\">Does the site use CSS for all presentation aspects (fonts, colour, padding, borders etc)?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section2-2\">Are all decorative images in the CSS, or do they appear in the (X)HTML?</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"http://maxdesign.com.au/news/checklist/#users\">Accessibility for users</a></p>\n<ol>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-1\">Are \"alt\" attributes used for all descriptive images?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-2\">Does the site use relative units rather than absolute units for text size?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-3\">Do any aspects of the layout break if font size is increased?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-4\">Does the site use visible skip menus?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-5\">Does the site use accessible forms?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-6\">Does the site use accessible tables?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-7\">Is there sufficient colour brightness/contrasts?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-8\">Is colour alone used for critical information?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-9\">Is there delayed responsiveness for dropdown menus (for users with reduced motor skills)?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section3-10\">Are all links descriptive (for blind users)?</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"http://maxdesign.com.au/news/checklist/#devices\">Accessibility for devices</a></p>\n<ol>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section4-1\">Does the site work acceptably across modern and older browsers?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section4-2\">Is the content accessible with CSS switched off or not supported?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section4-3\">Is the content accessible with images switched off or not supported?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section4-4\">Does the site work in text browsers such as Lynx?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section4-5\">Does the site work well when printed?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section4-6\">Does the site work well in Hand Held devices?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section4-7\">Does the site include detailed metadata?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section4-8\">Does the site work well in a range of browser window sizes?</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"http://maxdesign.com.au/news/checklist/#usability\">Basic Usability</a></p>\n<ol>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-1\">Is there a clear visual hierarchy?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-2\">Are heading levels easy to distinguish?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-3\">Is the site's navigation easy to understand?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-4\">Is the site's navigation consistent?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-5\">Does the site use consistent and appropriate language?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-6\">Does the site have a sitemap page and contact page? Are they easy to find?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-7\">For large sites, is there a search tool?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-8\">Is there a link to the home page on every page in the site?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-9\">Are links underlined?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section5-10\">Are visited links clearly defined?</a></li>\n</ol>\n</li>\n<li>\n<p><a href=\"http://maxdesign.com.au/news/checklist/#site\">Site management</a></p>\n<ol>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section6-1\">Does the site have a meaningful and helpful 404 error page that works from any depth in the site?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section6-2\">Does the site use friendly URLs?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section6-3\">Do your URLs work without \"www\"?</a></li>\n<li><a href=\"http://maxdesign.com.au/news/checklist/#section6-4\">Does the site have a favicon?</a></li>\n</ol>\n</li>\n</ol>\n<h3>1. Quality of code</h3>\n<h4>1.1 Does the site use a correct Doctype?</h4>\n<blockquote>\n<p>A doctype (short for 'document type declaration') informs the validator which version of (X)HTML you're using, and must appear at the very top of every web page. Doctypes are a key component of compliant web pages: your markup and CSS won't validate without them.</p>\n<p><em><a href=\"http://www.alistapart.com/articles/doctype/\">Fix your site with the right doctype</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.w3.org/QA/2002/04/valid-dtd-list.html\">http://www.w3.org/QA/2002/04/valid-dtd-list.html</a></li>\n<li><a href=\"http://css.maxdesign.com.au/listamatic/about-boxmodel.htm\">http://css.maxdesign.com.au/listamatic/about-boxmodel.htm</a></li>\n<li><a href=\"http://gutfeldt.ch/matthias/articles/doctypeswitch.html\">http://gutfeldt.ch/matthias/articles/doctypeswitch.html</a></li>\n</ul>\n<h4>1.2 Does the site use a Character set?</h4>\n<blockquote>\n<p>If a user agent (eg. a browser) is unable to detect the character encoding used in a Web document, the user may be presented with unreadable text. This information is particularly important for those maintaining and extending a multilingual site, but  declaring the character encoding of the document is important for anyone producing XHTML/HTML or CSS.</p>\n<p><em><a href=\"http://www.w3.org/International/tutorials/tutorial-char-enc/\">Tutorial: Character sets &#x26; encodings in XHTML, HTML and CSS</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.w3.org/International/O-charset.html\">Character encodings</a></li>\n</ul>\n<h4>1.3 Does the site use Valid (X)HTML?</h4>\n<blockquote>\n<p>Valid code will render faster than code with errors. Valid code will render better than invalid code. Browsers are becoming more standards compliant, and it is becoming increasingly necessary to write valid and standards compliant HTML</p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://validator.w3.org/\">W3C Markup Validation Service</a></li>\n</ul>\n<h4>1.4 Does the site use Valid CSS?</h4>\n<blockquote>\n<p>You need to make sure that there aren't any errors in either your HTML or your CSS, since mistakes in either place can result in botched document appearance.</p>\n<p><em><a href=\"http://www.meyerweb.com/eric/articles/webrev/199904.html\">Help! My CSS Isn't Working!</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://jigsaw.w3.org/css-validator/\">W3C CSS Validation Service</a></li>\n</ul>\n<h4>1.5 Does the site use any CSS hacks?</h4>\n<blockquote>\n<p>Basically, hacks come down to personal choice, the amount of knowledge you have of workarounds, the specific design you are trying to achieve.</p>\n<p><em><a href=\"http://www.mail-archive.com/wsg@webstandardsgroup.org/msg05823.html\">Standard Hacks?</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://css-discuss.incutio.com/?page=CssHack\">CSS Hacks</a></li>\n<li><a href=\"http://css-discuss.incutio.com/?page=ToHackOrNotToHack\">To hack or not to hack</a></li>\n<li><a href=\"http://centricle.com/ref/css/filters/\">CSS filters</a></li>\n</ul>\n<h4>1.6 Does the site use unnecessary classes or ids?</h4>\n<blockquote>\n<p>I've noticed that developers learning new skills often end up with good CSS but poor XHTML. Specifically, the HTML code tends to be full of unnecessary divs and ids. This results in fairly meaningless HTML and bloated style sheets.</p>\n<p><em><a href=\"http://www.clagnut.com/blog/228/\">Markup tactics</a></em></p>\n</blockquote>\n<h4>1.7 Is the code well structured?</h4>\n<blockquote>\n<p>Semantically correct markup uses html elements for their given purpose. Well structured HTML has semantic meaning for a wide range of user agents (browsers without style sheets, text browsers, PDAs, search engines etc.)</p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.w3.org/2003/12/semantic-extractor.html\">Semantic data extractor</a></li>\n</ul>\n<h4>1.8 Does the site have any broken links?</h4>\n<p>Broken links can frustrate users and potentially drive customers away. Broken links can also keep search engines from properly indexing your site.</p>\n<p>More:</p>\n<ul>\n<li><a href=\"http://validator.w3.org/checklink\">W3C Link checker</a></li>\n</ul>\n<h4>1.9 How does the site perform in terms of speed/page size?</h4>\n<blockquote>\n<p>Don't make me wait... That's the message users give us in survey after survey. Even broadband users can suffer the slow-loading blues.</p>\n<p><em><a href=\"http://www.websiteoptimization.com/speed/\">Speed Up Your Site: Web Site Optimization</a></em></p>\n</blockquote>\n<h4>1.10 Does the site have JavaScript errors?</h4>\n<p>Internet Explore for Windows allows you to turn on a debugger that will pop up a new window and let you know there are javascript errors on your site. This is available under 'Internet Options' on the Advanced tab. Uncheck 'Disable script debugging'.</p>\n<h3>2. Degree of separation between content and presentation</h3>\n<h4>2.1 Does the site use CSS for all presentation aspects (fonts, colour, padding, borders etc)?</h4>\n<blockquote>\n<p>Use style sheets to control layout and presentation</p>\n<p><em><a href=\"http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-style-sheets\">Web Content Accessibility Guidelines 1.0 -- checkpoint 3.3</a></em></p>\n</blockquote>\n<h4>2.2 Are all decorative images in the CSS, or do they appear in the (X)HTML?</h4>\n<blockquote>\n<p>The aim for web developers is to remove all presentation from the html code, leaving it clean and semantically correct.</p>\n</blockquote>\n<h3>3. Accessibility for users</h3>\n<h4>3.1 Are \"alt\" attributes used for all descriptive images?</h4>\n<blockquote>\n<p>Provide a text equivalent for every non-text element</p>\n<p><em><a href=\"http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-text-equivalent\">Web Content Accessibility Guidelines -- checkpoint 1.1</a></em></p>\n</blockquote>\n<h4>3.2 Does the site use relative units rather than absolute units for text size?</h4>\n<blockquote>\n<p>Use relative rather than absolute units in markup language attribute values and style sheet property values'</p>\n<p><em><a href=\"http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-relative-units\">Web Content Accessibility Guidelines -- checkpoint 3.4</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-relative-units\">Web Content Accessibility Guidelines -- checkpoint 3.4</a></li>\n<li><a href=\"http://www.clagnut.com/blog/348/\">How to size text using ems</a></li>\n</ul>\n<h4>3.3 Do any aspects of the layout break if font size is increased?</h4>\n<p>Try this simple test. Look at your website in a browser that supports easy incrementation of font size. Now increase your browser's font size. And again. And again... Look at your site. Does the page layout still hold together? It is dangerous for developers to assume that everyone browses using default font sizes.</p>\n<h4>3.4 Does the site use visible skip menus?</h4>\n<blockquote>\n<p>A method shall be provided that permits users to skip repetitive navigation links.</p>\n<p><em><a href=\"http://www.section508.gov/index.cfm?FuseAction=Content&#x26;ID=12\">Section 508</a></em></p>\n</blockquote>\n<blockquote>\n<p>Group related links, identify the group (for user agents), and, until user agents do so, provide a way to bypass the group</p>\n<p><em><a href=\"http://www.w3.org/TR/WCAG10-TECHS/#tech-group-links\">Web Content Accessibility Guidelines -- checkpoint 13.6</a></em></p>\n</blockquote>\n<blockquote>\n<p>...blind visitors are not the only ones inconvenienced by too many links in a navigation area. Recall that a mobility-impaired person with poor adaptive technology might be stuck tabbing through that morass.</p>\n<p><em><a href=\"http://joeclark.org/book/sashay/serialization/Chapter08.html#h4-2020\">Keep them visible!</a></em></p>\n</blockquote>\n<h4>3.5 Does the site use accessible forms?</h4>\n<blockquote>\n<p>Forms aren't the easiest of things to use for people with disabilities. Navigating around a page with written content is one thing, hopping between form fields and inputting information is another</p>\n<p><em><a href=\"http://www.htmldog.com/guides/htmladvanced/forms/\">Accessible forms</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.webstandards.org/learn/tutorials/accessible-forms/01-accessible-forms.html\">Accessible html/xhtml forms</a></li>\n<li><a href=\"http://www.accessify.com/tools-and-wizards/accessible-form-builder.asp\">Accessible form builder</a></li>\n</ul>\n<h4>3.6 Does the site use accessible tables?</h4>\n<blockquote>\n<p>For data tables, identify row and column headers... For data tables that have two or more logical levels of row or column headers, use markup to associate data cells and header cells.</p>\n<p><em><a href=\"http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-table-headers\">Web Content Accessiblity Guidelines -- checkpoint 5.1</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://bellevuecollege.edu/webpublishing/tips/accessibility/tables.asp\">How to create accessible tables</a></li>\n<li><a href=\"http://www.accessify.com/tools-and-wizards/accessibility-tools/table-builder/\">Accessible table builder</a></li>\n<li><a href=\"http://www.webaim.org/techniques/tables/\">Creating accessible tables</a></li>\n</ul>\n<h4>3.7 Is there sufficient colour brightness/contrasts?</h4>\n<blockquote>\n<p>Ensure that foreground and background colour combinations provide sufficient contrast when viewed by someone having colour deficits</p>\n<p><em><a href=\"http://www.w3.org/TR/WAI-WEBCONTENT-TECHS/#tech-color-contrast\">Web Content Accessibilty Guidelines -- checkpoint 2.2</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.juicystudio.com/services/colourcontrast.asp\">Colour Contrast Analyser</a></li>\n</ul>\n<h4>3.8 Is colour alone used for critical information?</h4>\n<blockquote>\n<p>Ensure that all information conveyed with colour is also available without colour, for example from context or markup</p>\n<p><em><a href=\"http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-color-convey\">Web Content Accessibilty Guidelines -- checkpoint 2.1</a></em></p>\n</blockquote>\n<p>There are basically three types of colour deficiency; Deuteranope (a form of red/green colour deficit), Protanope (another form of red/green colour deficit) and Tritanope (a blue/yellow deficit- very rare).</p>\n<p>More:</p>\n<ul>\n<li><a href=\"http://colorfilter.wickline.org/\">Colourblind Webpage filter</a></li>\n<li><a href=\"http://www.vischeck.com/vischeck/vischeckURL.php\">Vischeck</a></li>\n</ul>\n<h4>3.9 Is there delayed responsiveness for dropdown menus?</h4>\n<p>Users with reduced motor skills may find dropdown menus hard to use if responsiveness is set too fast.</p>\n<h4>3.10 Are all links descriptive?</h4>\n<blockquote>\n<p>Link text should be meaningful enough to make sense when read out of context -- either on its own or as part of a sequence of links. Link text should also be terse.</p>\n<p><em><a href=\"http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-meaningful-links\">Web Content Accessibility Guidelines 1.0 -- checkpoint 13.1</a></em></p>\n</blockquote>\n<h3>4. Accessibility for devices</h3>\n<h4>4.1 Does the site work acceptably across modern and older browsers?</h4>\n<blockquote>\n<p>Before starting to build a CSS-based layout, you should decide which browsers to support and to what level you intend to support them.</p>\n</blockquote>\n<h4>4.2 Is the content accessible with CSS switched off or not supported?</h4>\n<p>Some people may visit your site with either a browser that does not support CSS or a browser with CSS switched off. In content is structured well, this will not be an issue.</p>\n<h4>4.3 Is the content accessible with images switched off or not supported?</h4>\n<p>Some people browse websites with images switched off -- especially people on very slow connections. Content should still be accessible for these people.</p>\n<h4>4.4 Does the site work in text browsers such as Lynx?</h4>\n<p>This is like a combination of images and CSS switched off. A text-based browser will rely on well structured content to provide meaning.</p>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.delorie.com/web/lynxview\">Lynx Viewer</a></li>\n</ul>\n<h4>4.5 Does the site work well when printed?</h4>\n<blockquote>\n<p>You can take any (X)HTML document and simply style it for print, without having to touch the markup.</p>\n<p><em><a href=\"http://www.alistapart.com/articles/goingtoprint/\">Going to print</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.d.umn.edu/itss/support/Training/Online/webdesign/css.html#print\">Web Design References -- Print</a></li>\n</ul>\n<h4>4.6 Does the site work well in Hand Held devices?</h4>\n<p>This is a hard one to deal with until hand held devices consistently support their correct media type. However, some layouts work better in current hand-held devices. The importance of supporting hand held devices will depend on target audiences.</p>\n<h4>4.7 Does the site include detailed metadata?</h4>\n<blockquote>\n<p>Metadata is machine understandable information for the web</p>\n<p><em><a href=\"http://www.w3.org/Metadata/\">W3C -- Metadata and Resource Description</a></em></p>\n</blockquote>\n<p>Metadata is structured information that is created specifically to describe another resource. In other words, metadata is 'data about data'.</p>\n<h4>4.8 Does the site work well in a range of browser window sizes?</h4>\n<p>It is a common assumption amongst developers that average screen sizes are increasing. Some developers assume that the average screen size is now 1024px wide. But what about users with smaller screens and users with hand held devices? Are they part of your target audience and are they being disadvantaged?</p>\n<h3>5. Basic Usability</h3>\n<h4>5.1 Is there a clear visual hierarchy?</h4>\n<blockquote>\n<p>Organise and prioritise the contents of a page by using size, prominence and content relationships</p>\n<p><em><a href=\"http://www.great-web-design-tips.com/web-site-design/165.html\">Create a Clear Visual Hierarchy</a></em></p>\n</blockquote>\n<h4>5.2 Are heading levels easy to distinguish?</h4>\n<blockquote>\n<p>Use header elements to convey document structure and use them according to specification</p>\n<p><em><a href=\"http://www.w3.org/TR/WCAG10/wai-pageauth.html#tech-logical-headings\">Web Content Accessibility Guidelines 1.0 -- checkpoint 3.5</a></em></p>\n</blockquote>\n<h4>5.3 Is the site's navigation easy to understand?</h4>\n<blockquote>\n<p>Your navigation system should give your visitor a clue as to what page of the site they are currently on and where they can go next.</p>\n<p><em>[Design Tutorial -- Navigation](<a href=\"http://www.1stsitefree.com/design\">http://www.1stsitefree.com/design</a></em>nav.htm)_</p>\n</blockquote>\n<h4>5.4 Is the site's navigation consistent?</h4>\n<blockquote>\n<p>If each page on your site has a consistent style of presentation, visitors will find it easier to navigate between pages and find information</p>\n<p><em><a href=\"http://www.juicystudio.com/tutorial/accessibility/navigation.asp\">Juicy studios -- Navigation</a></em></p>\n</blockquote>\n<h4>5.5 Does the site use consistent and appropriate language?</h4>\n<blockquote>\n<p>The use of clear and simple language promotes effective communication. Trying to come across as articulate can be as difficult to read as poorly written grammar, especially if the language used isn't the visitor's primary language.</p>\n<p><em><a href=\"http://www.juicystudio.com/tutorial/accessibility/clear.asp\">Clear language</a></em></p>\n</blockquote>\n<h4>5.6 Does the site have a sitemap page and contact page? Are they  easy to find?</h4>\n<blockquote>\n<p>Most site maps fail to convey multiple levels of the site's information architecture. In usability tests, users often overlook site maps or can't find them. Complexity is also a problem: a map should be a map, not a navigational challenge of its own.</p>\n<p><em><a href=\"http://www.useit.com/alertbox/20020106.html\">Site Map Usability</a></em></p>\n</blockquote>\n<h4>5.7 For large sites, is there a search tool?</h4>\n<p>While search tools are not needed on smaller sites, and some people will not ever use them, site-specific search tools allow users a choice of navigation options.</p>\n<h4>5.8 Is there a link to the home page on every page in the site?</h4>\n<p>Some users like to go back to a site's home page after navigating to content within a site. The home page becomes a base camp for these users, allowing them to regroup before exploring new content.</p>\n<h4>5.9 Are links underlined?</h4>\n<blockquote>\n<p>To maximise the <a href=\"http://www.jnd.org/dn.mss/affordances-and-design.html\">perceived affordance</a> of clickability, colour and underline the link text. Users shouldn't have to guess or scrub the page to find out where they can click.</p>\n<p><em><a href=\"http://www.useit.com/alertbox/20040510.html\">Guidelines for Visualizing Links</a></em></p>\n</blockquote>\n<h4>5.10 Are visited links clearly defined?</h4>\n<blockquote>\n<p>Most important, knowing which pages they've already visited frees users from unintentionally revisiting the same pages over and over again.</p>\n<p><em><a href=\"http://www.useit.com/alertbox/20040503.html\">Change the Color of Visited Links</a></em></p>\n</blockquote>\n<h3>6. Site management</h3>\n<h4>6.1 Does the site have a meaningful and helpful 404 error page that works from any depth in the site?</h4>\n<blockquote>\n<p>You've requested a page -- either by typing a URL directly into the address bar or clicking on an out-of-date link and you've found yourself in the middle of cyberspace nowhere. A user-friendly website will give you a helping hand while many others will simply do nothing, relying on the browser's built-in ability to explain what the problem is.</p>\n<p><em><a href=\"http://www.alistapart.com/articles/perfect404/\">The perfect 404</a></em></p>\n</blockquote>\n<h4>6.2 Does the site use friendly URLs?</h4>\n<blockquote>\n<p>Most search engines (with a few exceptions -- namely Google) will not index any pages that have a question mark or other character (like an ampersand or equals sign) in the URL... what good is a site if no one can find it?</p>\n<p><em><a href=\"http://www.sitepoint.com/article/search-engine-friendly-urls\">Search Engine-Friendly URLs</a></em></p>\n</blockquote>\n<blockquote>\n<p>One of the worst elements of the web from a user interface standpoint is the URL. However, if they're short, logical, and self-correcting, URLs can be acceptably usable</p>\n<p><em><a href=\"http://www.merges.net/theory/20010305.html\">How to make URLs user-friendly</a></em></p>\n</blockquote>\n<p>More:</p>\n<ul>\n<li><a href=\"http://www.websitegoodies.com/article/32\">Creating Search Engine Friendly URLs</a></li>\n<li><a href=\"http://www.merges.net/theory/20010305.html\">How to make URLs user-friendly</a></li>\n</ul>\n<h4>6.3 Does the site's URL work without \"www\"?</h4>\n<p>While this is not critical, and in some cases is not even possible, it is always good to give people the choice of both options. If a user types your domain name without the www and gets no site, this could disadvantage both the user and you.</p>\n<h4>6.4 Does the site have a favicon?</h4>\n<blockquote>\n<p>A Favicon is a multi-resolution image included on nearly all professionally developed sites. The Favicon allows the webmaster to further promote their site, and to create a more customized appearance within a visitor's browser</p>\n<p><em><a href=\"http://www.favicon.com/\">Favicon.com</a></em></p>\n</blockquote>\n<p>Favicons are definitely not critical. However, if they are not present, they can cause 404 errors in your logs (site statistics). Browsers like IE will request them from the server when a site is bookmarked. If a favicon isn't available, a 404 error may be generated. Therefore, having a favicon could cut down on favicon specific 404 errors. The same is true of a 'robots.txt' file.</p>"},{"url":"/docs/audio/discrete-fft/","relativePath":"docs/audio/discrete-fft.md","relativeDir":"docs/audio","base":"discrete-fft.md","name":"discrete-fft","frontmatter":{"title":"Fast Fourier Transform","weight":1,"excerpt":"Visualizing the Discrete Fourier Transform","seo":{"title":"Fast Fourier Transform","description":"Visualizing the Discrete Fourier Transform","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Visualizing the Discrete Fourier Transform</h2>\n<p>A couple of years ago I suggested a way of thinking about <a href=\"https://blog.revolutionanalytics.com/2014/01/the-fourier-transform-explained-in-one-sentence.html\">how the Discrete Fourier Transform works</a>, based on Stuart Riffle's elegant colour-coding of the equation:</p>\n<p><a href=\"http://revolution-computing.typepad.com/.a/6a010534b1db25970b019b0172129c970c-pi\"><img src=\"https://revolution-computing.typepad.com/.a/6a010534b1db25970b019b0172129c970c-800wi\" alt=\"The fourier transform, explained in one color-coded sentence\" title=\"The fourier transform, explained in one color-coded sentence\"></a></p>\n<p>(Sadly, Stuart's <a href=\"http://www.altdevblogaday.com/2011/05/17/understanding-the-fourier-transform/\">original post</a> describing the equation has been lost to bitrot, and can't even be found in the Wayback Machine.) My contribution was the following analogy:</p>\n<blockquote>\n<p>Imagine an enormous speaker, mounted on a pole, playing a repeating sound. The speaker is so large, you can see the cone move back and forth with the sound. Mark a point on the cone, and now rotate the pole. Trace the point from an above-ground view, if the resulting squiggly curve is off-center, then there is frequency corresponding the pole's rotational frequency represented in the sound.</p>\n</blockquote>\n<p>Dr Bill Connelly from Australia National University has created an interactive simulation of the analogy. Here, the sound from the speaker is a chord of two tones: just enter their frequency and amplitude, and see how the DFT is calculated from the analysis of the rotation:</p>\n<p><a href=\"http://www.billconnelly.net/?p=276\"><img src=\"https://revolution-computing.typepad.com/.a/6a010534b1db25970b01bb08743789970d-800wi\" alt=\"DFT\" title=\"DFT\"></a></p>"},{"url":"/docs/audio/dynamic-time-warping/","relativePath":"docs/audio/dynamic-time-warping.md","relativeDir":"docs/audio","base":"dynamic-time-warping.md","name":"dynamic-time-warping","frontmatter":{"title":"dynamic-time-warping","weight":0,"excerpt":"dynamic-time-warping","seo":{"title":"dynamic-time-warping","description":"dynamic-time-warping","robots":[],"extra":[]},"template":"docs"},"html":"<h1>Dynamic Time Warping Triggered Guitar Effects Project:</h1>\n<h1>DTW Algorithm:</h1>\n<iframe src=\"https://onedrive.live.com/embed?cid=D21009FDD967A241&amp;resid=D21009FDD967A241%21634692&amp;authkey=AHfsGpj1Un3UNuE&amp;em=2&amp;wdAr=1.7777777777777777\" width=\"962px\" height=\"565px\" frameborder=\"0\">This is an embedded <a target=\"_blank\" href=\"https://office.com\">Microsoft Office</a> presentation, powered by <a target=\"_blank\" href=\"https://office.com/webapps\">Office</a>.</iframe>\n<hr>\n<h1>Project:</h1>\n<iframe src=\"https://onedrive.live.com/embed?resid=D21009FDD967A241%21608188&amp;authkey=%21AL1vMFzOuqvFbUY&amp;em=2&amp;wdAr=1.7777777777777777\" width=\"962px\" height=\"565px\" frameborder=\"0\">This is an embedded <a target=\"_blank\" href=\"https://office.com\">Microsoft Office</a> presentation, powered by <a target=\"_blank\" href=\"https://office.com/webapps\">Office</a>.</iframe>"},{"url":"/docs/audio/dtw-python-explained/","relativePath":"docs/audio/dtw-python-explained.md","relativeDir":"docs/audio","base":"dtw-python-explained.md","name":"dtw-python-explained","frontmatter":{"title":"Dynamic Time Warping Algorithm Explained (Python)","weight":0,"excerpt":"Dynamic Time Warping Algorithm Explained (Python)","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h1>Dynamic Time Warping Algorithm Explained (Python)</h1>\n<p>In this world which is getting dominated by Internet of Things (IoT), there is an increasing need to understand signals from devices installed in households, shopping malls, factories and offices. For example, any voice assistant detects, authenticates and interprets commands from humans even if it is slow or fast. Our voice tone tends to be different during different times of the day. In the early morning after we get up from bed, we interact with a slower, heavier and lazier tone compared to other times of the day. These devices treat the signals as time series and compare the peaks, troughs and slopes by taking into account the varying lags and phases in the signals to come up with a similarity score. One of the most common algorithms used to accomplish this is <em>Dynamic Time Warping (DTW)</em>. It is a very robust technique to compare two or more Time Series by ignoring any shifts and speed.</p>\n<p>As part of Walmart Real Estate team, I am working on understanding the energy consumption pattern of different assets like refrigeration units, dehumidifiers, lighting, etc. installed in the retail stores.This will help in improving quality of data collected from IoT sensors, detect and prevent faults in the systems and improve energy consumption forecasting and planning. This analysis involves time series of energy consumption during different times of a day i.e. different days of a week, weeks of a month and months of a year. Time series forecasting often gives bad predictions when there is sudden shift in phase of the energy consumption due to unknown factors. For example if the defrost schedule, items refresh routine for a refrigeration unit, or weather changes suddenly and are not captured to explain the phase shifts of energy consumption, it is important to detect these change points.</p>\n<p>In the example below, the items refresh routine of a store has shifted by 2 hours on Tuesday leading the shift in peak energy consumption of refrigeration units and this information was not available to us for many such stores.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*WEe7LQivzU4YOvDCe0_P_A.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*WEe7LQivzU4YOvDCe0_P_A.png\"></p>\n<p>The peak at 2 am got shifted to 4 am. DTW when run recursively for consecutive days can identify the cases for which phase shift occurred without much change in shape of signals.</p>\n<p><img src=\"https://miro.medium.com/max/52/1*jDuu7XE8XitCTBSythQICw.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*jDuu7XE8XitCTBSythQICw.png\"></p>\n<p>The training data can be restricted to Tuesday onwards to improve the prediction of energy consumption in future in this case as phase shift was detected on Tuesday. The setup improved the predictions substantially ( > 50%) for the stores for which the reason of shift was not known. This was not possible by traditional ways of one to one comparison of signals.</p>\n<p>In this blog, I will explain how DTW algorithm works and throw some light on the calculation of the similarity score between two time series and its implementation in python. Most of the contents in this blog have been sourced from this <a href=\"https://ieeexplore.ieee.org/document/1163055\">paper</a>, also mentioned in the references section below.</p>\n<p>2. Why do we need DTW ?</p>\n<p>Any two time series can be compared using euclidean distance or other similar distances on a one to one basis on time axis. The amplitude of first time series at time T will be compared with amplitude of second time series at time T. This will result into a very poor comparison and similarity score even if the two time series are very similar in shape but out of phase in time.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*HQleh0-1HlGsLkVlcaFRLw.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*HQleh0-1HlGsLkVlcaFRLw.png\"></p>\n<p>DTW compares amplitude of first signal at time T with amplitude of second signal at time T+1 and T-1 or T+2 and T-2. This makes sure it does not give low similarity score for signals with similar shape and different phase.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*6Yzt8SiQ-kTRx8pFqDZXkw.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*6Yzt8SiQ-kTRx8pFqDZXkw.png\"></p>\n<p>3. How it works?</p>\n<p>Let us take two time series signals P and Q</p>\n<p>Series 1 (P) : 1,4,5,10,9,3,2,6,8,4</p>\n<p>Series 2 (Q): 1,7,3,4,1,10,5,4,7,4</p>\n<p><img src=\"https://miro.medium.com/max/60/1*x8-vv9W3cfmdd0mW_1MLTg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*x8-vv9W3cfmdd0mW_1MLTg.png\"></p>\n<p><em>Step 1 :</em> Empty Cost Matrix Creation</p>\n<p>Create an empty cost matrix M with x and y labels as amplitudes of the two series to be compared.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*MrjHYFHyeeE3aiBEA-E5cw.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*MrjHYFHyeeE3aiBEA-E5cw.png\"></p>\n<p><em>Step 2: Cost Calculation</em></p>\n<p>Fill the cost matrix using the formula mentioned below starting from left and bottom corner.</p>\n<p>M(i, j) = |P(i) --- Q(j)| + min ( M(i-1,j-1), M(i, j-1), M(i-1,j) )</p>\n<p>where</p>\n<p>M is the matrix</p>\n<p>i is the iterator for series P</p>\n<p>j is the iterator for series Q</p>\n<p><img src=\"https://miro.medium.com/max/60/1*hhpagt7BEeFU22X83Q76yQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*hhpagt7BEeFU22X83Q76yQ.png\"></p>\n<p>Let us take few examples (11,3 and 8 ) to illustrate the calculation as highlighted in the below table.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*bHaMHM9eBfLc6q166iiI9g.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*bHaMHM9eBfLc6q166iiI9g.png\"></p>\n<p>for 11,</p>\n<p><img src=\"https://miro.medium.com/max/60/1*dzBbhICP6wqwtmW-GGwGmg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*dzBbhICP6wqwtmW-GGwGmg.png\"></p>\n<p>|10 --4| + min( 5, 12, 5 )</p>\n<p>= 6 + 5</p>\n<p>= 11</p>\n<p>Similarly for 3,</p>\n<p>|4 --1| + min( 0 )</p>\n<p>= 3+ 0</p>\n<p>= 3</p>\n<p>and for 8,</p>\n<p>|1 --3| + min( 6)</p>\n<p>= 2 + 6</p>\n<p>= 8</p>\n<p>The full table will look like this:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*7pphf0WWYElhtohnQPFPNA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*7pphf0WWYElhtohnQPFPNA.png\"></p>\n<p><em>Step 3:</em> Warping Path Identification</p>\n<p>Identify the warping path starting from top right corner of the matrix and traversing to bottom left. The traversal path is identified based on the neighbour with minimum value.</p>\n<p>In our example it starts with 15 and looks for minimum value i.e. 15 among its neighbours 18, 15 and 18.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*p6hJxIcUjOzgpTINBHLdmQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*p6hJxIcUjOzgpTINBHLdmQ.png\"></p>\n<p><img src=\"https://miro.medium.com/max/60/1*RnqvEKdMmWklx5m59YiP3g.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*RnqvEKdMmWklx5m59YiP3g.png\"></p>\n<p>The next number in the warping traversal path is 14. This process continues till we reach the bottom or the left axis of the table.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*mjtlGiB44Zz2pALmMiYNLQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*mjtlGiB44Zz2pALmMiYNLQ.png\"></p>\n<p>The final path will look like this:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*WaC_xFSpJi-2GlF7OG37CA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*WaC_xFSpJi-2GlF7OG37CA.png\"></p>\n<p>Let this warping path series be called as d.</p>\n<p>d = [15,15,14,13,11,9,8,8,4,4,3,0]</p>\n<p><em>Step 4:</em> Final Distance Calculation</p>\n<p>Time normalised distance , D</p>\n<p><img src=\"https://miro.medium.com/max/60/1*6M_cotyKNao7xo03zsMLZQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/385/1*6M_cotyKNao7xo03zsMLZQ.png\"></p>\n<p>where k is the length of the series d.</p>\n<p>k = 12 in our case.</p>\n<p>D = ( 15 + 15 + 14 + 13 + 11 + 9 + 8 + 8 + 4 + 4 + 3 + 0 ) /12</p>\n<p>= 104/12</p>\n<p>= 8.63</p>\n<p>Let us take another example with two very similar time series with unit time shift difference.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*CLSlk3qD0Hil2H4XBBeE3Q.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*CLSlk3qD0Hil2H4XBBeE3Q.png\"></p>\n<p>Cost matrix and warping path will look like this.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*Wx823zTAqUkrSbX1ivMAlg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*Wx823zTAqUkrSbX1ivMAlg.png\"></p>\n<p>DTW distance ,D =</p>\n<p>( 0 + 0 + 0 + 0 + 0 +0 +0 +0 +0 +0 +0 ) /11</p>\n<p>= 0</p>\n<p>Zero DTW distance implies that the time series are very similar and that is indeed the case as observed in the plot.</p>\n<h1>Resummation (Spaced Repitition)</h1>\n<p>Dynamic Time Warping (DTW) is a way to compare two -usually temporal- sequences that do not sync up perfectly. It is a method to calculate the optimal matching between two sequences. DTW is useful in many domains such as speech recognition, data mining, financial markets, etc. It's commonly used in data mining to measure the distance between two time-series.</p>\n<p>In this post, we will go over the mathematics behind DTW. Then, two illustrative examples are provided to better understand the concept. If you are not interested in the math behind it, please jump to examples.</p>\n<h1>Formulation</h1>\n<p>Let's assume we have two sequences like the following:</p>\n<p><em>𝑋=𝑥[1], 𝑥[2], ..., x[i], ..., x[n]</em></p>\n<p><em>Y=y[1], y[2], ..., y[j], ..., y[m]</em></p>\n<p>The sequences 𝑋 and 𝑌 can be arranged to form an 𝑛-by-𝑚 grid, where each point (𝑖, j) is the alignment between 𝑥[𝑖] and 𝑦[𝑗].</p>\n<p>A warping path 𝑊 maps the elements of 𝑋 and 𝑌 to minimize the <em>distance</em> between them. 𝑊 is a sequence of grid points (𝑖, 𝑗). We will see an example of the warping path later.</p>\n<h2>Warping Path and DTW distance</h2>\n<p>The Optimal path to (𝑖<em>𝑘, 𝑗</em>𝑘) can be computed by:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*8hJEJWuxrccwCMuUG_aPbQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*8hJEJWuxrccwCMuUG_aPbQ.png\"></p>\n<p>where 𝑑 is the Euclidean distance. Then, the overall path cost can be calculated as</p>\n<p><img src=\"https://miro.medium.com/max/60/1*2OGDOJ-a0zTO_9T1FIGejQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/272/1*2OGDOJ-a0zTO_9T1FIGejQ.png\"></p>\n<h1>Restrictions on the Warping function</h1>\n<p>The warping path is found using a dynamic programming approach to align two sequences. Going through all possible paths is \"combinatorically explosive\" [1]. Therefore, for efficiency purposes, it's important to limit the number of possible warping paths, and hence the following constraints are outlined:</p>\n<ul>\n<li>Boundary Condition: This constraint ensures that the warping path begins with the start points of both signals and terminates with their endpoints.</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/60/1*SHsmQu2TqpaDyIArn2snzg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/452/1*SHsmQu2TqpaDyIArn2snzg.png\"></p>\n<ul>\n<li>Monotonicity condition: This constraint preserves the time-order of points (not going back in time).</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/60/1*RNg2VENGaWoyvGrvyeg61A.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/311/1*RNg2VENGaWoyvGrvyeg61A.png\"></p>\n<ul>\n<li>Continuity (step size) condition: This constraint limits the path transitions to adjacent points in time (not jumping in time).</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/60/1*lU99pFyomdPeaHuR26bDyA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/418/1*lU99pFyomdPeaHuR26bDyA.png\"></p>\n<p>In addition to the above three constraints, there are other less frequent conditions for an allowable warping path:</p>\n<ul>\n<li>Warping window condition: Allowable points can be restricted to fall within a given warping window of width 𝜔 (a positive integer).</li>\n</ul>\n<p><img src=\"https://miro.medium.com/max/60/1*9apgwkXeU3gOHLudFsIosA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/168/1*9apgwkXeU3gOHLudFsIosA.png\"></p>\n<ul>\n<li>Slope condition: The warping path can be constrained by restricting the slope, and consequently avoiding extreme movements in one direction.</li>\n</ul>\n<p>An acceptable warping path has combinations of chess king moves that are:</p>\n<ul>\n<li>Horizontal moves: (𝑖, 𝑗) → (𝑖, 𝑗+1)</li>\n<li>Vertical moves: (𝑖, 𝑗) → (𝑖+1, 𝑗)</li>\n<li>Diagonal moves: (𝑖, 𝑗) → (𝑖+1, 𝑗+1)</li>\n</ul>\n<h1>Implementation</h1>\n<p>Let's import all python packages we need.</p>\n<p>import pandas as pd<br>\nimport numpy as np# Plotting Packages<br>\nimport matplotlib.pyplot as plt<br>\nimport seaborn as sbn# Configuring Matplotlib<br>\nimport matplotlib as mpl<br>\nmpl.rcParams['figure.dpi'] = 300<br>\nsavefig<em>options = dict(format=\"png\", dpi=300, bbox</em>inches=\"tight\")# Computation packages<br>\nfrom scipy.spatial.distance import euclidean<br>\nfrom fastdtw import fastdtw</p>\n<p>Let's define a method to compute the accumulated cost matrix <em>D</em> for the warp path. The cost matrix uses the Euclidean distance to calculate the distance between every two points. The methods to compute the Euclidean distance matrix and accumulated cost matrix are defined below:</p>\n<h1>Example 1</h1>\n<p>In this example, we have two sequences <em>x</em> and <em>y</em> with different lengths.</p>\n<h1>Create two sequences\\</h1>\n<p>x = [3, 1, 2, 2, 1]<br>\ny = [2, 0, 0, 3, 3, 1, 0]</p>\n<p>We cannot calculate the Euclidean distance between <em>x</em> and <em>y</em> since they don't have equal lengths.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*ADzLGLGGq13onO72EO_ZpQ.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*ADzLGLGGq13onO72EO_ZpQ.png\"></p>\n<p>Example 1: Euclidean distance between x and y (is it possible? 🤔) (Image by Author)</p>\n<h1>Compute DTW distance and warp path</h1>\n<p>Many Python packages calculate the DTW by just providing the sequences and the type of distance (usually Euclidean). Here, we use a popular Python implementation of DTW that is <a href=\"https://github.com/slaypni/fastdtw\">FastDTW</a> which is an approximate DTW algorithm with lower time and memory complexities [2].</p>\n<p>dtw<em>distance, warp</em>path = fastdtw(x, y, dist=euclidean)</p>\n<p>Note that we are using <a href=\"https://pypi.org/project/scipy/\">SciPy</a>'s distance function <em>Euclidean</em> that we imported earlier. For a better understanding of the warp path, let's first compute the accumulated cost matrix and then visualize the path on a grid. The following code will plot a heatmap of the accumulated cost matrix.</p>\n<p>cost<em>matrix = compute</em>accumulated<em>cost</em>matrix(x, y)</p>\n<p>Example 1: Python code to plot (and save) the heatmap of the accumulated cost matrix</p>\n<p><img src=\"https://miro.medium.com/max/54/1*PIKZAwsV15NBvqkh9N1KMg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/375/1*PIKZAwsV15NBvqkh9N1KMg.png\"></p>\n<p>Example 1: Accumulated cost matrix and warping path (Image by Author)</p>\n<p>The color bar shows the cost of each point in the grid. As can be seen, the warp path (blue line) is going through the lowest cost on the grid. Let's see the DTW distance and the warping path by printing these two variables.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>DTW distance: 6.0<br>\nWarp path: [(0, 0), (1, 1), (1, 2), (2, 3), (3, 4), (4, 5), (4, 6)]</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>The warping path starts at point (0, 0) and ends at (4, 6) by 6 moves. Let's also calculate the accumulated cost most using the functions we defined earlier and compare the values with the heatmap.</p>\n<p>cost<em>matrix = compute</em>accumulated<em>cost</em>matrix(x, y)<br>\nprint(np.flipud(cost_matrix)) # Flipping the cost matrix for easier comparison with heatmap values!>>> [[32. 12. 10. 10.  6.]<br>\n[23. 11.  6.  6.  5.]<br>\n[19. 11.  5.  5.  9.]<br>\n[19.  7.  4.  5.  8.]<br>\n[19.  3.  6. 10.  4.]<br>\n[10.  2.  6.  6.  3.]<br>\n[ 1.  2.  2.  2.  3.]]</p>\n<p>The cost matrix is printed above has similar values to the heatmap.</p>\n<p>Now let's plot the two sequences and connect the mapping points. The code to plot the DTW distance between <em>x</em> and <em>y</em> is given below.</p>\n<p>Example 1: Python code to plot (and save) the DTW distance between x and y</p>\n<p><img src=\"https://miro.medium.com/max/60/1*bF9I-49iVW9b2MvDbRBZxA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*bF9I-49iVW9b2MvDbRBZxA.png\"></p>\n<p>Example 1: DTW distance between x and y (Image by Author)</p>\n<h1>Example 2</h1>\n<p>In this example, we will use two sinusoidal signals and see how they will be matched by calculating the DTW distance between them.</p>\n<p>Example 2: Generate two sinusoidal signals (x1 and x2) with different lengths</p>\n<p>Just like Example 1, let's calculate the DTW distance and the warp path for *x1 *and *x2 *signals using FastDTW package.</p>\n<p>distance, warp_path = fastdtw(x1, x2, dist=euclidean)</p>\n<p>Example 2: Python code to plot (and save) the DTW distance between x1 and x2</p>\n<p><img src=\"https://miro.medium.com/max/60/1*Bzubc5uGFXd_-Sj7W_QFjg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*Bzubc5uGFXd_-Sj7W_QFjg.png\"></p>\n<p>Example 2: DTW distance between x1 and x2 (Image by Author)</p>\n<p>As can be seen in above figure, the DTW distance between the two signals is particularly powerful when the signals have similar patterns. The extrema (maximum and minimum points) between the two signals are correctly mapped. Moreover, unlike Euclidean distance, we may see many-to-one mapping when DTW distance is used, particularly if the two signals have different lengths.</p>\n<p>You may spot an issue with dynamic time warping from the figure above. Can you guess what it is?</p>\n<p>The issue is around the head and tail of time-series that do not properly match. This is because the DTW algorithm cannot afford the warping invariance for at the endpoints. In short, the effect of this is that a small difference at the sequence endpoints will tend to contribute disproportionately to the estimated similarity[3].</p>\n<h1>Conclusion</h1>\n<p>DTW is an algorithm to find an optimal alignment between two sequences and a useful distance metric to have in our toolbox. This technique is useful when we are working with two non-linear sequences, particularly if one sequence is a non-linear stretched/shrunk version of the other. The warping path is a combination of \"chess king\" moves that starts from the head of two sequences and ends with their tails.</p>\n<p>You can find the Jupyter notebook for this blog post <a href=\"https://github.com/e-alizadeh/medium/blob/master/notebooks/intro_to_dtw.ipynb\">here</a>. Thanks for reading!</p>\n<h1>References</h1>\n<p>[1] Donald J. Berndt and James Clifford, <a href=\"https://www.aaai.org/Papers/Workshops/1994/WS-94-03/WS94-03-031.pdf\">Using Dynamic Time Warping to Find Patterns in Time Series</a>, 3rd International Conference on Knowledge Discovery and Data Mining</p>\n<p>[2] Salvador, S. and P. Chan, <a href=\"https://cs.fit.edu/~pkc/papers/tdm04.pdf\">FastDTW: Toward accurate dynamic time warping in linear time and space</a>(2007), Intelligent Data Analysis</p>\n<p>[3] Diego Furtado Silva, <em>et al.</em>, <a href=\"https://core.ac.uk/display/147806669\">On the effect of endpoints on dynamic time warping</a> (2016), SIGKDD Workshop on Mining and Learning from Time Series</p>\n<h1>Useful Links</h1>\n<p>[1] <a href=\"https://nipunbatra.github.io/blog/ml/2014/05/01/dtw.html\">https://nipunbatra.github.io/blog/ml/2014/05/01/dtw.html</a></p>\n<p>[2] <a href=\"https://databricks.com/blog/2019/04/30/understanding-dynamic-time-warping.html\">https://databricks.com/blog/2019/04/30/understanding-dynamic-time-warping.html</a></p>\n<p>Sounds like time traveling or some kind of future technic, however, it is not. Dynamic Time Warping is used to compare the similarity or calculate the distance between two arrays or time series with different length.</p>\n<p>Suppose we want to calculate the distance of two equal-length arrays:</p>\n<p>a = [1, 2, 3]<br>\nb = [3, 2, 2]</p>\n<p>How to do that? One obvious way is to match up <code>a</code> and <code>b</code> in 1-to-1 fashion and sum up the total distance of each component. This sounds easy, but what if <code>a</code> and <code>b</code> have different lengths?</p>\n<p>a = [1, 2, 3]<br>\nb = [2, 2, 2, 3, 4]</p>\n<p>How to match them up? Which should map to which? To solve the problem, there comes dynamic time warping. Just as its name indicates, to warp the series so that they can match up.</p>\n<h1>Use Cases</h1>\n<p>Before digging into the algorithm, you might have the question that is it useful? Do we really need to compare the distance between two unequal-length time series?</p>\n<p>Yes, in a lot of scenarios DTW is playing a key role.</p>\n<h2>Sound Pattern Recognition</h2>\n<p>One use case is to detect the sound pattern of the same kind. Suppose we want to recognise the voice of a person by analysing his sound track, and we are able to collect his sound track of saying <code>Hello</code> in one scenario. However, people speak in the same word in different ways, what if he speaks hello in a much slower pace like <code>Heeeeeeelloooooo</code> , we will need an algorithm to match up the sound track of different lengths and be able to identify they come from the same person.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*gi1TtOqFCsb2M_U7iAUAag.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*gi1TtOqFCsb2M_U7iAUAag.png\"></p>\n<h2>Stock Market</h2>\n<p>In a stock market, people always hope to be able to predict the future, however using general machine learning algorithms can be exhaustive, as most prediction task requires test and training set to have the same dimension of features. However, if you ever speculate in the stock market, you will know that even the same pattern of a stock can have very different length reflection on klines and indicators.</p>\n<p><img src=\"https://miro.medium.com/max/60/1*4QUO4Tqm_z-8ydMBGgqmPg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*4QUO4Tqm_z-8ydMBGgqmPg.png\"></p>\n<h1>Definition &#x26; Idea</h1>\n<p>A concise explanation of DTW from wiki,</p>\n<blockquote>\n<p>In time series analysis, dynamic time warping (DTW) is one of the algorithms for measuring similarity between two temporal sequences, which may vary in speed. DTW has been applied to temporal sequences of video, audio, and graphics data --- indeed, any data that can be turned into a linear sequence can be analysed with DTW.</p>\n</blockquote>\n<p><em>The idea to compare arrays with different length is to build one-to-many and many-to-one matches so that the total distance can be minimised between the two.</em></p>\n<p>Suppose we have two different arrays red and blue with different length:</p>\n<p><img src=\"https://miro.medium.com/max/42/1*uFicSZjqkNBfsyrsJw7J9g.jpeg?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/612/1*uFicSZjqkNBfsyrsJw7J9g.jpeg\"></p>\n<p>Clearly these two series follow the same pattern, but the blue curve is longer than the red. If we apply the one-to-one match, shown in the top, the mapping is not perfectly synced up and the tail of the blue curve is being left out.</p>\n<p>DTW overcomes the issue by developing a one-to-many match so that the troughs and peaks with the same pattern are perfectly matched, and there is no left out for both curves(shown in the bottom top).</p>\n<h1>Rules</h1>\n<p>In general, DTW is a method that calculates an optimal match between two given sequences (e.g. time series) with certain restriction and rules(comes from wiki):</p>\n<ul>\n<li>Every index from the first sequence must be matched with one or more indices from the other sequence and vice versa</li>\n<li>The first index from the first sequence must be matched with the first index from the other sequence (but it does not have to be its only match)</li>\n<li>The last index from the first sequence must be matched with the last index from the other sequence (but it does not have to be its only match)</li>\n<li>The mapping of the indices from the first sequence to indices from the other sequence must be monotonically increasing, and vice versa, i.e. if <code>j > i</code> are indices from the first sequence, then there must not be two indices <code>l > k</code> in the other sequence, such that index <code>i</code> is matched with index <code>l</code> and index <code>j</code> is matched with index <code>k</code> , and vice versa</li>\n</ul>\n<p>The optimal match is denoted by the match that satisfies all the restrictions and the rules and that has the minimal cost, where the cost is computed as the sum of absolute differences, for each matched pair of indices, between their values.</p>\n<p>To summarise is that <em>head and tail must be positionally matched, no cross-match and no left out.</em></p>\n<h1>Implementation</h1>\n<p>The implementation of the algorithm looks extremely concise:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*fGr2Mj7fEB7tEyqAzcp2LA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*fGr2Mj7fEB7tEyqAzcp2LA.png\"></p>\n<p>where <code>DTW[i, j]</code> is the distance between <code>s[1:i]</code> and <code>t[1:j]</code> with the best alignment.</p>\n<p>The key lies in:</p>\n<p>DTW[i, j] := cost + minimum(DTW[i-1, j ],<br>\nDTW[i , j-1],<br>\nDTW[i-1, j-1])</p>\n<p>Which is saying that the cost of between two arrays with length <code>i and j</code> equals <em>the distance between the tails + the minimum of cost in arrays with length *`</em>i-1, j<em><code>_ , _</code></em>i, j-1<em><code>_ , and _</code></em>i-1, j-1*`_ ._</p>\n<p>Put it in python would be:</p>\n<p>Example:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*eogOkXkOUzi6Cq7U9BgiLg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*eogOkXkOUzi6Cq7U9BgiLg.png\"></p>\n<p>The distance between <code>a and b</code> would be the last element of the matrix, which is 2.</p>\n<h2>Add Window Constraint</h2>\n<p>One issue of the above algorithm is that we allow one element in an array to match an unlimited number of elements in the other array(as long as the tail can match in the end), this would cause the mapping to bent over a lot, for example, the following array:</p>\n<p>a = [1, 2, 3]<br>\nb = [1, 2, 2, 2, 2, 2, 2, 2, ..., 5]</p>\n<p>To minimise the distance, the element 2 in array <code>a</code> would match all the 2 in array <code>b</code> , which causes an array <code>b</code> to bent severely. To avoid this, we can add a window constraint to limit the number of elements one can match:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*0_xypte7FHDWJuuBexEvHg.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*0_xypte7FHDWJuuBexEvHg.png\"></p>\n<p>The key difference is that now each element is confined to match elements in range <code>i --- w</code> and <code>i + w</code> . The <code>w := max(w, abs(n-m))</code> guarantees all indices can be matched up.</p>\n<p>The implementation and example would be:</p>\n<p><img src=\"https://miro.medium.com/max/60/1*2K6C-3QrRmbbhpe-jt9UQA.png?q=20\"></p>\n<p><img src=\"https://miro.medium.com/max/630/1*2K6C-3QrRmbbhpe-jt9UQA.png\"></p>\n<h1>Apply a Package</h1>\n<p>There is also contributed packages available on Pypi to use directly. Here I demonstrate an example using <a href=\"https://pypi.org/project/fastdtw/\">fastdtw</a>:</p>\n<p>It gives you the distance of two lists and index mapping(the example can extend to a multi-dimension array).</p>"},{"url":"/docs/articles/webdev-tools/","relativePath":"docs/articles/webdev-tools.md","relativeDir":"docs/articles","base":"webdev-tools.md","name":"webdev-tools","frontmatter":{"title":"Web Developer Tools","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<ol>\n<li>What Are Web Development Tools?</li>\n</ol>\n<h5><strong>Client-side</strong>Otherwise known as front-end web development, this refers to anything a user can see or engage with—an app or website are good examples. This is about providing a top-notch user experience and smooth interface (usually with a combination of HTML, CSS and various JavaScript libraries.<strong>Server-side</strong>Otherwise known as back-end web development, this refers to the stuff behind the scenes of apps and websites that users can't see. It's the frameworks, servers and databases that keep things running.Image Source: Paperform\n\n</h5>\n<p>When people speak about web development tools (or devtools in the biz), they're usually referring to the apps and software that allows web developers to test and debug the code and interface of a website or web application.</p>\n<p>Technically, the term doesn't refer to tools that *actually help you <em>build a webpage or app</em>. *But that distinction isn't helpful. Web developers require a range of tools that go beyond debugging and testing—whether it be a remote collaboration tool like Slack, a design tool like Figma, or even just an online forum like <a href=\"https://stackoverflow.com/\">StackOverflow</a>.</p>\n<p>For that reason, we've gone beyond the traditional definition of devtools with the aim of giving a  realistic view of the kind of apps and software devs use in their day to day workflows. We think you'll find some familiar favourites, as well as some useful tools to add to your tech stack.</p>\n<h2>What To Consider When Choosing Web Development Tools</h2>\n<p>Whether you're <a href=\"https://www.templatemonster.com/bootstrap-website-templates/\">bootstrapping a website</a> from scratch or developing a simple web application, there are few things to keep in mind. Foremost is something that applies to any tool: pick the <em>right option for your specific needs.</em></p>\n<blockquote>\n<p><em>What works for one project might not work for the next. As a web developer, you constantly need to investigate new tools and ways of doing things. Of course, we all have our favourites, but as a general rule, your tech stack should never be stagnant.</em></p>\n</blockquote>\n<p>There's one other general principle to keep in mind. Tech should simplify your workflow—not complicate it. We know how easy it is to get bogged down in the nerdy details, but when in doubt, ask yourself: <em>does this tool actually make my job easier?</em></p>\n<p>Here are a few things to think about beyond these broader considerations:</p>\n<p><strong>Functionality:</strong> Simply, what does each tool help achieve? Does it have a single purpose and can it be replaced by a more feature-rich option?</p>\n<p><strong>Ease of use:</strong> Ensure that the tools that you have control over balance comprehensive features with actually being useable.</p>\n<p><strong>Scalability:</strong> At least some of the tools that you use should be scalable to both small and large projects.</p>\n<p><strong>Portability:</strong> This may not be a gamechanger in the age of remote work, but often web devs travel between clients, the office, home and the local cafe.</p>\n<p><strong>Customisation:</strong> Whether it's a theme on Google Chrome or an add-on for your development environment, we all like to make tools feel unique to us.</p>\n<p><strong>Security:</strong> The security of users, your employer and the sites or apps you are working on always has to be looked after.</p>\n<p><strong>Cost:</strong> If you work for a fancy startup with cash to splash this may not be an issue, but most folks will have to shell out for their own web development tools. Make sure you are getting bang for your buck.</p>\n<h3>A Note On Web Dev Tech Stacks</h3>\n<p>Web development is an all-encompassing term that refers to a bunch of roles. You can split web development into two parts: client-side and server-side.</p>\n<p>Most of the time, web developers specialise in one of the two. However, there are a few show-offs that can do both—they’re referred to as full-stack developers.</p>\n<blockquote>\n<p>The term stack is used because the tools that websites and apps use  'stack' on top of each other to build the final product.</p>\n</blockquote>\n<p>Check out this example of Paperform's tech stack for example.</p>\n<h2>The 50 Best Web Development Tools In 2021</h2>\n<p>Alright, as we Antipodeans say, no more beating around the bush. Let's get into the list of the best web development tools we recommend using in 2021.</p>\n<p><strong>📚 Read our guide on **[</strong>how to get web design clients fast<strong>](<a href=\"https://paperform.co/blog/how-to-get-web-design-clients/\">https://paperform.co/blog/how-to-get-web-design-clients/</a>)</strong>.**</p>\n<h2>Code and Text Editors</h2>\n<p>Web developers wouldn’t be able to do their jobs fast and efficiently without text editors. A dev's text editor of choice is kind of a holy thing—once devs find a text editor they love, they tend to stick with it for the long haul.</p>\n<p>Which is why it's such an important decision. It's like a carpenter choosing his hammer, or a Jedi Knight choosing his lightsaber. The good news is you can't go wrong with any listed below:</p>\n<h3>1. Atom</h3>\n<p>The creators of <a href=\"https://atom.io/\">Atom</a> describe it as a \"hackable text editor for the 21st Century\". This is in reference to the insane levels of customisation it offers that allow you to make it uniquely yours.</p>\n<p>Choose from thousands of open-source packages that add new functionality, tweak the look and feel with CSS, or even add your own major features with HTML and JavaScript.</p>\n<p>Using Atom really is a smooth experience. It works with Mac, Windows or Linux and has all the features you would expect. Plus, there is a nice suite of real-time collaboration tools to help you work with a team.</p>\n<h3>2. Sublime Text</h3>\n<p><a href=\"https://www.sublimetext.com/\">Sublime Text</a> is going to be at the top of any list of the best text editors. It doesn't have all the advanced features other solutions do, but what it lacks in power, it more than makes up for with its beautiful appearance and overall ease of use.</p>\n<blockquote>\n<p>With handy keyboard shortcuts, a Command Palette that you won't be able to live without once you use it and a UX to die for, it’s an absolute pleasure to use.</p>\n</blockquote>\n<p>The context-aware auto-completion feature is particularly useful. It suggests code based on your text, meaning you can cut down on repetitive typing. Add to that an updated Python API, syntax definitions and hyper-fast load times, Sublime Text is hard to go past.</p>\n<h3>3. Notepad++</h3>\n<p><a href=\"https://notepad-plus-plus.org/\">Notepad++</a> is for those of you who don’t care about themes and minimalist design and all that fancy stuff. From an aesthetic viewpoint, it’s not going to win any awards, but it’s still a powerful open-source text editor that has most of your needs covered.</p>\n<p>Created by a talented software engineer web dev named Don Ho, Notepad++ is a user friendly text editing solution for Windows users. It supports 27 programming languages, synchronised edits and views, and uses Win32 API to produce a tiny program size and faster execution speed.</p>\n<p><strong>💡Pro Tip:</strong> This is also a good option for energy conscious users. By optimising as much as possible, Ho aims to use less CPU power and reduce power consumption, leading to a greener environment.</p>\n<h3>4. Vim</h3>\n<p>If you’re after a highly configurable text editor to build your perfect programming environment, then <a href=\"https://www.vim.org/\">Vim</a> is the way to go. While it does work out of the box, for the most part, it’s a tool that you have to learn to conquer.</p>\n<p>The cool thing about Vim is that it can be used for any type of text editing—from writing an email to posting blogs in Markup, or of course, editing HTML code. It comes with 200+ syntax files, a comprehensive tag system and integrations with Perl, TCL and Python, and can even act as an OLE automation server in Windows.</p>\n<h3>5. Visual Code Studio</h3>\n<p><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> (or VS Code) is an open-source code editing program built by Microsoft. It runs everywhere and allows you to do anything from debugging code to inputting Git commands or creating Sass code.</p>\n<p>There is a bevy of appearance options, including the ability to customise fonts, icons, layout and colour scheme. But the remote development features are what set it apart—you can use a container or a remote machine as a full-featured dev environment.</p>\n<p>VS Code is the text editor of choice for Dean McPherson, Paperform’s co-founder and resident code-geek. He uses the remote plugins for version control and to keep our global dev team working in the same virtual environment.</p>\n<h2>Web Application Frameworks</h2>\n<p>Web application frameworks (or just web frameworks) are software libraries that are designed to help you build web services, resources and APIs.</p>\n<p>Choosing the right framework for your project is super important. Why? Because it’s difficult, time-consuming and expensive to switch to a different solution. It’s much easier to stick with one.</p>\n<p>Below we’ve curated a list of the <a href=\"https://www.appypie.com/top-web-development-frameworks\">best web frameworks</a> in 2021—both front-end and back-end to cover all the bases. This is a big decision and this is only meant as an overview of options, so be sure to do further research before deciding on one.</p>\n<h3>6. Django</h3>\n<p><a href=\"https://www.djangoproject.com/\">Django</a> is a high-level <a href=\"https://www.educba.com/python-frameworks/\">Python framework</a> built by expert developers and used by giant web apps like Reddit, Instagram and Uber. It’s secure and scalable, which means it’s suitable for a small side hustle or enterprise-scale projects.</p>\n<p>In a nutshell, Django makes it easier to build great web apps. Fast. The focus here is on enabling devs to create sites and apps with less code (to get nerdy, Django’s server-side processing speed is super fast and the file structure is feather-light).</p>\n<blockquote>\n<p>Django’s goal is to support devs to go from concept to completion as quickly as possible. They achieve this by encouraging clean design and swift development.</p>\n</blockquote>\n<p>One of the greatest strengths of Django is its community. They contribute a tonne of useful packages and utilities—a search on PyPI brings up 4,000+ packages free and ready to use.</p>\n<h3>7. Ruby On Rails</h3>\n<p><a href=\"https://rubyonrails.org/\">Ruby on Rails</a> is a favourite in the dev community. While it requires a certain quality of code, as a general rule it’s easy to read, write, monkey patch, test, maintain and deploy, making it any web developer’s dream.</p>\n<p>Rails, as it’s called in the biz, is used in a bunch of server-side web apps, including big names like Square, Hulu, Twitch and Shopify. It’s a popular framework because straight out of the box you get structures for web services, pages and a database, requiring far less groundwork than other options.</p>\n<p>So why choose Rails? Well, it’s an excellent choice if you’re after a robust tool that’s simple to use. It has a clean design language, an intuitive workflow, and seamlessly integrates with third-party applications.</p>\n<p><strong>💡Pro Tip:</strong> If you are starting to build your product, Ruby on Rails is an ideal solution to get your MVP up and running. It allows solo web developers to swiftly get projects off the ground and make changes on the fly.</p>\n<h3>8. Angular</h3>\n<p><a href=\"https://angular.io/\">Angular</a> (or Angularjs) is a popular Javascript framework created and maintained by Google. It’s a cross-platform solution with a cohesive ecosystem of third-party components, meaning you can add a bunch of your own unique functionality improvements.</p>\n<p>You’ll find all the relevant features you’d expect for each stage of the development process, from code generation and splitting to complex animation timelines.</p>\n<p>The Command-line Interface (CLI) is probably the most notable feature though. it allows you to initialise, develop, scaffold and maintain Angular apps right from the command shell.</p>\n<p><strong>💡Pro Tip:</strong> A JavaScript library is a collection or “library” of prewritten code snippets that can be used to repeat common JavaScript functions. It's also important to note, that which JavaScript framework you use often depends on your client's/business' stack.</p>\n<h3>9. React</h3>\n<p>React (<a href=\"https://reactjs.org/\">React.js</a>) is another great Javascript library built by another ultra-powerful tech company: in this case, Facebook. Made specifically for building user interfaces, it makes it painless to create interactive UIs in a visual way.</p>\n<p>A component-based system means that individual components manage their own state, and can then be composed to build complex UIs. React can also render on a server using Node, and with <a href=\"https://facebook.github.io/react-native/\">React Native</a> you can power mobile apps as well.</p>\n<p>React is one of the most popular of the many JavaScript frameworks available. Used by WordPress for their backend and Block Editor, it’s a platform to consider for any web developer working with user interfaces.</p>\n<h3>10. Vue</h3>\n<p>Yet another JavaScript library, like React, <a href=\"https://vuejs.org/\">Vue</a> (or Vue.js) is built for working with user interfaces. Labelling itself as a more “approachable, versatile and performant” alternative, it helps you create a more maintainable and testable codebase.</p>\n<p>As with other leading frameworks, Vue allows you to take a webpage and split it up into reusable components. Each component then has its own HTML, CSS and JS needed to render that piece of the page—making it faster to make granular changes.</p>\n<p>Vue offers a more “batteries-included” approach to web application development. It’s simple to use and comes with <a href=\"https://vuejs.org/v2/guide/\">comprehensive documentation</a> and templates to guide you along.</p>\n<h3>11. Meteor</h3>\n<p><a href=\"https://www.meteor.com/\">Meteor.js</a> is a free and open-source full-stack isomorphic framework (meaning you can run it both on the client and server side). It might not be as popular as React or Vue, but it’s still considered one of the best solutions to enable devs to swiftly build and deploy web, mobile or desktop apps.</p>\n<p>One of Meteor’s biggest selling points is that it seamlessly integrates with the rest of your tech stack—allowing you to focus on building rather than configuring tools to work together. Meteor APM also provides real-time metrics so you can monitor how your app is running.</p>\n<p>Boasting almost 14,000 packages, over half a million unique installs and used by companies like Ikea, Qualcomm and Honeywell, Meteor is a strong option.</p>\n<h3>12. ASP.NET</h3>\n<p>Alright, by now this is a familiar story. Prepare for the buzzwords and giant tech companies. <a href=\"https://dotnet.microsoft.com/apps/aspnet\">ASP.NET</a> is a free, cross-platform framework for <a href=\"https://www.techcronus.com/asp-net-application-development/\">building web apps</a> and services developed by Microsoft.</p>\n<p>What sets it apart from other frameworks is that it uses C# instead of JavaScript. C# supports reference-type (class) and value-type (struct) user-defined types, which can unlock significant performance benefits over JavaScript if you’re a more advanced web developer.</p>\n<p>If you’re looking to learn NET then there are plenty of resources. Microsoft has plenty of <a href=\"https://dotnet.microsoft.com/learn/aspnet\">learning materials</a> and there’s an active <a href=\"https://github.com/dotnet?WT.mc_id=dotnet-35129-website\">community on GitHub</a> with over 100,000 people and 3,700 companies contributing.</p>\n<h2>Front-End Frameworks</h2>\n<p>Front-end frameworks (or “CSS frameworks”) are packages containing pre-written, standardised code for easy application. It’s kind of like a coding dictionary to help you quickly complete actions without having to come up with code yourself.</p>\n<p>Keep in mind that there is some crossover with tools we’ve previously covered. For example, according to the <a href=\"https://2020.stateofjs.com/en-US/technologies/javascript-flavors/\">State of JavaScript 2020</a>*, in the US, React, Angular and Vue *are the three most popular front-end frameworks.</p>\n<p>Here are some other viable options:</p>\n<h3>13. Bootstrap</h3>\n<p><a href=\"http://getbootstrap.com/\">Bootstrap</a> is a leading open-source CSS framework created by a bunch of the developers behind Twitter (ever heard of it?). Released back in 2011, it’s a full-scale tool designed to help you quickly create and customise responsive mobile-first sites.</p>\n<p>It features Sass variables and mixins (so you can assign variables to a name and refer to it rather than the value itself), extensive prebuilt components and comprehensive JavaScript plugins. In a first for front-end frameworks, it also comes with its own SVG icon library designed to work with your Bootstrap sites.</p>\n<h3>14. Semantic UI</h3>\n<p><a href=\"https://semantic-ui.com/\">Semantic UI</a> is a component framework for theming websites using what they call “human-friendly HTML” (sorry dogs). What they mean by this is that the tool uses words and classes as exchangeable concepts, giving you the same benefits as BEM without the headache.</p>\n<p>But the real strength here is the breadth of Semantic UI’s components. Whether it’s elements, collections, views, modules of behaviours, the whole gamut of interface design is covered.</p>\n<h3>15. Foundation</h3>\n<p>The folks at <a href=\"https://foundation.zurb.com/\">Foundation</a> refer to their tool as \"the most advanced responsive front-end framework in the world\", which is certainly setting the bar high. Though it really is suitable for any device, medium and level of accessibility.</p>\n<p>Foundation is packed with features to help build content-focused websites, even providing users with HTML, CSS &#x26; Javascript templates to speed up the process. You can also use Foundation For Emails to craft HTML emails that look a million bucks on any platform.</p>\n<h3><strong>16. Materialize</strong></h3>\n<p><a href=\"https://materializecss.com/\">Materialize</a> is a modern framework based on Google's Material Design language, combining the classic <a href=\"https://paperform.co/blog/principles-of-design/\">principles of design</a> with innovation and tech. As a language its goal is to help unify user experience across any platform, which is fitting, as this is a focus at Materialize as well.</p>\n<p>From the animations to UI elements and everything between, there's a real focus on <a href=\"https://paperform.co/blog/ux-design-portfolio/\">user experience</a> above all else. That's not to say the technical tools aren't there. They are. It's fast, robust and has a low learning curve.</p>\n<h3>17. ChromeDevTools</h3>\n<p><a href=\"https://developer.chrome.com/docs/devtools/\">Chrome DevTools</a> is the name for the web development tools built into the Google Chrome web browser. No need to download any programs or check if it’s got MacOS compatibility—just right click in the browser, choose “Inspect” and get stuck in.</p>\n<p>It doesn’t have as many features as the other options on this list, but it does let you edit pages and diagnose problems with your sites. View and manipulate the DOM, change a page’s style sheets (CSS) or use it as a JavaScript debugger.</p>\n<h3>18. Svelte</h3>\n<p>We love <a href=\"https://svelte.dev/\">Svelte</a> for two reasons. One, it just sounds awesome and two, it’s all about empowering folks to build their projects with *way less code, *which is something we’re passionate about here at Paperform.</p>\n<p>Technically, Svelte isn’t a framework or a library. It’s a “compiler”, and it’s gained quite a reputation in the web dev community for being one of the best frontend frameworks on the market. It’s lightweight, SEO-optimised and unlike tools like React or Vue, doesn’t require heavy browser processing.</p>\n<p>Svelte’s “killer app” is that is has no virtual Dom. This means there’s considerably less re-renders of the UI, leading to a lightning fast experience. Some devs will be put off by this, but it makes it an ideal option for beginners or smaller projects.</p>\n<h3>19. Ember</h3>\n<p><a href=\"https://emberjs.com/\">Ember.js</a> is an open-source JavaScript web framework released back in 2011. Since then it’s been adopted by a large chunk of the web dev community and it’s easy to see why—using it's simple and, whether you’re creating feature-rich apps or client-side websites, the user experience is seamless.</p>\n<p>Working with Ember is a “batteries included” experience. Out of the box you have all the tools to start building UIs that work on any device. The built-in development environment comes with fast rebuilds, auto-reload and a test runner. Ember Data also lets you set up asynchronous relationships and keep models up to date across your app, which is perfect for remote work.</p>\n<p>Not sold? Some of the biggest and best development teams in the world use Ember to iterate on their products, including Netflix, Intercom and Apple. Convinced?</p>\n<h2>Package Managers</h2>\n<p>If you’ve ever installed a bunch of programs on your computer you’ll know it’s a tedious process. You’ve got to visit each individual website, download the installer, then set each one up individually.</p>\n<p>This is fine if all you’re doing is downloading Spotify. But back- and front-end developers work with hundreds of programs. Which is why package managers exist. These tools automate the process of installing, upgrading, configuring and removing programs from a computer’s operating system.</p>\n<h3>20. Yarn</h3>\n<p><a href=\"https://yarnpkg.com/lang/en/\">Yarn</a> is a relatively new package manager built by Facebook. It's known for its speed and stability—about the only two things you need from a package manager. But what sets it apart from similar tools is that it doubles as a project management tool.</p>\n<p>Installation is a breeze, and if you get stuck, the documentation is comprehensive. The Workspace feature allows you to split your project into sub-components, which is handy for keeping multiple versions of your project live. There is also a (small) plugin library to extend functionality.</p>\n<h3>21. Node Package Manager (npm)</h3>\n<p><a href=\"https://www.npmjs.com/\">Node Package Manager</a> is a package manager for NodeJS, created in 2009 as an open-source project to give JavaScript devs an easy way to share code modules. The npm Registry consists of more than a million packages—making it the largest software registry in the world.</p>\n<p>With a quick search you’ll find everything from front-end web apps to robots and routers. There is hardly a working web developer out there that wouldn’t have used npm at some point. And, now that it’s moved to GitHub, npm’s already vibrant community is only going to grow.</p>\n<h3>22. DPKG - Package Manager for Debian</h3>\n<p>Debian is a stable and secure Linux-based operating system extremely popular with web devs. <a href=\"https://man7.org/linux/man-pages/man1/dpkg.1.html\">Dpkg</a> is a tool built specifically to manage Debian packages. While dpkg does have a more user-friendly front-end alternative called <a href=\"https://wiki.debian.org/Aptitude\">aptitude</a>, dpkg itself runs entirely via the command line.</p>\n<p>In terms of functionality, it’s definitely a more low-level solution. But if you’re trying to handle the installation and removal of Debian software, it’s the place to start. For a more advanced tool try <a href=\"https://wiki.archlinux.org/title/pacman\">Pacman</a> or <a href=\"https://wiki.debian.org/Apt\">APT</a> (literally, Advanced Package Tool). Both fetch packages from remote locations and deal with more complex functions.</p>\n<h2>Git Clients</h2>\n<p>In Britain, 'Git' is slang for someone you think is a bit stupid. But in the world of web development, Git is the name for the software used to track changes in file sets. Most of the time it’s used to help devs collaborate during software development.</p>\n<p>A Git *client *is the software you use to work with Git repositories, which can be either remote or locally stored. These allow you to make changes to your Git project (e.g. pushing changes and staging). There are a bunch of different Git clients available across various operating systems.</p>\n<p><strong>💡Pro Tip:</strong> Git is a command line interface and Git clients aren’t strictly necessary. It’s kind of like using a translator versus learning a language natively. GUIs don’t have all the same functionality that a command line client offers, which is why many web devs go that route instead.</p>\n<h3><strong>23. Github Desktop</strong></h3>\n<p>Built by GitHub, the authority when it comes to all things Git, <a href=\"https://desktop.github.com/\">Github Desktop</a> is a tool that allows you to interact with GitHub from your desktop. It’s all about giving you a beautiful interface to cut down on distraction and let you focus on what matters.</p>\n<p>Whether you’re a seasoned veteran or a Git newbie, GitHub Desktop has you covered. Quickly add commits with collaborators, see all open pull requests from your repositories, and easily see before and after shots of your work in progress with expanded image diff support.</p>\n<p>On top of that there’s a heap of automated testing tools to play with. Open-source and available on MacOS and Windows, GitHub is pretty much the default option.</p>\n<h3>24. GitKraken</h3>\n<p><a href=\"https://www.gitkraken.com/\">GitKraken</a> bills itself as the “easiest, safest and most powerful” way to use Git. They understand that Git can be difficult to learn, which is why they offer exhaustive docs, as well as integrations with GitHub, GitLab and Azure DevOps to make adding remotes easy.</p>\n<p>The UI is equal parts gorgeous and intuitive. One particularly helpful feature is the ability to map complicated commands to a single button or click of the keyboard. If you’re working with a team, the visual commit graph also assists you to quickly view who made code changes and when.</p>\n<p>Other notable features include syntax highlighting, a nifty built-in code editor, interactive rebase and light and dark mode for those late-night coding sessions.</p>\n<h3>25. SourceTree</h3>\n<p><a href=\"https://www.sourcetreeapp.com/\">Sourcetree</a> is a Graphical User Interface (GUI for the cool kids) used to manage Git repository hosts. Built by Atlassian (go Aussies!) it allows you to visualise and manage your repos so you can focus purely on coding.</p>\n<p>Whether you’re just starting out as a web developer or  are an old pro, Sourcetree has all the tools you need. Leave the command line behind, or delve deeper to review change-sets, stash or cherry-pick between branches—built-in smart branching keeps development clean and efficient.</p>\n<p>Sourcetree is available to download for free on both MacOS and Windows. They’ve got a huge range of <a href=\"https://support.atlassian.com/bitbucket-cloud/docs/tutorial-learn-bitbucket-with-sourcetree/\">tutorials</a> that’ll have you up and running in no time. After some initial hiccups, it’s now more powerful and reliable than almost any other Git client.</p>\n<h2>API and Testing Cloud Tools</h2>\n<p>Web APIs are a crucial part of web development these days. APIs allow devs to access specific features or data within an application, service or other system.</p>\n<p>For example, the tech world recently went nuts when Notion announced the beta for their API. By accessing the API devs can now connect other apps with Notion pages and databases.</p>\n<p><strong>📚 Learn more about **[</strong>Paperform’s Notion integration<strong>](<a href=\"https://paperform.co/integrations/notion/\">https://paperform.co/integrations/notion/</a>)</strong>.**</p>\n<p>When testing and building with web APIs it’s crucial to have reliable tools. Here are some of the best:</p>\n<h3>26. Postman</h3>\n<p><a href=\"https://www.postman.com/\">Postman</a> is an API platform for building using APIs (duh) with features centred around simplifying the process and streamlining team collaboration. <a href=\"https://www.postman.com/api-platform/\">They promise</a> 5x faster development, 4x faster bug fixes and a whopping 10x more effective team collaboration.</p>\n<p>Do they back it up? The *15 million *developers that use Postman would say so. There are integrated tools for every stage of the API lifecycle, from design, mocking, testing and deploying all the way through to maintenance and deprecation.</p>\n<h3>27. REST Assured</h3>\n<p><a href=\"https://rest-assured.io/\">REST Assured</a> is the tool of choice for most web devs working with Java. Made so you don’t have to be a HTTP expert to use it, REST Assured enables you to test and validate REST services with the simplicity of more dynamic languages like Ruby.</p>\n<p>It saves you time and effort through automating part of the boilerplate code required to set up HTTP connections, send and receive requests and parse responses. There are also Given/When/Then test notations to help make tests easily comprehensible.</p>\n<h3>28. HoppScotch</h3>\n<p><a href=\"https://hoppscotch.io/\">HoppScotch</a> is a lightweight open source API development tool that runs smoothly and looks beautiful. Over the last few months it’s gained popularity with the dev community, largely thanks to its balance of advanced functionality and gorgeous design.</p>\n<p>Whether you need to establish full-duplex communication channels or execute queries with GraphQL, Hoppscotch can handle just about anything you throw at it. You can even add your own translations if English isn’t your preferred language.</p>\n<p>Other features include collections to keep API requests organised, the ability to sync and restore request entries with a click, and real-time connections with WebSocket, MQTT and more.</p>\n<h3><strong>29. LambdaTest</strong></h3>\n<p>It’s crucial that web applications and services work the same way no matter what browser folks use to access them. But you can’t check how your HTML, CSS and JavaScript looks on every web browser and operating system on the planet.</p>\n<p><a href=\"https://www.lambdatest.com/\">LambaTest</a> can. This tool performs automated and live interactive testing on 2,000+ real browsers and operating systems to help ensure your web apps look spiffy wherever they appear.</p>\n<p>It also has the ability to auto-generate full page screenshots across any browser, OS, device or resolution. And with integrated debugging, geolocation testing and seamless collaboration via Asana, Slack and Trello integrations, Lambdatest is a must-have.</p>\n<h2>Web Design and Prototyping Tools</h2>\n<p>It’s not enough just to know how to code. Part of being a web designer is understanding what goes into good UI and <a href=\"https://paperform.co/blog/in-conversation-kyro-samaan/\">UX design</a>—from prototyping and wire-framing to creating a visual language for your app. These <a href=\"https://paperform.co/blog/ux-design-tools/\">design tools</a> are vital.</p>\n<h3>30. Figma</h3>\n<p>Only a few years ago, if you wanted a professional design tool you’d need to spend a whole lot of cash and download complex software. Not anymore.</p>\n<p>With <a href=\"https://www.figma.com/ui-design-tool/\">Figma</a>, you get everything you need to design for the web, completely free and accessible from any browser. From UI, UX and <a href=\"https://paperform.co/blog/graphic-design-tools/\">graphic design</a> to wire-framing and diagramming, Figma truly is the all-in-one platform for your design needs.</p>\n<p>It’s like LEGO for web devs. Need to mock up a mobile app? Design an entire UI? Build your client’s dream website from scratch? Just use the drag-and-drop editor and away you go. With version history you can even collaborate in real-time and not worry about breaking things.</p>\n<p>There’s a reason the whole internet is raving about it—Figma’s a rare tool that you will find yourself actively looking for reasons to use. It’s not hyperbole when we say that it’s seriously the only design tool you’ll need.</p>\n<h3>31. Adobe XD</h3>\n<p><a href=\"https://www.adobe.com/products/xd.html\">Adobe XD</a> is just the latest in a long range of excellent design tools from Adobe. With XD you can sketch wireframes and mockups, build interactive prototypes and create high-fidelity designs for any screen, thanks to their vector-based system.</p>\n<p>Flat images not enough? 3D transform allows you to turn static objects into dynamic, three dimensional designs in a click. Move or rotate objects, add the appearance of depth, or even build unique immersive AR/VR experiences.</p>\n<p>Above all, Adobe XD succeeds at making your prototypes feel like the real thing—with no coding required. Add user flows, interactions and motion, and save time by using reusable buttons and components.</p>\n<p>Of course, Adobe XD works seamlessly with the rest of the Adobe suite (editing .PSD files from Photoshop is a particularly handy feature). There are a range of co-editing tools to aid real-time collaboration and 200+ plugins to extend functionality.</p>\n<h3>32. Sketch</h3>\n<p><a href=\"https://www.sketch.com/\">Sketch</a> vs Figma is kind of like Apple vs Android: both offer very similar tools, and which one you prefer comes down to preference and your individual workflow.</p>\n<p>Sketch happens to be the app of choice for companies like Google, Facebook and Xbox. It's easy to use, offers a host of useful keyboard shortcuts, and is lightning fast no matter what you throw at it, from <a href=\"https://paperform.co/blog/social-media-design/\">social media designs</a> to working prototypes or fancy new icon sets.</p>\n<p>Having said that, most web developers agree that Figma's prototyping capabilities are superior to Sketch. They also cite the built-in version history, collaboration features and the way Figma handles colour and text styling. The Auto-Layout is also preferred over Sketch's Smart layout.</p>\n<p>But. That's not the whole story. Sketch is regarded as being more stable (Figma can be on the buggy side sometimes), having clearer layer organisation, and being faster to load large files. There's also a dark mode, which we all know, is music to any web developer's ear.</p>\n<p><strong>💡Pro Tip:</strong> The Figma vs Sketch battle isn't going to be decided in this blog post. Luckily, Figma is free to use and Sketch has a generous free trial. If you're unsure which is the right choice for you, just try them both.</p>\n<h3>33. ProtoPie</h3>\n<p><a href=\"https://www.protopie.io/\">ProtoPie</a> bill themselves as the \"easiest way to turn your interaction design ideas into realistic prototypes\". It's a no-code creation tool used to create interactive prototypes for mobile, web, desktop or the 'Internet of Things' (IoT).</p>\n<p>What sets ProtoPie apart is one thing: simplicity. Their goal isn't to be the most complex tool on the market—they want to take the pain out of building workable prototypes, fast. As with any no-code tool, the emphasis is on replacing code with simple buttons and keyboard commands to simplify your workflow.</p>\n<p>There's a gradual learning curve which makes it great for beginners. Prototypes also interact with each other, meaning you can make interactions across devices. It's not as popular as the big players, but it's certainly a powerful tool.</p>\n<h3>34. Framer</h3>\n<p>If you're comfortable with code, then <a href=\"https://framer.com/\">Framer</a> is an awesome tool to empower you to create interactive, highly-customisable prototypes. Web devs around the world use it to build apps, websites, design systems and even slick new video game interfaces.</p>\n<p>What sets it apart from something like Figma? Well, with Framer the idea is that you can work with designs that can *realistically be implemented *with code. It's a bridge for UX designers and developers to collaborate and rapidly experiment in a shared workspace.</p>\n<p>📚 **Related reading: **<a href=\"https://paperform.co/blog/in-conversation-kyro-samaan/\"><strong>How to stand out as a UX Designer</strong></a></p>\n<p>Even if code isn't your thing, Framer is great. The GUI and design elements are on part with Sketch (or at least in the same ballpark) and the built-in prototyping is a breeze to use. There are also plenty of third-party packages to add new elements.</p>\n<h3>35. Toolset</h3>\n<p>Sick of doing everything with code? <a href=\"https://toolset.com/\">Toolset</a> is a WordPress page builder which lets you build custom sites without any code. This is a great option for web developers and designers looking to complete complex projects quickly.</p>\n<p>Use Toolset to design from within WordPress. Create rich sites that look great on any device and load quickly for the SEO gods. It's got everything you could require to set up custom post types, fields, templates, searches, front-end forms and more.</p>\n<p>The biggest benefit of Toolset is that it saves you from having to use a bunch of different tools to build WordPress sites—all for a reasonable price of $69.</p>\n<h3>36. Animator By Haiku</h3>\n<p>Animation is difficult but <a href=\"https://www.haikuforteams.com/animator/\">Animator by Haiku</a> makes it a little bit more palatable. It lets you bring motion design to production, from your initial design tools like Figma to your final codebase.</p>\n<p>Animator uses an interface called Timeline to choreograph animations in a visual way. You can sequence and animate elements using the built-in curves library, or delve deeper with the custom editor. If you're more comfortable with code, use any code editor of your choice to animate directly from your code.</p>\n<h3>37. Affinity Designer</h3>\n<p>Adobe Illustrator has long been the industry standard when it comes to creating vector graphics. However, the new kid on the block, <a href=\"https://affinity.serif.com/en-gb/designer/\">Affinity Designer</a>, is certainly giving Adobe a run for its money.</p>\n<p>You'll find Affinity evangelists all over the net—and for good reason. It offers a silky-smooth experience at a much more affordable price, custom-built with professional illustrators, web designers, game devs and other creatives in mind.</p>\n<p>Affinity offers many of the same tools as Adobe Illustrator in a beautifully designed (and not bloated) package. Work with vectors and rasters to create concept art, print projects, logos, icons, UIs or just about anything else you can imagine.</p>\n<p>The biggest drawcard? There's no monthly fee. You can own Affinity Designer for a one-off payment of $84.99 on Windows or Mac or $34.99 on iPad.</p>\n<h2>Collaboration Tools</h2>\n<p>We've covered just about all the technical tools you could possibly need to be a web developer. But whether you're working in-house, at an agency or going it alone as a freelancer, <a href=\"https://unito.io/features/\">collaboration tools</a> are equally as important as your text editor of choice.</p>\n<p>Often the success of a project isn't simply down to technical brilliance—it relies on clear and efficient communication. The tools below will help you achieve it.</p>\n<h3>38. ClickUp</h3>\n<p>Product management tools should do two things: simplify your processes and help you ship products faster. <a href=\"https://clickup.com/\">ClickUp</a> does both. With an expansive suite of tools, it is truly “one app to replace them all”, covering tasks, docs, chat, goals and more.</p>\n<p>Whether you’re working solo or in a team, ClickUp lets you map out tasks, better plan your work and see your overall product vision. The major benefit here is the dizzying versatility of the platform. From building mind maps to planning tasks on a Kanban board, you can build out your own custom product management setup.</p>\n<h3>39. Asana</h3>\n<p><a href=\"https://asana.com/\">Asana</a> is probably the single most well-known and popular project management and collaboration tool on the market. It’s a tool built to stop you shuffling between emails, spreadsheets and other apps to keep organised—from brainstorming to meeting that deadline, you can manage everything with Asana.</p>\n<p>At Paperform we use Asana to assign tasks to team members, create projects split among our Product, Marketing and Content teams, and monitor deadlines to ensure we’re hitting our goals. It’s simple and visual, and is particularly excellent for keeping remote teams on the same page.</p>\n<h3>40. JIRA</h3>\n<p><a href=\"https://www.atlassian.com/software/jira\">JIRA</a> is the go-to project management platform for software teams to plan, track and release their products. From creating user stories and planning sprints to the final stages of shipping and data analysis, JIRA is *the *way to take any product to launch and beyond.</p>\n<p>One big advantage JIRA has over other similar tools is that it’s so customisable. It is possible to build the perfect workflow for your specific product or team—this is also a slight drawback, as it results in a slightly steeper learning curve upfront.</p>\n<p>As you’d expect, it’s built with trademark Atlassian polish. And with the Atlassian Marketplace you can connect with over 3,000 first and third-party apps like Slack, Google Drive and GitHub, to extend functionality.</p>\n<h3>41. Slack</h3>\n<p>If you work online in any capacity and haven’t heard of <a href=\"https://slack.com/intl/en-au/\">Slack</a>, you must be living under a rock, at the bottom of the ocean, next to a starfish named Patrick. In the last few years, Slack has become synonymous with remote team communication.</p>\n<p>At its core Slack is a team messaging platform. It cuts down on the need for email by separating conversations into distinct Channels, so you can track topics, ideas and projects without long email threads. This makes it the virtual headquarters for your business.</p>\n<p>Of course, there’s much more to it than simple text chat. Jump on video calls, add integrations with your favourite tools, and even communicate with external clients or folks in other companies</p>\n<p>Slack isn’t just for teams, either. Communities allow you to connect with people in your niche—<a href=\"https://http//www.javaspecialists.eu/slack/\">Java Specialists</a>, <a href=\"https://rubydevs.herokuapp.com/\">Ruby Developers</a> and <a href=\"https://pyslackers.com/web\">Python Developers</a> are just a few of the most active.</p>\n<h3>42. Zoom</h3>\n<p>Occasionally an app or program hits levels of popularity so high that it becomes the noun for what it’s used for. This happened to Google long ago (“I’ll Google it”) and it happened to video chat tool <a href=\"https://zoom.us/\">Zoom</a> in the last year and a half (RIP Skype).</p>\n<p>This happened for a reason: Zoom is awesome. While nothing replaces the feeling of face-to-face communication, it’s the next best thing. Whether you want to chat to your family across the country or liaise with web design clients, it makes video calls ridiculously easy.</p>\n<p>Zoom is free for 40-minute calls, meaning your meetings come with a convenient end timer. Plus you can record any calls (with your companion’s permission), which has become a popular way to record <a href=\"https://paperform.co/blog/how-to-record-a-webinar/\">webinars</a> and podcasts.</p>\n<p>**📚 Related reading: **<a href=\"https://paperform.co/blog/how-to-be-a-good-interviewer/\"><strong>How to be a good interviewer</strong></a></p>\n<h2>Miscellaneous Web Development Tools</h2>\n<h3>43. TypeScript</h3>\n<p>TypeScript is an insanely popular open-source language that builds extra features on top of JavaScript. Essentially, think of regular Java as Clark Kent and TypeScript as Superman—bigger, better, faster and all-round more capable.</p>\n<p>Devs love Typescript because it makes their job easier. It catches both code and type errors, as well as bugs that can easily be missed. This reduces troubleshooting time, while also saving you the effort of having to track down mistakes manually.</p>\n<p>The only real downside is that once you try TypeScript you'll find it hard to return to vanilla Java. The good thing is that you don't need to make a binary choice—all valid JavaScript code is also TypeScript code, and TypeScript can be transformed into Java too.</p>\n<p>If you want clean, simple code with excellent documentation and tools that save you hours of time, TypeScript might be worth a try. Just don't think you can master it in a few minutes, as most devs find there's a steep (albeit worthwhile) learning curve.</p>\n<h3>44. Sass</h3>\n<p>You might've seen the term <a href=\"https://sass-lang.com/guide\">Sass</a> mentioned in web dev circles. But what is it? Well, Sass is a CSS preprocessor that extends what you can do with regular CSS, adding special features like variables, nested rules, inheritance (not the monetary type) and mixins.</p>\n<p>The benefit is that it speeds up your workflow and modularises your code, making edits easier and more efficient to make. It allows you to achieve the same end result as regular CSS, with a fraction of the effort.</p>\n<p>For example, let's say you're working with a theme colour that you keep having to reuse in your CSS code. Rather than having to retype it every time, you can specify the colour once and save the variable. Then, every time you want to use that colour you just refer to the variable instead of hard-coding it.</p>\n<p><strong>💡Pro Tip:</strong> Sass is compatible with any version of CSS, the only requirement being you need Ruby installed for it to work. Just make sure you don't start using Sass before you have CSS mastered—it's important to get a firm grip of the basics first.</p>\n<h3>45. Stack Overflow</h3>\n<p>Okay, so this isn’t technically a tool. However, it’s not hyperbole on the <a href=\"https://stackoverflow.com/\">Stack Overflow</a> website when it says, “every developer has a tab open to Stack Overflow”. Ask around—they do. It’s the most popular and comprehensive web development community on the internet.</p>\n<p>Stack Overflow is a public platform that aims to build the single most definitive collection of coding questions and answers. Developers, system admins and data scientists of every shape and size rely on it for accurate information to difficult technical challenges.</p>\n<p>We’re talking the real nitty gritty. If you want to know why InvokeAsync shows an an error in a Blazor component, how to undo the most recent local commits in Git, or why HTML thinks the tag “chucknorris” is a colour, this is the place for you.</p>\n<p>While it’s undoubtedly a gold mine of useful resources, it’s important to note that the community can be a bit toxic when it comes to welcoming new web developers. Stack Overflow mods are aware of this (and have added new guidelines in response) but do be wary—and look for existing answers before asking a query of your own.</p>\n<p><strong>💡Pro Tip:</strong> More broadly it would be remiss not to mention your other best friend: Google! Not even the most seasoned web developer knows how to fix everything and you can almost guarantee that you’ll find someone out there who’s had the same problem as you at some point.</p>\n<h3>46. Squoosh Image Optimiser\n</h3>\n<p>Assets. Content. Media. Even the simplest web design project will need basic images and icons. Image optimisation apps allow you to compress image file sizes without affecting quality, which means your sites will stay as fast and responsive as possible.</p>\n<p>Now, there’s no shortage of great image optimisation apps but we love <a href=\"https://squoosh.app/\">Squoosh</a>. It’s a no-frills experience that does exactly what you need it to. Just drag and drop your image into the editor and Squoosh does its thing.</p>\n<p>You aren’t limited to compression either. With the simple interface you can resize, compress or change the image format. The changes are almost instant and the finished product can be downloaded with a click.</p>\n<p>One drawback is that you can only work with one image at a time. So, if you’re working on a large project requiring lots of images, <a href=\"https://shortpixel.com/\">ShortPixel</a> may better suit your needs.</p>\n<h3>47. ColorPick Eyedropper Chrome Extension</h3>\n<p>Whether you're designing a website, putting together a UI or creating a <a href=\"https://paperform.co/blog/canva-alternatives/\">Canva design</a>, colour is serious business for web developers and designers. Colours are crucial for brand awareness, evoking certain emotions and, most importantly, accessibility.</p>\n<p>Colour picking tools allow you to identify the Hex codes of elements on the web to gain inspiration or keep designs consistent. There are thousands of tools in this space, but you won't find one easier than <a href=\"https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg?hl=en\">ColorPick Eyedropper for Chrome</a>.</p>\n<p>Just click the extension and hover over <em>any</em> element on *any *webpage. A small box appears with the Hex code and RGB model. These are automatically copied to the clipboard for you to use. If your only experience working with colours was using crayons in kindergarten, Material.io has a great to the <a href=\"https://material.io/design/color/the-color-system.html#color-usage-and-palettes\">Material Design system</a>.</p>\n<h3>48. Google Lighthouse</h3>\n<p>Technically a part of Chrome Developer Tools, <a href=\"https://developers.google.com/web/tools/lighthouse/\">Google Lighthouse</a> deserves its own dedicated entry. It’s an open-source, automated tool for improving the quality of web pages. You can run it on any existing web page to audit overall performance, accessibility, best practices and SEO.</p>\n<p>While you can run it from the command line, or as a Node module, the visual interface within Chrome DevTools is useful for getting actionable insight into what’s working (and what is not working) about any given site.</p>\n<p>There are two new features that extend the functionality somewhat too. Stack Packs allow Lighthouse to detect what platform your site is built on and display more specific guidance based on your unique tools.</p>\n<p><strong>💡Pro Tip:</strong> New Lighthouse plugins also allow you to use the data you’ve collected to create new audits and reports. Used in tandem with PageSpeed Insights, it’s a surefire way to make sure your website is in good shape.</p>\n<h3>49. A Second Monitor</h3>\n<p>No guide to web development tools would be complete without recommending you treat yourself to a second monitor. The extra screen real estate makes life <em>so much easier</em> and development <em>so much faster.</em></p>\n<p>Just think of a world where you can have IDE and terminal open on one screen, and the app that you're debugging on the other. Or Slack on the first, your browser and Stack Overflow on the second, maybe Spotify in the corner for some Lo-Fi beats.</p>\n<p>With one screen you're constantly cycling through open applications. Half the time you lose a tab, or forget what you're looking for altogether. This takes time, and as we all know, time is money. Treat yourself to a second monitor—it's a whole new world.</p>\n<h3>50. Paperform</h3>\n<p>For all the advances we’ve made in the world—sending billionaires to the moon, having the power of a supercomputer in our pockets—it’s still weirdly difficult to code beautiful online forms (seriously, PHP is a pain.) That’s where <a href=\"https://paperform.co/\">Paperform</a> comes in.</p>\n<p>Paperform empowers you to create beautiful <a href=\"https://paperform.co/blog/best-online-form-builders/\">online forms</a> and landing pages without any code. Just use our free-text editor to build anything from basic <a href=\"https://paperform.co/templates/contact-us-form/\">contact forms</a> to complex <a href=\"https://paperform.co/templates/apparel-order-form/\">eCommerce pages</a> that can be embedded anywhere on the internet.</p>\n<p>Use our theme tools to get started, then add your own unique tweaks with support for custom HTML and CSS. Developing on WordPress? We’ve even got a plugin that makes <a href=\"https://paperform.co/blog/wordpress-form-builder-plugins/\">embedding forms on WordPress</a> a breeze—and makes life way easier for you and your clients.</p>\n<p>But that’s not all you can do. Want to collect feedback from <a href=\"https://paperform.co/blog/customer-satisfaction-survey/\">satisfied customers</a>? Send a <a href=\"https://paperform.co/templates/new-client-onboarding-form/\">client questionnaire</a> for each new project? Or maybe you want to set up a <a href=\"https://paperform.co/blog/one-page-website/\">landing page</a> where you can sell <a href=\"https://paperform.co/blog/online-course-ideas/\">online courses</a>, schedule appointments and <a href=\"https://paperform.co/blog/email-list-sign-ups/\">grow a mailing list</a>?</p>\n<p>With Paperform you can do all that and more. And with our 3,000+ Direct and Zapier integrations, connecting with the rest of your tech stack to streamline your web development workflow is so easy your grandma could do it</p>\n<p><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/PF-STACK.jpg\"><img src=\"https://lh4.googleusercontent.com/TGU36vvkMGBvyuV-3moKfrSXGILBOwxz43E7jYdef4p2Vqeb2P90yFchj_RYj3OpvgAZxYQ9MRYpNwuSLFo3NIYD6p96Rb8uw4QXOsribEx_JjDoxTUWE1dSBMTJ17aC4ZH70E25\">Image Source: <a href=\"https://atom.io/\">Atom</a><img src=\"https://lh5.googleusercontent.com/me7eP6zI6TqSg-oyEJyqTAoveecqRgW9NNFHRIfuAVvbIJzl9af3yArn0QMuVXH51E-MeZv6BFNk3P1qKl4eJlsaMFWAIT0z2jUWFaVCvD_GDfro_GJbe9srCT299c8Aa2yg2oO9\">Image Source: <a href=\"https://www.sublimetext.com/\">Sublime Text</a><img src=\"https://lh6.googleusercontent.com/D44i98NM_KaAxB0vloVdqpkW3QQrOeh-gahRhYT_FT1wGaN9o4BOkV4bDecBTXQRqgSmXNf8emg5FEDMjvievgGr4_UADd6xGReiBqKVEi0FvfauKVDmYOOlEA4XSqmL9ND8EMk9\">Image Source: <a href=\"https://notepad-plus-plus.org/\">Notepad++</a><img src=\"https://lh5.googleusercontent.com/D-ZILznlMZ64gUXl3ODwXyyLvJOOV6Tgem2e7Nzt8p02Yz3v4JCA5tmyFKlz7JczYh_CpJcUAN0wHxf_Z5rzVxCX50EHbctJQ2iyaMAhtARmoJqYF3Ikl-G0g_4XILXJaF62b60S\">Source: <a href=\"https://commons.wikimedia.org/wiki/File:Vim-(logiciel)-console.png\">Wikipedia Commons</a><img src=\"https://lh6.googleusercontent.com/252gQ1IpAEUNr3lCHi-MvLrULiBMFo56aGsb47nNy6W6ZshOFQgk4FFYaKRn8Fyy4fOBJrcVBIDBEHQU9zg59G8XbmNxkcot4zMf28sJDQWNwxBCjv-UaH8weY6BKQU6ErDlmzu5\">Image Source: <a href=\"https://www.google.com/imgres?imgurl=https%3A%2F%2Fcode.visualstudio.com%2Fassets%2Fupdates%2F1_37%2Ficons.gif&#x26;imgrefurl=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_37&#x26;tbnid=FK_-tkfGX0bzmM&#x26;vet=12ahUKEwjznbKQ2YfyAhXUnUsFHULwDJQQMygAegUIARDOAQ..i&#x26;docid=xSPl9orBLj6FKM&#x26;w=1930&#x26;h=1282&#x26;q=vs%20code&#x26;ved=2ahUKEwjznbKQ2YfyAhXUnUsFHULwDJQQMygAegUIARDOAQ\">Visual Studio</a><img src=\"https://lh5.googleusercontent.com/sMHy-q3-qu13ZaFwDwrHy6sKhDnR_K5GdFtsL3J7Wknw9lUFNDOLx8LtRq7owH4GJIQ2bsxePWLN-CrMAdmE0TmsK71mrvaF-7pBlFqwXNMKzNhpdLYre9YmSuqpCP_URy7NxUJx\">Image Source: <a href=\"https://www.djangoproject.com/\">Django</a><img src=\"https://lh5.googleusercontent.com/mxpPHMijc7hvVz5LGZYx-QA9knoI7o3F4inDBERqyXqT7sFOqXky2R2WoyponK1WcZXMc6K5-5s3LYc1iedDCjOpu67Go6uEaTUKMc_CHfzMxFOFr_yN1TbnyTcfg7DhiKUirO9S\">Image Source: <a href=\"https://rubyonrails.org/\">Ruby on Rails</a><img src=\"https://lh4.googleusercontent.com/Xddm--wmths99nAn-_6kEFm_nwZxr1LHX-e585zbH9DVsCUMeMNYnfp2zSNVk7AZ7FvjZ4FTA_Qt23_cL4_HD6pqq5EqiVTjziFQAHgU9fbnFp0d42au3FA-LqLTRe7vORIbR8oB\">Image Source: <a href=\"https://angular.io/\">Angular</a><img src=\"https://lh5.googleusercontent.com/SF8F6NLYMhdsbjPY8lYimBA1R-A39nC2JEmDQIQAxQP0zjcVM5Cn-VBFxlKx2mNCFZY0R6E61BmeKuT6_MN5OZ5EKgIqQ6hRLkFi5pQIy0yeiNmJ_z861aE8txtAnFix2stdDPXf\">Image Source: <a href=\"https://reactjs.org/\">React</a><img src=\"https://lh4.googleusercontent.com/pdrGHJeVHJujGzs9PFtJY7E1s0aiDruAGdUquFd0iHKTIXhUaxnECP9GMwYpzmWgsejhmj0TGi6h9ej6FqI-ogSuNcYFDZqiTiGFy13PAFxVXJHKeT2PCD1lIQabE4uaLRFeeCX6\">Image Source: <a href=\"https://vuejs.org/\">Vue</a> <img src=\"https://lh6.googleusercontent.com/Vwun5FAge-Hh-IB-O2tJ9qMPuoLaSos0GRH1GxS-FD_F_EDuKJZNZk0hlOpB4Xv2gauE1vjC4sY38Ik19s0KtqgeR4IHivFcPCnDFMlAJ8EgfbGdA6fg9K8zOuiFF1GNR4mAwnes\">Image Source: <a href=\"https://www.meteor.com/\">Meteor</a><img src=\"https://lh3.googleusercontent.com/Zi7hE50XUZBiBZf9G9Jd8-gdp5GMeQ8ymf5XvkPX0wHKdC60ZlKf_uNeqcDoZo9iOaXFRMsFszhHl3Gy4N1XB7d7U1bfwCtlKXu4TJRYzh_206wQRBSK4eeAs_jatl2qyp4Rjv-m\">Image Source: <a href=\"https://dotnet.microsoft.com/apps/aspnet\">ASP.NET</a><img src=\"https://lh6.googleusercontent.com/NXYMRFbspS4M_OKEtx4AywW_r5xJdkgfIvGNYUcQhp5D5ocZYMdWKLzjMFGyVVENpsaK66j77qX8PhKXV2D1xFEPhUClwppQml00ehBAWCkt6Pzimu4EqS8A37QmxzzEKrAGznqD\">Image Source: <a href=\"http://getbootstrap.com/\">Bootstrap</a><img src=\"https://lh6.googleusercontent.com/yxo-yyVy5TmurN540Ka207_sQbyGKBqd00nvilE-fqtqYZv33OkE8jWRpBjNWO3tIxKtoi7ujMYfNS6Mbc9MCI3Fw18tjIRLo0kWosD9FRMd7t99nHbKcE_p1ArhMWppx65u0A9U\">Image Source: <a href=\"https://semantic-ui.com/\">Semantic UI</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628736193378.png\">Image Source: <a href=\"https://foundation.zurb.com/\">Foundation</a><img src=\"https://lh4.googleusercontent.com/_-hHtXVr3_H96K1TcXksh7ZrmhMucG7eIZ97alh5H-2z7ZDiWVnD6XKOAbOE-jOsgxPubVhcHNvfNPfVZq9SVbeB134GJom3h5HWbLikVv5i3SxQObohCtfqPq71JoSG1YfkUNA_\">Image Source: <a href=\"https://materializecss.com/\">Materialize</a><img src=\"https://lh5.googleusercontent.com/Xh6Lar3pQSSFHp6yhyU2ZLzuw77eVd-kqYgluxW0qLZ3KpO5_J3OTINaHVta53n5rOrcl3vjwUIupb6YaFcalhXxV0eFSpANCcczX5wjefmRMsHv6YmRzg3Xo3mUvW_WzN-lmX-B\">Image Source: <a href=\"https://developer.chrome.com/docs/devtools/\">ChromeDevTools</a><img src=\"https://lh3.googleusercontent.com/pEMKE5gpTl7SHgXBCl1r6gyGDHBeIyuoerr5dsSETZqyavGRu1VOghqgu-ZPodrZJ1QS1pBDwBHHcxDLczWZg6303oektGn-ttIjmnr_2RzXbsKwYwRbJ-nQ7NvvXOvoU7Bs-HgD\">Image Source: <a href=\"https://svelte.dev/\">Svelte</a><img src=\"https://lh6.googleusercontent.com/FdOwMdbWSLMXcnJ2gyj2NtGs5l5ShVxOPxRdw1Qj6OEeDiEXw-JPxYoN7Sbi8QLR_EquaOxyT_jey2R6JQXaqhDC_zbpMwy45PoMLjNZrk_QI6IJ3gCjBvCbA_rQl1Dabf0kX2nD\">Image Source: <a href=\"https://emberjs.com/\">Ember</a><img src=\"https://lh3.googleusercontent.com/7scAnAsMX-TlzJ6PLimPYY2Tb6aH6p1EtjLbBdz5M8SX3bIk78Q6sr1-mdc9LUgttgj2Ks_EVPP9XD6fb5LyMHK6-A8A1O-dFnVXW52AG5ZGurdFDe3AvIzO0ddGZ5DGWdE1k2mA\">Image Source: <a href=\"https://yarnpkg.com/lang/en/\">Yarn</a><img src=\"https://lh5.googleusercontent.com/6kCFq5M0LzWPsqts2sa5HMCU7NVeAG2HfaqQKmbe_sAuwH4fh_reNO1lkqn2Aq_FQO9BMNrXPv-8lTsTBhgaNIVPBy-l-hXqaHURRvhTlXdRChL6f0n2j0J0ZvnvjzUrtzubpK4D\">Image Source: <a href=\"https://www.npmjs.com/\">npm</a><img src=\"https://lh6.googleusercontent.com/sihMGTxUb8BieGKwjsMZSHtErIikM2B3ioRYAQ-U8RnRYkN9xdfYjLCA_dTbVuSxFoXFgjZsd7ljFMeBzZOcs5lSih1SJO1SLR5mTtcVGioSvOdjrUJCF20a6so4aNxnbQobt0hv\">Image Source: <a href=\"https://man7.org/linux/man-pages/man1/dpkg.1.html\">DPKG</a><img src=\"https://lh3.googleusercontent.com/9huTvL7gtUbXzzwMaYxE8GwC5Nh6RBD1984zLAbB3sx2ES98MqooBO9EN1UyTXr8uyANfcKfdWdGP2hwe3JdmdbjyK-XWkeJxymmpJd7HTKqU3QFPBXm3siMkEC9pB5sIw1RWiCi\">Image Source: <a href=\"https://desktop.github.com/\">Github Desktop</a><img src=\"https://lh4.googleusercontent.com/vEhY-y601AhXiD9FedJhwwwkd66UeRQQeyaHw9SL7LsyqUJCm7Vc4n5p0dLgQrCPJWUhiZmbFRugcKOfIlJYT3ah9W0lHjcMd3B4Pdh5kHx4yKdTOrmx709i4SYRuosO3L40_y0Y\">Image Source: <a href=\"https://www.gitkraken.com/\">GitKraken</a><img src=\"https://lh6.googleusercontent.com/IhG5Y6dLenofqcIvTY5sOrZoy7rf3f1CagwBeit_m0QZU_QZ5eoMpsWENAU2y4DB93nHq25dgX3WnTVKNNWnnYmoFaEIyT4WYE_JAi5OsjG1przlD9KLSX5-ar1CpXu1_wEhq2SY\">Image Source: <a href=\"https://www.sourcetreeapp.com/\">Sourcetree</a><img src=\"https://lh6.googleusercontent.com/1hWg3CPX-XkaeJXPECAninfnozi2o3p3RSk57Y7B8WdvZKsMODbZi3rxR5gyLORQyxbARj2-VoESeqwtWthttAZAItVnheneivMIG0ZTbPludRnzq6rMtzN2eTlEHeODaxrqmRIa\">Image Source: <a href=\"https://www.postman.com/\">Postman</a><img src=\"https://lh4.googleusercontent.com/Qg-U_I4ZNgtaun616Nlky0T5ram5v_kZ3h-F33Zmai5t9QoNqutJruPxl2yybA1elIk7J_Qs21_G4wpUR32-TYVP6bx7wCmtOIvIZaTZ3BxI1EqoIVklH-6KRRtnQT8deRXOWSZl\"><img src=\"https://lh5.googleusercontent.com/XROFNSk7cll32bNRftZzEeL9VDSS3IiLRIgZ4QRhMfadnJ_LLnohR_SMSGQW_CPbiqklUkOutHhK3yRICKp4b9OMb6nLn1M1i76COiDIv_9CTTm0XgxCRt7ZH_VKIgIawnWXskPm\">Image Source: <a href=\"https://hoppscotch.io/\">HoppScotch</a><img src=\"https://lh5.googleusercontent.com/cUod2uM6ebt50jQq4JtQ7SPMfAy8Xp8Ad05fe7bSREmHxh-kiJT5el1czMEqBfjEUiPiPTUQCqOZU8Ylw386MW3G0E2jQ35T_FKsksw_cieFbsmY8ubbmMNqwWwTLwXI1z8qtfvo\">Image Source: <a href=\"https://www.lambdatest.com/\">LambdaTest</a><img src=\"https://lh5.googleusercontent.com/qlIEiSqu53w7iAu9a6DbOtf6Mhpw1PFBKQHDhr1Fpoyq5Z8md6ctRU-mZcltNt3L6o1NZw29ibT7PvOmGMj4G0t0VbU_2y5Qvs0Nd3dykkA7fyVZkYij-qcHqveR-jMrwemNP4JQ\">Image Source: <a href=\"https://www.figma.com/ui-design-tool/\">Figma</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628742272023.png\">Image Source: <a href=\"https://www.adobe.com/products/xd.html\">Adobe XD</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628743157849.png\">Image Source: <a href=\"https://www.sketch.com/\">Sketch</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628752045112.png\">Image Source: <a href=\"https://www.protopie.io/\">ProtoPie</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628749998307.png\">Image Source: <a href=\"https://framer.com/\">Framer</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628747997257.png\">Image Source: <a href=\"https://toolset.com/\">Toolset</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628748611285.png\">Image Source: <a href=\"https://www.haikuforteams.com/animator/\">Animator by Haiku</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628751023068.png\">Image Source: <a href=\"https://affinity.serif.com/en-gb/designer/\">Affinity Designer</a><img src=\"https://lh6.googleusercontent.com/zSjT3K_KLXPwq32-5oA8RLQMAXmjNSBfTUXgxxJir7KQ6fOdd1yRYd0jzBxo7O42N3mNv5UQgIzgGmCvFb_Cc18h17DAED2ShKiPvl6qpn2LFWVogn9QcEMIX6DgHCvopX0pFB_1\">Image Source: <a href=\"https://clickup.com/\">ClickUp</a><img src=\"https://lh6.googleusercontent.com/8gm_048J2wEJ_WD_9vXB7esjB0bzTnj7hNPyhIewLbQSyEeqtuRhsYzUz7jE_n0E3GylWvamewgWYkbWSawAkAo3t5ZD-bM10TT-ZkSRSrEc3Fmib7Y7L_XTWe-OGOfdIT5zAOn1\">Image Source: <a href=\"https://asana.com/\">Asana</a><img src=\"https://lh4.googleusercontent.com/DOfqKLR_ON8XzgdLDjTuVMSa_bTKVSm9tZ3lbx3CW03AX8Q3Y9qYbP17d1EhH4F7KGNFbYRciB-NUFM775UhBHWkJbfPuhahhroh9P4EDUf714Zc-zBrXtKK644je6G8n589jewp\">Image Source: <a href=\"https://www.atlassian.com/software/jira\">JIRA</a><img src=\"https://lh4.googleusercontent.com/ES8WaJ_R9ZY9kYtfAlc-Wt28uUDmTMoRvA1zQLp2ijGfTvhVEuBYFYAS7FHSspYMokpuIv9VLqwhtxYxlnrImdxTLwFqnS_k6AqvXhPWSwqpNGc5lpfcHcbglV-I3Imcz1yOI2c_\">Image Source: <a href=\"https://slack.com/intl/en-au/\">Slack</a><img src=\"https://lh3.googleusercontent.com/9MTbGgNToiS4BrnLGuDkrIykZFtGbDE9g6khzKy7w52VnFQqnXwi2mlYjRFA9EI_49dmEyD53M3WFOxuR49RcAu_yQi3qxGI3NGs79qVKM4HJyDsQF6-5YH-hUDHrqvxnG_b_EUI\">Image Source: <a href=\"https://zoom.us/\">Zoom</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628831608408.png\">Image Source: <a href=\"https://www.typescriptlang.org/\">TypeScript</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628828564183-1.png\">Image Source: <a href=\"https://sass-lang.com/guide\">Sass</a><img src=\"https://lh6.googleusercontent.com/GVUZo-jhQxvyTfdhcC0SIpT7yTjtXiVUFDzhtxc-NuVtF5AXqQcgpCSEIZyWdLZs7rPtUYvu-lIHvY-eKymaFAT5sprEffolutJJ1gGAWJB9s37ZmGUlH6UIqleVpfciapcMvAR7\">Image Source: <a href=\"https://stackoverflow.com/\">Stack Overflow</a><img src=\"https://lh4.googleusercontent.com/VkP8y5mQdyGHN36GWELx53tup1fhCQiOPMmce1-wCGTBF18UTLrXnEa2KmDy6Op9QfwU00frx_xQBnRLIYJx7TERs0SwTNeufbMnM3RTIRS2ZDcrynUlQSEaEzoPTO7jD94kvtzr\">Image Source: <a href=\"https://squoosh.app/\">Squoosh</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/screely-1628823617932.png\">Image Source: Paperform<img src=\"https://lh6.googleusercontent.com/ALDwwi8tDvEmnWjsFJlyzFwWQ4p4V4uuS7egg1DNcbRWG0B02BeYbXO2o7aiRIHuSzTdStodCMJh7dSyT-L6XoyGhQArSNJam0_6HqDiEEkx4H7YkJ5fvOHy0sU3dUEE9UzqdPEa\">Image Source: <a href=\"https://developers.google.com/web/tools/lighthouse/\">Google Lighthouse</a><img src=\"https://img.paperform.co/fetch/f_webp,w_1500/https://s3.amazonaws.com/paperform-blog/2021/08/Facebook-post---5--2-.png\">Image Source: Stack Overflow<img src=\"https://lh3.googleusercontent.com/-B-6-8bBUycMywsPV65wJs1vKrkW3QCCo_Bd4eXovfkHh3uMkLyGdvBTYNDOj05o97iTVm7M4B9rLjINH8PZ9NLsIzJ7peSOcf3T2yJ9_8Efz5Rn5jMUv4xLpetCt3zF1PDs8iiU\"></p>"},{"url":"/docs/audio/","relativePath":"docs/audio/index.md","relativeDir":"docs/audio","base":"index.md","name":"index","frontmatter":{"title":"Audio","weight":0,"excerpt":"Audio Projects","seo":{"title":"Audio Projects","description":"A collection of web audio projects","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<br>\n<br>\n<br>\n<iframe width=\"100%\" height=\"500\" frameborder=\"0\"\nsrc=\"https://bgoonz.github.io/extracting-features-from-audio/\"></iframe>\n<hr>\n<br>\n<iframe width=\"100%\" height=\"500\" frameborder=\"0\"\nsrc=\"https://observablehq.com/embed/@bgoonz/mode-lighting/2?cell=*\"></iframe>\n<br>\n<br>\n<br>\n<hr>\n<br>\n    <iframe\n      width=\"100%\"\n      height=\"1000\"\n      frameborder=\"0\"\n      src=\"https://observablehq.com/embed/@bgoonz/determining-the-key-of-bwv1001-1st-movement-adagio?cell=*\"\n    ></iframe>\n<br>\n<br>\n<br>\n<hr>\n<br>\n    <iframe\n      width=\"100%\"\n      height=\"784\"\n      frameborder=\"0\"\n      src=\"https://observablehq.com/embed/@bgoonz/can-sound-add-value-to-data-visualizations?cells=viewof+chart\"\n    ></iframe>\n<br>\n<br>\n<br>\n<hr>\n<br>"},{"url":"/docs/community/video-chat/","relativePath":"docs/community/video-chat.md","relativeDir":"docs/community","base":"video-chat.md","name":"video-chat","frontmatter":{"title":"Video Chat","weight":1,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h1>Zumzi Instant Messenger</h1>\n<iframe src=\"https://zumzi-chat-messenger.vercel.app/web/login.html\" height=\"275px\" width=\"17%\" style=\"zoom:0.69; align-self:center;display:auto;display: block;border:12px solid gold;\"> </iframe>\n<p><a class=\"github-corner\" href=\"https://github.com/bgoonz/zumzi-chat-messenger\" aria-label=\"View source on Github\"><svg aria-hidden=\"true\" width=\"40\" height=\"40\" viewBox=\"0 0 250 250\" style=\"z-index: 100000; fill: black; color: rgb(255, 255, 255); position: fixed; top: 0px; border: 0px; left: 0px; transform: scale(-1.5, 1.5);\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path class=\"octo-arm\" d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\"></path><path class=\"octo-body\" d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\"></path></svg></a></p>"},{"url":"/docs/community/","relativePath":"docs/community/index.md","relativeDir":"docs/community","base":"index.md","name":"index","frontmatter":{"title":"Community","excerpt":"We'd love it if you participate in the Libris community. Find out how to get connected.","seo":{"title":"Connect ","description":"This is the community page","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Where To Get Support","keyName":"property"},{"name":"og:description","value":"This is the community page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Where To Get Support"},{"name":"twitter:description","value":"This is the community page"}]},"template":"docs"},"html":"<div align=\"center\">\n<h2>➤ Connect with me:</h2>\n<p align=\"center\">\n  <a href=\"mailto:bryan.guner@gmail.com\"><img src=\"https://img.icons8.com/color/96/000000/gmail.png\" alt=\"email\"/></a><a href=\"https://www.facebook.com/bryan.guner/\"><img src=\"https://img.icons8.com/color/96/000000/facebook.png\" alt=\"facebook\"/></a><a href=\"https://twitter.com/bgooonz\"><img src=\"https://img.icons8.com/color/96/000000/twitter-squared.png\" alt=\"twitter\"/></a><a href=\"https://www.youtube.com/channel/UC9-rYyUMsnEBK8G8fCyrXXA/videos\"><img src=\"https://img.icons8.com/color/96/000000/youtube.png\" alt=\"youtube\"/></a><a href=\"https://www.instagram.com/bgoonz/?hl=en\"><img src=\"https://img.icons8.com/color/96/000000/instagram-new.png\" alt=\"instagram\"/></a><a href=\"https://www.pinterest.com/bryanguner/_saved/\"><img src=\"https://img.icons8.com/color/96/000000/pinterest--v1.png\" alt=\"pinterest\"/></a><a href=\"https://www.linkedin.com/in/bryan-guner-046199128/\"><img src=\"https://img.icons8.com/color/96/000000/linkedin.png\" alt=\"linkedin\"/></a>\n  <a href=\"https://bryanguner.medium.com/\"><img src=\"https://img.icons8.com/color/96/000000/medium-logo.png\" alt=\"medium\"/></a><a href=\"https://open.spotify.com/user/bgoonz?si=ShH9wYbIQWab5Jz_30BKFw\"><img src=\"https://img.icons8.com/color/96/000000/spotify--v1.png\" alt=\"spotify\"/></a>\n  </p>\n</div>\n<div align=\"center\">\n<table>\n<thead>\n<tr>\n<th><a href=\"https://github.com/bgoonz\">GitHub</a></th>\n<th><a href=\"https://gitlab.com/bryan.guner.dev\">Gitlab</a></th>\n<th><a href=\"https://bitbucket.org/bgoonz/\">Bitbucket</a></th>\n<th><a href=\"https://bryanguner.medium.com/\">Medium</a></th>\n<th><a href=\"https://codepen.io/bgoonz\">code pen</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://repl.it/@bgoonz/\">Replit</a></td>\n<td><a href=\"https://www.quora.com/q/webdevresourcehub?invite_code=qwZOqbpAhgQ6hjjGl8NN\">Quora</a></td>\n<td><a href=\"https://www.reddit.com/user/bgoonz1\">Redit</a></td>\n<td><a href=\"https://webcomponents.dev/user/bgoonz\">webcomponents.dev</a></td>\n<td><a href=\"https://dev.to/bgoonz\">dev.to</a></td>\n</tr>\n<tr>\n<td><a href=\"https://runkit.com/bgoonz\">runkit</a></td>\n<td><a href=\"https://observablehq.com/@bgoonz?tab=profile\">Observable Notebooks</a></td>\n<td><a href=\"https://www.npmjs.com/~bgoonz11\">npm</a></td>\n<td><a href=\"https://meta.stackexchange.com/users/936785/bryan-guner\">stack-exchange</a></td>\n<td><a href=\"https://observablehq.com/@bgoonz?tab=profile\">Observable Notebooks</a></td>\n</tr>\n<tr>\n<td><a href=\"https://www.upwork.com/freelancers/~01bb1a3627e1e9c630?viewMode=1&#x26;s=1110580755057594368\">Upwork</a></td>\n<td><a href=\"https://www.notion.so/Overview-Of-Css-5d88b0bc9a73422a9be1481d599a56ba\">Notion</a></td>\n<td><a href=\"https://angel.co/u/bryan-guner\">AngelList</a></td>\n<td><a href=\"https://stackshare.io/bryanguner\">StackShare</a></td>\n<td><a href=\"http://plnkr.co/account/plunks\">Plunk</a></td>\n</tr>\n<tr>\n<td><a href=\"https://giphy.com/channel/bryanguner\">giphy</a></td>\n<td><a href=\"https://ko-fi.com/bgoonz\">kofi</a></td>\n<td><a href=\"https://www.codewars.com/users/bgoonz\">Codewars</a></td>\n<td><a href=\"https://dribbble.com/bgoonz4242?onboarding=true\">Dribble</a></td>\n<td><a href=\"https://glitch.com/@bgoonz\">Glitch</a></td>\n</tr>\n<tr>\n<td><a href=\"https://app.contentful.com/spaces/lelpu0ihaz11/assets?id=MocOPmmNliLn6PPv\">contentful</a></td>\n<td><a href=\"https://app.netlify.com/user/settings#profile\">Netlify</a></td>\n<td><a href=\"https://stackblitz.com/@bgoonz\">Stackblitz</a></td>\n<td><a href=\"https://vercel.com/bgoonz\">Vercel</a></td>\n<td><a href=\"https://www.youtube.com/channel/UC9-rYyUMsnEBK8G8fCyrXXA/featured\">Youtube</a></td>\n</tr>\n<tr>\n<td><a href=\"https://web-dev-hub.com/\">wordpress</a></td>\n<td><a href=\"https://edabit.com/user/dsRcx6yCwAgYwZbRB\">Edabit</a></td>\n<td><a href=\"https://vimeo.com/user128661018\">Vinmeo</a></td>\n<td><a href=\"https://jsfiddle.net/user/bgoonz/\">js fiddle</a></td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://developers.google.com/profile/u/100803355943326309646?utm_source=developers.google.com\">Google Developer Profile</a></td>\n<td><a href=\"https://gitee.com/bgoonz\">Gittee</a></td>\n<td><a href=\"https://wakatime.com/@bgoonz42\">Wakatime</a></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p><a href=\"https://twitter.com/messages/compose?recipient_id=3805104374\"\n  class=\"twitter-dm-button\" data-screen-name=\"@furni\">\nMessage @bgooonz</a></p>\n<p><a class=\"twitter-follow-button\"\n  href=\"https://twitter.com/bgooonz\">\nFollow @bgooonz</a></p>\n<br>\n<a class=\"twitter-timeline\" href=\"https://twitter.com/bgooonz?ref_src=twsrc%5Etfw\">Tweets by bgooonz</a> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>"},{"url":"/docs/content/data-structures-algo/","relativePath":"docs/content/data-structures-algo.md","relativeDir":"docs/content","base":"data-structures-algo.md","name":"data-structures-algo","frontmatter":{"title":"RECENT PROJECTS","weight":0,"excerpt":"embedded utilities","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<br>\n<br>\n<br>\n<br>\n<h1>  Potluck Planner </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://potluck-landing.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1>Meditation App </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://meditate42app.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<h1>  Web Audio DAW      </h1>\n<br>\n<iframe src=\"https://mihirbeg28.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<h1>React & Shopify Ecommerce Site (Norwex)     </h1>\n<br>\n<iframe src=\"https://friendly-amaranth-51833.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1>Bgoonz Bookmarks   </h1>\n<br>\n<iframe src=\"https://bgoonzbookmarks.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1>Goal Tracker  </h1>\n<br>\n<iframe src=\"https://splendid-onion-b0ec3.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>"},{"url":"/docs/content/history-api/","relativePath":"docs/content/history-api.md","relativeDir":"docs/content","base":"history-api.md","name":"history-api","frontmatter":{"title":"History API","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h1>History Api</h1>\n<h1>\n\n</h1>\n<p>The DOM <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\">Window</a> object provides access to the browser's session history (not to be confused for <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/history\">WebExtensions history</a>) through the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/history\">history</a> object. It exposes useful methods and properties that let you navigate back and forth through the user's history, and manipulate the contents of the history stack.</p>\n<h2><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API#concepts_and_usage\">Concepts and usage</a></h2>\n<p>Moving backward and forward through the user's history is done using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/back\">back()</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/forward\">forward()</a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/go\">go()</a> methods.</p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API#moving_forward_and_backward\">Moving forward and backward</a></h3>\n<p>To move backward through history:</p>\n<p>This acts exactly as if the user clicked on the <strong>Back</strong> button in their browser toolbar.</p>\n<p>Similarly, you can move forward (as if the user clicked the <strong>Forward</strong> button), like this:</p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API#moving_to_a_specific_point_in_history\">Moving to a specific point in history</a></h3>\n<p>You can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/go\">go()</a> method to load a specific page from session history, identified by its relative position to the current page. (The current page's relative position is 0.)</p>\n<p>To move back one page (the equivalent of calling <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/back\">back()</a>):</p>\n<p>To move forward a page, just like calling <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/forward\">forward()</a>:</p>\n<p>Similarly, you can move forward 2 pages by passing 2, and so forth.</p>\n<p>Another use for the go() method is to refresh the current page by either passing 0, or by invoking it without an argument:</p>\n<p>You can determine the number of pages in the history stack by looking at the value of the length property:</p>\n<h2><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API#interfaces\">Interfaces</a></h2>\n<p>Allows manipulation of the browser <em>session history</em> (that is, the pages visited in the tab or frame that the current page is loaded in).</p>\n<h2><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API#examples\">Examples</a></h2>\n<p>The following example assigns a listener to the onpopstate property. And then illustrates some of the methods of the history object to add, replace, and move within the browser history for the current tab.</p>\n<h1>Working with the History API\n</h1>\n<p>HTML5 introduced the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\">pushState()</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\">replaceState()</a> methods for add and modifying history entries, respectively. These methods work in conjunction with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\">onpopstate</a> event.</p>\n<h2><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#adding_and_modifying_history_entries\">Adding and modifying history entries</a></h2>\n<p>Using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\">pushState()</a> changes the referrer that gets used in the HTTP header for <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a> objects created after you change the state. The referrer will be the URL of the document whose window is this at the time of creation of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a> object.</p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#example_of_pushstate_method\">Example of pushState() method</a></h3>\n<p>Suppose <a href=\"https://mozilla.org/foo.html\">https://mozilla.org/foo.html</a> executes the following JavaScript:</p>\n<p>This will cause the URL bar to display <a href=\"https://mozilla.org/bar.html\">https://mozilla.org/bar.html</a>, but won't cause the browser to load bar.html or even check that bar.html exists.</p>\n<p>Suppose now that the user navigates to <a href=\"https://google.com\">https://google.com</a>, then clicks the <strong>Back</strong> button. At this point, the URL bar will display <a href=\"https://mozilla.org/bar.html\">https://mozilla.org/bar.html</a> and history.state will contain the stateObj. The popstate event won't be fired because the page has been reloaded. The page itself will look like bar.html.</p>\n<p>If the user clicks <strong>Back</strong> once again, the URL will change to <a href=\"https://mozilla.org/foo.html\">https://mozilla.org/foo.html</a>, and the document will get a popstate event, this time with a null state object. Here too, going back doesn't change the document's contents from what they were in the previous step, although the document might update its contents manually upon receiving the popstate event.</p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#the_pushstate_method\">The pushState() method</a></h3>\n<p>pushState() takes three parameters: a <strong>state object</strong>; a <strong>title</strong> (currently ignored); and (optionally), a <strong>URL</strong>.</p>\n<p>Let's examine each of these three parameters in more detail.</p>\n<p>The state object is a JavaScript object which is associated with the new history entry created by pushState(). Whenever the user navigates to the new state, a popstate event is fired, and the state property of the event contains a copy of the history entry's state object. The state object can be anything that can be serialized. Because Firefox saves state objects to the user's disk so they can be restored after the user restarts the browser, we impose a size limit of 640k characters on the serialized representation of a state object. If you pass a state object whose serialized representation is larger than this to pushState(), the method will throw an exception. If you need more space than this, you're encouraged to use sessionStorage and/or localStorage.</p>\n<p><a href=\"https://github.com/whatwg/html/issues/2174\">All browsers but Safari currently ignore this parameter</a>, although they may use it in the future. Passing the empty string here should be safe against future changes to the method. Alternatively, you could pass a short title for the state to which you're moving.</p>\n<p>The new history entry's URL is given by this parameter. Note that the browser won't attempt to load this URL after a call to pushState(), but it might attempt to load the URL later, for instance after the user restarts the browser. The new URL does not need to be absolute; if it's relative, it's resolved relative to the current URL. The new URL must be of the same origin as the current URL; otherwise, pushState() will throw an exception. This parameter is optional; if it isn't specified, it's set to the document's current URL.</p>\n<p><strong>Note:</strong> In Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1) through Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), the passed object is serialized using JSON. Starting in Gecko 6.0 (Firefox 6.0 / Thunderbird 6.0 / SeaMonkey 2.3), the object is serialized using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">the structured clone algorithm</a>. This allows a wider variety of objects to be safely passed.</p>\n<p>In a sense, calling pushState() is similar to setting window.location = \"#foo\", in that both will also create and activate another history entry associated with the current document.</p>\n<p>But pushState() has a few advantages:</p>\n<ul>\n<li>The new URL can be any URL in the same origin as the current URL. In contrast, setting window.location keeps you at the same <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document\">document</a> only if you modify only the hash.</li>\n<li>You don't have to change the URL if you don't want to. In contrast, setting window.location = \"#foo\"; creates a new history entry only if the current hash isn't #foo.</li>\n<li>You can associate arbitrary data with your new history entry. With the hash-based approach, you need to encode all of the relevant data into a short string.</li>\n<li>If title is subsequently used by browsers, this data can be utilized (independent of, say, the hash).</li>\n</ul>\n<p>Note that pushState() never causes a hashchange event to be fired, even if the new URL differs from the old URL only in its hash.</p>\n<p>In other documents, it creates an element with a null namespace URI.</p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#the_replacestate_method\">The replaceState() method</a></h3>\n<p>history.replaceState() operates exactly like history.pushState(), except that replaceState() modifies the current history entry instead of creating a new one. Note that this doesn't prevent the creation of a new entry in the global browser history.</p>\n<p>replaceState() is particularly useful when you want to update the state object or URL of the current history entry in response to some user action.</p>\n<p><strong>Note:</strong> In Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1) through Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2), the passed object is serialized using JSON. Starting in Gecko 6.0 (Firefox 6.0 / Thunderbird 6.0 / SeaMonkey 2.3), the object is serialized using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\">the structured clone algorithm</a>. This allows a wider variety of objects to be safely passed.</p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#example_of_replacestate_method\">Example of replaceState() method</a></h3>\n<p>Suppose <a href=\"https://mozilla.org/foo.html\">https://mozilla.org/foo.html</a> executes the following JavaScript:</p>\n<p>The explanation of these two lines above can be found at the above section <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#example_of_pushstate_method\"><em>Example of pushState() method</em></a> section.</p>\n<p>Next, suppose <a href=\"https://mozilla.org/bar.html\">https://mozilla.org/bar.html</a> executes the following JavaScript:</p>\n<p>This will cause the URL bar to display <a href=\"https://mozilla.org/bar2.html\">https://mozilla.org/bar2.html</a>, but won't cause the browser to load bar2.html or even check that bar2.html exists.</p>\n<p>Suppose now that the user navigates to <a href=\"https://www.microsoft.com\">https://www.microsoft.com</a>, then clicks the <strong>Back</strong> button. At this point, the URL bar will display <a href=\"https://mozilla.org/bar2.html\">https://mozilla.org/bar2.html</a>. If the user now clicks <strong>Back</strong> again, the URL bar will display <a href=\"https://mozilla.org/foo.html\">https://mozilla.org/foo.html</a>, and totally bypass bar.html.</p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#the_popstate_event\">The popstate event</a></h3>\n<p>A popstate event is dispatched to the window every time the active history entry changes. If the history entry being activated was created by a call to <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\">pushState</a> or affected by a call to <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\">replaceState</a>, the popstate event's state property contains a copy of the history entry's state object.</p>\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\">WindowEventHandlers.onpopstate</a> for sample usage.</p>\n<h3><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#reading_the_current_state\">Reading the current state</a></h3>\n<p>When your page loads, it might have a non-null state object.  This can happen, for example, if the page sets a state object (using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\">pushState()</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\">replaceState()</a>) and then the user restarts their browser. When the page reloads, the page will receive an onload event, but no popstate event. However, if you read the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/state\">history.state</a> property, you'll get back the state object you would have gotten if a popstate had fired.</p>\n<p>You can read the state of the current history entry without waiting for a popstate event using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/state\">history.state</a> property like this:</p>\n<h2><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Working_with_the_History_API#see_also\">See also</a></h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API\">History API</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API/Example\">Ajax navigation example</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/history\">window.history</a></li>\n</ul>\n<h1>Window.historyCopy to Clipboard\n\n</h1>\n<p>The Window.history read-only property returns a reference to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History\">History</a> object, which provides an interface for manipulating the browser <em>session history</em> (pages visited in the tab or frame that the current page is loaded in).</p>\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API\">Manipulating the browser history</a> for examples and details. In particular, that article explains security features of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\">pushState()</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\">replaceState()</a> methods that you should be aware of before using them.</p>\n<h2><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/history#example\">Example</a></h2>\n<h2><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/history#notes\">Notes</a></h2>\n<p>For top-level pages you can see the list of pages in the session history, accessible via the History object, in the browser's dropdowns next to the back and forward buttons.</p>\n<p>For security reasons the History object doesn't allow the non-privileged code to access the <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/URL\">URLs</a> of other pages in the session history, but it does allow it to navigate the session history.</p>\n<p>There is no way to clear the session history or to disable the back/forward navigation from unprivileged code. The closest available solution is the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location/replace\">location.replace()</a> method, which replaces the current item of the session history with the provided URL.</p>"},{"url":"/docs/content/archive/","relativePath":"docs/content/archive.md","relativeDir":"docs/content","base":"archive.md","name":"archive","frontmatter":{"title":"Archive","weight":1,"seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h1>Archives:</h1>\n<br>\n<br>\n<br>\n<br>\n<h1> Text Tools     </h1>\n<br>\n<iframe src=\"https://devtools42.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1> Ternary Converter   </h1>\n<br>\n<iframe src=\"https://ternary42.netlify.app/\" height=\"800px\" width=\"600px!important\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1>  Github HTML Render from link </h1>\n<br>\n<iframe src=\"https://githtmlpreview.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1> Form Builder GUI </h1>\n<br>\n<iframe  src=\"https://fourm-builder-gui.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<h1> Border Builder </h1>\n<br>\n<iframe  src=\"https://codepen.io/bgoonz/embed/zYwLVmb?default-tab=html%2Cresult\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<h2>Archives</h2>\n<br>\n<br>\n<br>\n<h1> Original Blog Site </h1>\n<br>\n<iframe src=\"https://web-dev-resource-hub.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<table>\n<thead>\n<tr>\n<th>****</th>\n<th>****</th>\n<th>****</th>\n<th>****</th>\n<th>****</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>2</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n</tr>\n<tr>\n<td>leonardomso/33-js-concepts<em>This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a…</em>github.com</td>\n<td>Call stack - MDN Web Docs Glossary: Definitions of Web-related terms MDN<em>A call stack is a mechanism for an interpreter (like the JavaScript interpreter in a web browser) to keep track of its…</em>developer.mozilla.org</td>\n<td>Understanding Javascript Function Executions — Call Stack, Event Loop , Tasks &#x26; more<em>Web developers or Front end engineers, as that’s what we like to be called, nowadays do everything right from acting as…</em>medium.com</td>\n<td>Understanding the JavaScript call stack<em>The JavaScript engine (which is found in a hosting environment like the browser), is a single-threaded interpreter…</em>medium.freecodecamp.org Javascript: What Is The Execution Context? What Is The Call Stack?<em>What is the Execution Context in Javascript? I bet you don’t know the answer. What are the most basic components of a…</em>web.archive.org</td>\n<td>Understanding Execution Context and Execution Stack in Javascript<em>Understanding execution context and stack to become a better Javascript developer.</em>blog.bitsrc.io</td>\n</tr>\n<tr>\n<td>JavaScript data types and data structures - JavaScript MDN<em>Programming languages all have built-in data structures, but these often differ from one language to another. This…</em>developer.mozilla.org</td>\n<td>How numbers are encoded in JavaScript<em>Edit description</em>2ality.com</td>\n<td>Here is what you need to know about JavaScript’s Number type<em>Why 0.1+0.2 IS NOT equal to 0.3 and 9007199254740992 IS equal to 9007199254740993</em>medium.com</td>\n<td>What Every JavaScript Developer Should Know About Floating Point Numbers<em>After I gave my talk on JavaScript (really, I was there trying to shamelessly plug my book - Underhanded JavaScript and…</em>blog.chewxy.com</td>\n<td>The Secret Life of JavaScript Primitives<em>You may not know it but, in JavaScript, whenever you interact with string, number or boolean primitives you enter a…</em>javascriptweblog.wordpress.com</td>\n</tr>\n<tr>\n<td>JavaScript Reference and Copy Variables Hacker Noon<em>Each programming language has its own peculiarities (and JavaScript has a lot), and today I’m going to talk about…</em>hackernoon.com</td>\n<td>JavaScript Primitive vs. Reference Values<em>Summary: in this tutorial, you will learn the differences between primitive and reference values. In JavaScript, a…</em>www.javascripttutorial.net</td>\n<td>JavaScript by reference vs. by value<em>I’m looking for some good comprehensive reading material on when JavaScript passes something by value and when by…</em>stackoverflow.com</td>\n<td>JavaScript Interview Prep: Primitive vs. Reference Types<em>original article In a JavaScript interview, they might ask if you understand the difference between primitive and…</em>dev.to</td>\n<td>What you need to know about Javascript’s Implicit Coercion<em>Javascript’s implicit coercion simply refers to Javascript attempting to coerce an unexpected value type to the…</em>dev.to</td>\n</tr>\n<tr>\n<td>Javascript Coercion Explained<em>Along with some practical examples</em>hackernoon.com</td>\n<td>What exactly is Type Coercion in Javascript?<em>Let’s start with a short intro to type systems which I think will help you understand the general idea of type…</em>stackoverflow.com</td>\n<td><a href=\"https://thedevs.network/*Weak\">https://thedevs.network/*Weak</a> dynamic typing is arguably one of those things everybody likes to pick at about JavaScript. For an elegant dynamic…*thedevs.network</td>\n<td>getify/You-Dont-Know-JS<em>A book series on JavaScript. @YDKJS on twitter. Contribute to getify/You-Dont-Know-JS development by creating an…</em>github.com</td>\n<td>JavaScript — Double Equals vs. Triple Equals<em>Learn equality in JavaScript in 3 minutes</em>codeburst.io</td>\n</tr>\n<tr>\n<td>Why Use the Triple-Equals Operator in JavaScript? - Impressive Webs<em>“Determining whether two variables are equivalent is one of the most important operations in programming.” That’s…</em>www.impressivewebs.com</td>\n<td>What is the difference between == and === in JavaScript?<em>On the surface == and === appear to be functionally the same, so why bother typing an extra character? In this video…</em>www.oreilly.com</td>\n<td>Why javascript’s typeof always return “object”?<em>To add in with the others, typeof returns both objects and primitives. There are 5 primitive types in javascript…</em>stackoverflow.com</td>\n<td>Checking Types in Javascript<em>Have you ever wondered: what is the correct way to check if a Javascript variable is an Array? Do a Google search and…</em>tobyho.com</td>\n<td>How to better check data types in javascript - Webbjocke<em>To check what data type something has in javascript is not always the easiest. The language itself provides an operator…</em>webbjocke.com</td>\n</tr>\n<tr>\n<td>A JavaScript Fundamentals Cheat Sheet: Scope, Context, and “this”<em>Scope Scope refers to where a variable can be accessed within a program. Some variables can be accessed from anywhere…</em>dev.to</td>\n<td>Quick Tip: Function Expressions vs Function Declarations - SitePoint<em>This article was peer reviewed by Jeff Mott. Thanks to all of SitePoint’s peer reviewers for making SitePoint content…</em>www.sitepoint.com</td>\n<td>JavaScript Function — Declaration vs Expression<em>Functions are considered as First Class citizen in JavaScript and it is really important to be clear with the concept…</em>medium.com</td>\n<td>Function Declarations vs. Function Expressions<em>What is Function Statement/Declarations in JavaScript?</em>medium.com</td>\n<td>Function Declarations vs. Function Expressions<em>Lets start with a short quiz. What is alerted in each case?: Question 1: Question 2: Question 3: Question 4: If you…</em>javascriptweblog.wordpress.com</td>\n</tr>\n<tr>\n<td>16. Modules<em>Edit description</em>exploringjs.com</td>\n<td>ES modules: A cartoon deep-dive - Mozilla Hacks - the Web developer blog<em>ES modules bring an official, standardized module system to JavaScript. With the release of Firefox 60 in May, all…</em>hacks.mozilla.org</td>\n<td>Understanding ES6 Modules - SitePoint<em>Almost every language has a concept of modules - a way to include functionality declared in one file within another…</em>www.sitepoint.com</td>\n<td>An overview of ES6 Modules in JavaScript<em>Introduction Until recently if you wanted to take full advantage of modules in JavaScript you needed to make use of…</em>blog.cloud66.com</td>\n<td>ES6 Modules in Depth<em>Welcome back to ES6 - “Oh, good. It’s not another article about Unicode” - in Depth series. If you’ve never been around…</em>ponyfoo.com</td>\n</tr>\n<tr>\n<td>How JavaScript works: Event loop and the rise of Async programming + 5 ways to better coding with…<em>Welcome to post # 4 of the series dedicated to exploring JavaScript and its building components. In the process of…</em>blog.sessionstack.com</td>\n<td>Tasks, microtasks, queues and schedules<em>Edit description</em>jakearchibald.com</td>\n<td>Visualising the JavaScript Event Loop with a Pizza Restaurant analogy<em>Consider a pizza restaurant. There are two types of orders that we currently have from a single customer - one is an…</em>dev.to</td>\n<td>✨♻️ JavaScript Visualized: Event Loop<em>Oh boi the event loop. It’s one of those things that every JavaScript developer has to deal with in one way or another…</em>dev.to</td>\n<td>Scheduling: setTimeout and setInterval<em>Edit description</em>javascript.info</td>\n</tr>\n<tr>\n<td>Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code<em>Before diving deep into the core of Chrome’s V8, first, let’s get our fundamentals down. All of our systems consist of…</em>medium.freecodecamp.org</td>\n<td>Understanding V8’s Bytecode<em>V8 is Google’s open source JavaScript engine. Chrome, Node.js, and many other applications use V8. This article…</em>medium.com</td>\n<td>A Brief History of Google’s V8 JavaScript Engine<em>Javascript has a reputation in developer circles as a terrible language. It’s classless, loosely typed, and plagued by…</em>www.mediacurrent.com</td>\n<td>JavaScript essentials: why you should know how the engine works<em>This article is also available in Spanish.</em>medium.freecodecamp.org</td>\n<td>JavaScript engine fundamentals: Shapes and Inline Caches<em>This article describes some key fundamentals that are common to all JavaScript engines - and not just V8, the engine…</em>mathiasbynens.be</td>\n</tr>\n<tr>\n<td>JavaScript engine fundamentals: optimizing prototypes<em>This article describes some key fundamentals that are common to all JavaScript engines - and not just V8, the engine…</em>mathiasbynens.be</td>\n<td>Elements kinds in V8<em>Note: If you prefer watching a presentation over reading articles, then enjoy the video below! JavaScript objects can…</em>v8.dev</td>\n<td>Programming with JS: Bitwise Operations<em>In this series of articles we take a look at different Computer Science topics from the prism of JavaScript. We’ve…</em>hackernoon.com</td>\n<td>Using JavaScript’s Bitwise Operators in Real Life<em>Let’s pretend we’re machine code programmers!</em>codeburst.io</td>\n<td>JavaScript Bitwise Operators - w3resource<em>Bitwise operators perform an operation on the bitwise (0,1) representation of their arguments, rather than as decimal…</em>www.w3resource.com</td>\n</tr>\n<tr>\n<td>JavaScript DOM Tutorial with Example<em>Details JavaScript can access all the elements in a webpage making use of Document Object Model (DOM). In fact, the web…</em>www.guru99.com</td>\n<td>What is the DOM?<em>A reader recently wrote in asking me what the DOM was. They said they’ve heard it mentioned and alluded to, but aren’t…</em>css-tricks.com</td>\n<td>Traversing the DOM with JavaScript<em>A good JavaScript developer needs to know how to traverse the DOM-it’s the act of selecting an element from another…</em>zellwk.com</td>\n<td>DOM tree<em>The backbone of an HTML document is tags. According to the Document Object Model (DOM), every HTML tag is an object…</em>javascript.info</td>\n<td>How to traverse the DOM in JavaScript<em>Learn how to navigate your way through the DOM tree.</em>javascript.plainenglish.io</td>\n</tr>\n<tr>\n<td>A Vanilla JS Guide On Mastering the DOM<em>Note: The contents of this post are intended to be introductory and does not include use of any libraries like jQuery…</em>dev.to</td>\n<td>How To Use Classes in JavaScript DigitalOcean<em>JavaScript is a prototype-based language, and every object in JavaScript has a hidden internal property called…</em>www.digitalocean.com</td>\n<td>Javascript Classes — Under The Hood<em>Javascript classes are nothing but a syntactic sugar over existing prototype based inheritance and constructor…</em>medium.com</td>\n<td>ES6 Classes - JavaScript January<em>Object-Oriented Programming (OOP) can be a great way to organize your projects. Introduced with ES6, the javascript…</em>www.javascriptjanuary.com</td>\n<td>Practical Ways to Write Better JavaScript<em>Solid methods of improving your JS. Tagged with javascript, webdev, beginners, react.</em>dev.to</td>\n</tr>\n<tr>\n<td>Better JavaScript with ES6, Pt. II: A Deep Dive into Classes<em>Out with the Old, In with the new Let’s be clear about one thing from the start: Under the hood, ES6 classes are not…</em>scotch.io</td>\n<td>Understand the Factory Design Pattern in plain javascript<em>The simplest way to understand Factory Design Pattern</em>medium.com</td>\n<td>Factory Functions in JavaScript Aten Design Group<em>As we move from an age of jQuery plugins and script drop-ins to a world of CommonJS and modular architectures it’s…</em>atendesigngroup.com</td>\n<td>The Factory Pattern in JS ES6<em>I’m trying to get the most out of all the new things in ES6 (ES2015). And I’m writing a new library where I need a…</em>medium.com</td>\n<td>Class vs Factory function: exploring the way forward<em>ECMAScript 2015 (aka ES6) comes with the class syntax, so now we have two competing patterns for creating objects. In…</em>medium.freecodecamp.org</td>\n</tr>\n<tr>\n<td>Prototype in Javascript Codementor<em>By default every function has a property name as prototype which is EMPTY ( by default). We can add properties and…</em>www.codementor.io</td>\n<td>Prototypes in JavaScript<em>In this post, we will discuss what are prototypes in JavaScript, how they help JavaScript in achieving the concepts of…</em>betterprogramming.pub</td>\n<td>Prototype in JavaScript: it’s quirky, but here’s how it works<em>The following four lines are enough to confuse most JavaScript developers:</em>medium.freecodecamp.org</td>\n<td>Understanding JavaScript: Prototype and Inheritance<em>Due to the amazing quantity of libraries, tools and all kinds of things that make your development easier, a lot of…</em>hackernoon.com</td>\n<td>Understanding Classes (ES5) and Prototypal Inheritance in JavaScript<em>In a nutshell the above snippet creates a Person class that can have multiple instances. By convention functional…</em>dev.to</td>\n</tr>\n<tr>\n<td>_Master JavaScript Prototypes &#x26; _Inheritance__\\ Inheritancecodeburst.io</td>\n<td>JavaScript’s Prototypal Inheritance Explained Using CSS<em>Prototypal inheritance is arguably the least understood aspect of JavaScript. Well the good news is that if you…</em>medium.freecodecamp.org</td>\n<td>Demystifying ES6 Classes And Prototypal Inheritance<em>In the early history of the JavaScript language, a cloud of animosity formed over the lack of a proper syntax for…</em>scotch.io</td>\n<td>Intro To Prototypal Inheritance - JS<em>In this article I will try to give an introduction to protypal inheritance. As an “optional” pre-requisite, you can…</em>dev.to</td>\n<td>Let’s Build Prototypal Inheritance in JS<em>The idea for this post is pretty simple. I want to some extent build and with that, illustrate how prototypes work in…</em>dev.to</td>\n</tr>\n<tr>\n<td>Understanding Prototypal Inheritance In JavaScript<em>What Is Object-oriented Programming (OOP) Classical vs Prototypal Inheritance The Prototype Object And The Prototype…</em>dev.to</td>\n<td>Object.create() - JavaScript MDN<em>The Object.create() method creates a new object, using an existing object as the prototype of the newly created object…</em>developer.mozilla.org</td>\n<td>Object.assign() - JavaScript MDN<em>The Object.assign() method copies all enumerable own properties from one or more source objects to a target object. It…</em>developer.mozilla.org</td>\n<td>Object.create in JavaScript<em>The Object.create method is one of the methods to create a new object in JavaScript.</em>medium.com</td>\n<td>Javascript Objects A New Way to Create Objects HTML Goodies<em>There are a lot of ways to create Objects in JavaScript, perhaps even more to integrate inheritance into them. Just…</em>www.htmlgoodies.com</td>\n</tr>\n<tr>\n<td>JavaScript Object Creation: Patterns and Best Practices - SitePoint<em>Jeff Mott guides you through a step-by-step approach to JavaScript object creation - from object literals to factory…</em>www.sitepoint.com</td>\n<td>Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty …<em>This post is a sort of grab bag to help you explore a few very useful methods to help you manage your objects in…</em>alligator.io</td>\n<td>Copying Objects in JavaScript DigitalOcean<em>Objects are the fundamental blocks of JavaScript. An object is a collection of properties, and a property is an…</em>scotch.io</td>\n<td>JavaScript: Object.assign()<em>Veja nesse artigo como utilizar o Object.assign() do ECMAScript 6</em>codeburst.io</td>\n<td>How to deep clone a JavaScript object<em>Copying objects in JavaScript can be tricky. Some ways perform a shallow copy, which is the default behavior in most of…</em>flaviocopes.com</td>\n</tr>\n<tr>\n<td>How to Use Map, Filter, and Reduce in JavaScript<em>Functional programming has been making quite a splash in the development world these days. And for good reason…</em>code.tutsplus.com</td>\n<td>JavaScript — Learn to Chain Map, Filter, and Reduce<em>Learn how to chain map, filter, and reduce in JavaScript</em>codeburst.io</td>\n<td>Understanding map, filter and reduce in Javascript<em>When working on Javascript projects you inevitably come across situations where you have to do some data manipulation…</em>hackernoon.com</td>\n<td>Functional Programming in JS: map, filter, reduce (Pt. 5)<em>Note: This is part of the “Javascript and Functional Programming” series on learning functional programming techniques…</em>hackernoon.com</td>\n<td>JavaScript: Map, Filter, Reduce<em>JavaScript’s built-in map, filter, and reduce array methods are invaluable to a modern JavaScript developer. First…</em>wsvincent.com</td>\n</tr>\n<tr>\n<td>A simple guide to help you understand closures in JavaScript<em>Closures in JavaScript are one of those concepts that many struggle to get their heads around. In the following…</em>medium.freecodecamp.org</td>\n<td>Understanding JavaScript Closures: A Practical Approach<em>Learning a new language involves a series of steps, whereas its mastery is a product of patience, practice, mistakes…</em>scotch.io</td>\n<td>Understanding JavaScript: Closures<em>Why learn JavaScript in depth?</em>hackernoon.com</td>\n<td>How to use JavaScript closures with confidence<em>Using closures will be a piece of (chocolate) cake</em>hackernoon.com</td>\n<td>JavaScript Closures by Example<em>At some point you may have run into a problem when executing functions from within a for loop. The first time it…</em>howchoo.com</td>\n</tr>\n<tr>\n<td>Higher-Order Functions :: Eloquent JavaScript<em>Tzu-li and Tzu-ssu were boasting about the size of their latest programs. ‘Two-hundred thousand lines,’ said Tzu-li…</em>eloquentjavascript.net</td>\n<td>Higher-Order Functions in JavaScript - SitePoint<em>Continuing his look at functional programming in JavaScript, M. David Green examines higher-order functions and how…</em>www.sitepoint.com</td>\n<td>Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code<em>Higher order functions can help you to step up your JavaScript game by making your code more declarative. That is…</em>medium.freecodecamp.org</td>\n<td>First-class and Higher Order Functions: Effective Functional JavaScript<em>Functions: the killer JavaScript feature we never talk about.</em>hackernoon.com</td>\n<td>Higher Order Functions in JavaScript<em>Higher-order functions can be intimidating at first, but they’re not that hard to learn. A higher-order function is…</em>www.lullabot.com</td>\n</tr>\n<tr>\n<td>ES6 Promises: Patterns and Anti-Patterns<em>When I first got started with NodeJS a few years ago, I was mortified by what is now affectionately known as \"callback…</em>medium.com</td>\n<td>A Simple Guide to ES6 Promises<em>The woods are lovely, dark and deep. But I have promises to keep, and miles to go before I sleep. — Robert Frost</em>codeburst.io</td>\n<td>The ES6 Promises<em>A very helpful feature in ES6</em>codeburst.io</td>\n<td>ES6 Promises in Depth<em>Promises are a very involved paradigm, so we’ll take it slow. Here’s a table of contents with the topics we’ll cover in…</em>ponyfoo.com</td>\n<td>Javascript Promises: An In-Depth Approach<em>“Write down the syntax for promises on this sheet of paper”, is enough to give nightmares to a lot of junior and even…</em>codeburst.io</td>\n</tr>\n<tr>\n<td>Promises - JavaScript concepts<em>This is part of a series where I try to explain through each of 33 JS Concepts. This part corresponds to Promises…</em>dev.to</td>\n<td>Javascript Promise 101<em>Knowing how Promise works in javascript will boost your development skill exponentially. Here I will share: I promise…</em>dev.to</td>\n<td>Simplify JavaScript Promises<em>I love promises. Not from people, but from JavaScript. Tweet Quote I love promises. Not from people, but from…</em>dev.to</td>\n<td>The Lowdown on Promises<em>A quick and concise guide on how Promises work in JavaScript</em>medium.com</td>\n<td>⭐️🎀 JavaScript Visualized: Promises &#x26; Async/Await<em>Ever had to deal with JS code that just… didn’t run the way you expected it to? Maybe it seemed like functions got…</em>dev.to</td>\n</tr>\n<tr>\n<td>How to escape async/await hell<em>async/await freed us from callback hell, but people have started abusing it — leading to the birth of async/await hell.</em>medium.freecodecamp.org</td>\n<td>Understanding JavaScript’s async await<em>Let’s suppose we had code like the following. Here I’m wrapping an HTTP request in a Promise. The promise fulfills with…</em>ponyfoo.com</td>\n<td>JavaScript Async/Await: Serial, Parallel and Complex Flow - TechBrij<em>If you have experience on ASP.NET MVC then probably you are familiar with async/await keywords in C#. The same thing is…</em>techbrij.com</td>\n<td>From JavaScript Promises to Async/Await: why bother?<em>In this tutorial, we will cover why we need async/await when we could achieve the same fit with JavaScript Promises, to…</em>blog.pusher.com</td>\n<td>Flow Control in Modern JS: Callbacks to Promises to Async/Await - SitePoint<em>JavaScript is regularly claimed to be asynchronous. What does that mean? How does it affect development? How has the…</em>www.sitepoint.com</td>\n</tr>\n<tr>\n<td>Time Complexity Analysis in JavaScript<em>An algorithm is a self-contained step-by-step set of instructions to solve a problem. It takes time for these steps to…</em>www.jenniferbland.com</td>\n<td>Algorithms in plain English: time complexity and Big-O notation<em>Every good developer has time on their mind. They want to give their users more of it, so they can do all those things…</em>medium.freecodecamp.org</td>\n<td>An Introduction to Big O Notation<em>Big O notation is a big topic, and its universal importance stems from the fact that it describes the efficiency of…</em>dev.to</td>\n<td>[Crizstian/data-structure-and-algorithms-with-ES6<em>Num Type Exercises Description 10.- Graph Data Structure 2 A graph consists of a set of vertices and a set of edges. A…</em>github.com](<a href=\"https://github.com/Crizstian/data-structure-and-algorithms-with-ES6\">https://github.com/Crizstian/data-structure-and-algorithms-with-ES6</a> \"<a href=\"https://github.com/Crizs\">https://github.com/Crizs</a></td>\n<td></td>\n</tr>\n</tbody>\n</table>"},{"url":"/docs/audio/dfft/","relativePath":"docs/audio/dfft.md","relativeDir":"docs/audio","base":"dfft.md","name":"dfft","frontmatter":{"title":"Discrete Fast Fourier Transform","weight":0,"excerpt":"Fast Fourier Transform","seo":{"title":"fft","description":"The discrete Fourier transform operates on sampled data,\nin contrast to the standard Fourier transform which is\ndefined for continuous functions.","robots":[],"extra":[{"name":"og:description","value":"The discrete Fourier transform operates on sampled data,\nin contrast to the standard Fourier transform which is\ndefined for continuous functions.","keyName":"property","relativeUrl":false},{"name":"og:image","value":"images/fft.jpg","keyName":"property","relativeUrl":true},{"name":"og:title","value":"Fast Fourier Transform","keyName":"property","relativeUrl":false}],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h1>Frequency and the fast Fourier transform</h1>\n<blockquote>\n<p>If you want to find the secrets of the universe, think in terms of energy,\nfrequency and vibration.</p>\n<p>— Nikola Tesla</p>\n</blockquote>\n<p><em>This chapter was written in collaboration with SW's father, PW van der Walt.</em></p>\n<h2>Introducing frequency</h2>\n<p>We'll start by setting up some plotting styles and importing the usual\nsuspects:</p>\n<pre><code class=\"language-python\"># Make plots appear inline, set custom plotting style\n%matplotlib inline\nimport matplotlib.pyplot as plt\nplt.style.use('style/elegant.mplstyle')\n</code></pre>\n<pre><code class=\"language-python\">import numpy as np\n</code></pre>\n<p>The discrete<sup id=\"fnref-discrete\"><a href=\"#fn-discrete\" class=\"footnote-ref\">discrete</a></sup> Fourier transform (DFT) is a mathematical technique\nto convert temporal or spatial data into <em>frequency domain</em> data.\n<em>Frequency</em> is a familiar concept, due to its colloquial occurrence in\nthe English language: the lowest notes your headphones can rumble out\nare around 20 Hertz, whereas middle C on a piano lies around 261.6\nHertz. Hertz (Hz), or oscillations per second, in this case literally\nrefers to the number of times per second at which the membrane inside\nthe headphone moves to-and-fro. That, in turn, creates compressed\npulses of air which, upon arrival at your eardrum, induces a vibration\nat the same frequency. So, if you take a simple periodic function, $\\sin(10 \\times 2 \\pi t)$, you can view it as a wave:</p>\n<pre><code class=\"language-python\">f = 10  # Frequency, in cycles per second, or Hertz\nf_s = 100  # Sampling rate, or number of measurements per second\n\nt = np.linspace(0, 2, 2 * f_s, endpoint=False)\nx = np.sin(f * 2 * np.pi * t)\n\nfig, ax = plt.subplots()\nax.plot(t, x)\nax.set_xlabel('Time [s]')\nax.set_ylabel('Signal amplitude');\n</code></pre>\n<!-- caption text=\"A simple periodic function in time\" -->\n<p>Or you can equivalently think of it as a repeating signal of\n<em>frequency</em> 10 Hertz (it repeats once every $1/10$ seconds—a length of\ntime we call its <em>period</em>). Although we naturally associate frequency\nwith time, it can equally well be applied to space. E.g., a\nphoto of a textile patterns exhibits high <em>spatial frequency</em>, whereas\nthe sky or other smooth objects have low spatial frequency.</p>\n<p>Let us now examine our sinusoid through application of the discrete Fourier\ntransform:</p>\n<pre><code class=\"language-python\">from scipy import fftpack\n\nX = fftpack.fft(x)\nfreqs = fftpack.fftfreq(len(x)) * f_s\n\nfig, ax = plt.subplots()\n\nax.stem(freqs, np.abs(X))\nax.set_xlabel('Frequency in Hertz [Hz]')\nax.set_ylabel('Frequency Domain (Spectrum) Magnitude')\nax.set_xlim(-f_s / 2, f_s / 2)\nax.set_ylim(-5, 110)\n</code></pre>\n<!-- caption text=\"Frequencies that make up our periodic signal above\" -->\n<p>We see that the output of the FFT is a one-dimensional array of the\nsame shape as the input, containing complex values. All values are\nzero, except for two entries. Traditionally, we visualize the\nmagnitude of the result as a <em>stem plot</em>, in which the height of each\nstem corresponds to the underlying value.</p>\n<p>(We explain why you see positive and negative frequencies later on\nin the sidebox titled \"Discrete Fourier transforms\". You may also\nrefer to that section for a more in-depth overview of the underlying\nmathematics.)</p>\n<p>The Fourier transform takes us from the <em>time</em> to the <em>frequency</em>\ndomain, and this turns out to have a massive number of applications.\nThe <em>fast Fourier transform</em> is an algorithm for computing the\ndiscrete Fourier transform; it achieves its high speed by storing and\nre-using results of computations as it progresses.</p>\n<p>In this chapter, we examine a few applications of the discrete Fourier\ntransform to demonstrate that the FFT can be applied to\nmultidimensional data (not just 1D measurements) to achieve a variety\nof goals.</p>\n<h2>Illustration: a birdsong spectrogram</h2>\n<p>Let's start with one of the most common applications, converting a sound signal (consisting of variations of air pressure over time) to a <em>spectrogram</em>.\nYou might have seen spectrograms on your music player's equalizer view, or even on an old-school stereo.</p>\n<p><img src=\"../images/sergey_gerasimuk_numark-eq-2600-IMG_0236.JPG\" alt=\"The Numark EQ2600 Stereo Equalizer; image used with permission from the author, Sergey Gerasimuk. Source: http://sgerasimuk.blogspot.com/2014/06/numark-eq-2600-10-band-stereo-graphic.html\"></p>\n<p>Listen to the following snippet of nightingale birdsong (released under CC BY 4.0 at\n<a href=\"http://www.orangefreesounds.com/nightingale-sound/\">http://www.orangefreesounds.com/nightingale-sound/</a>):</p>\n<pre><code class=\"language-python\">from IPython.display import Audio\nAudio('data/nightingale.wav')\n</code></pre>\n<p>If you are reading the paper version of this book, you'll have to use\nyour imagination! It goes something like this:\nchee-chee-woorrrr-hee-hee cheet-wheet-hoorrr-chi\nrrr-whi-wheo-wheo-wheo-wheo-wheo-wheo.</p>\n<p>Since we realise that not everyone is fluent in bird-speak, perhaps\nit's best if we visualize the measurements—better known as \"the\nsignal\"—instead.</p>\n<p>We load the audio file, which gives us\nthe sampling rate (number of measurements per second) as well as audio\ndata as an <code>(N, 2)</code> array—two columns because this is a stereo\nrecording.</p>\n<pre><code class=\"language-python\">from scipy.io import wavfile\n\nrate, audio = wavfile.read('data/nightingale.wav')\n</code></pre>\n<p>We convert to mono by averaging the left and right channels.</p>\n<pre><code class=\"language-python\">audio = np.mean(audio, axis=1)\n</code></pre>\n<p>Then, calculate the length of the snippet and plot the audio.</p>\n<pre><code class=\"language-python\">N = audio.shape[0]\nL = N / rate\n\nprint(f'Audio length: {L:.2f} seconds')\n\nf, ax = plt.subplots()\nax.plot(np.arange(N) / rate, audio)\nax.set_xlabel('Time [s]')\nax.set_ylabel('Amplitude [unknown]');\n</code></pre>\n<!-- caption text=\"Audio waveform plot of birdsong\" -->\n<p>Well, that's not very satisfying, is it? If I sent this voltage to a\nspeaker, I might hear a bird chirping, but I can't very well imagine\nhow it would sound like in my head. Is there a better way of <em>seeing</em>\nwhat is going on?</p>\n<p>There is, and it is called the discrete Fourier transform, where\ndiscrete refers to the recording consisting of time-spaced sound\nmeasurements, in contrast to a continual recording as, e.g., on\nmagnetic tape (remember casettes?). The discrete Fourier\ntransform is often computed using the <em>fast Fourier transform</em> (FFT)\nalgorithm, a name informally used to refer to the DFT itself. The\nDFT tells us which frequencies or \"notes\" to expect in our signal.</p>\n<p>Of course, a bird sings many notes throughout the song, so we'd also\nlike to know <em>when</em> each note occurs. The Fourier transform takes a\nsignal in the time domain (i.e., a set of measurements over time) and\nturns it into a spectrum—a set of frequencies with corresponding\n(complex<sup id=\"fnref-complex\"><a href=\"#fn-complex\" class=\"footnote-ref\">complex</a></sup>) values. The spectrum does not contain any information about\ntime! <sup id=\"fnref-time\"><a href=\"#fn-time\" class=\"footnote-ref\">time</a></sup></p>\n<p>So, to find both the frequencies and the time at which they were sung,\nwe'll need to be somewhat clever. Our strategy is as follows:\ntake the audio signal, split it into small, overlapping slices, and\napply the Fourier transform to each (a technique known as the Short\nTime Fourier Transform).</p>\n<p>We'll split the signal into slices of 1024 samples—that's about 0.02\nseconds of audio. Why we choose 1024 and not 1000 we'll explain in a\nsecond when we examine performance. The slices will overlap by 100\nsamples as shown here:</p>\n<p><img src=\"../figures/generated/sliding_window.png\" alt=\"A sliding window operation\"></p>\n<p>Start by chopping up the signal into slices of 1024 samples, each\nslice overlapping the previous by 100 samples. The resulting <code>slices</code>\nobject contains one slice per row.</p>\n<pre><code class=\"language-python\">from skimage import util\n\nM = 1024\n\nslices = util.view_as_windows(audio, window_shape=(M,), step=100)\nprint(f'Audio shape: {audio.shape}, Sliced audio shape: {slices.shape}')\n</code></pre>\n<p>Generate a windowing function (see the section on windowing for a\ndiscussion of the underlying assumptions and interpretations of each)\nand multiply it with the signal:</p>\n<pre><code class=\"language-python\">win = np.hanning(M + 1)[:-1]\nslices = slices * win\n</code></pre>\n<p>It's more convenient to have one slice per column, so we take the transpose:</p>\n<pre><code class=\"language-python\">slices = slices.T\nprint('Shape of `slices`:', slices.shape)\n</code></pre>\n<p>For each slice, calculate the discrete Fourier transform. The DFT\nreturns both positive and negative frequencies (more on that in\n\"Frequencies and their ordering\"), so we slice out the positive M / 2\nfrequencies for now.</p>\n<pre><code class=\"language-python\">spectrum = np.fft.fft(slices, axis=0)[:M // 2 + 1:-1]\nspectrum = np.abs(spectrum)\n</code></pre>\n<p>(As a quick aside, you'll note that we use <code>scipy.fftpack.fft</code> and\n<code>np.fft</code> interchangeably. NumPy provides basic FFT functionality,\nwhich SciPy extends further, but both include an <code>fft</code> function, based\non the Fortran FFTPACK.)</p>\n<p>The spectrum can contain both very large and very small values.\nTaking the log compresses the range significantly.</p>\n<p>Here we do a log plot of the ratio of the signal divided by the maximum signal.\nThe specific unit used for the ratio is the decibel, $20\nlog_{10}\\left(\\mathrm{amplitude ratio}\\right)$.</p>\n<pre><code class=\"language-python\">f, ax = plt.subplots(figsize=(4.8, 2.4))\n\nS = np.abs(spectrum)\nS = 20 * np.log10(S / np.max(S))\n\nax.imshow(S, origin='lower', cmap='viridis',\n          extent=(0, L, 0, rate / 2 / 1000))\nax.axis('tight')\nax.set_ylabel('Frequency [kHz]')\nax.set_xlabel('Time [s]');\n</code></pre>\n<!-- caption text=\"Birdsong spectrogram\" -->\n<p>Much better! We can now see the frequencies vary over time, and it\ncorresponds to the way the audio sounds. See if you can match my\nearlier description: chee-chee-woorrrr-hee-hee cheet-wheet-hoorrr-chi\nrrr-whi-wheo-wheo-wheo-wheo-wheo-wheo (I didn't transcribe the section\nfrom 3 to 5 seconds—that's another bird).</p>\n<p>SciPy already includes an implementation of this\nprocedure as <code>scipy.signal.spectrogram</code>, which can be invoked as\nfollows:</p>\n<pre><code class=\"language-python\">from scipy import signal\n\nfreqs, times, Sx = signal.spectrogram(audio, fs=rate, window='hanning',\n                                      nperseg=1024, noverlap=M - 100,\n                                      detrend=False, scaling='spectrum')\n\nf, ax = plt.subplots(figsize=(4.8, 2.4))\nax.pcolormesh(times, freqs / 1000, 10 * np.log10(Sx), cmap='viridis')\nax.set_ylabel('Frequency [kHz]')\nax.set_xlabel('Time [s]');\n</code></pre>\n<!-- caption text=\"SciPy built-in rendition of birdsong spectrogram\" -->\n<p>The only differences are that SciPy returns the spectrum magnitude\nsquared (which turns measured voltage into measured energy), and\nmultiplies it by some normalization factors<sup id=\"fnref-scaling\"><a href=\"#fn-scaling\" class=\"footnote-ref\">scaling</a></sup>.</p>\n<h2>History</h2>\n<p>Tracing the exact origins of the Fourier transform is tricky. Some\nrelated procedures go as far back as Babylonian times, but it was the\nhot topics of calculating asteroid orbits and solving the heat (flow)\nequation that led to several breakthroughs in the early 1800s. Whom\nexactly among Clairaut, Lagrange, Euler, Gauss and D'Alembert we\nshould thank is not exactly clear, but Gauss was the first to describe\nthe fast Fourier transform (an algorithm for computing the discrete\nFourier transform, popularized by Cooley and Tukey in 1965). Joseph\nFourier, after whom the transform is named, first claimed that\n<em>arbitrary</em> periodic <sup id=\"fnref-periodic\"><a href=\"#fn-periodic\" class=\"footnote-ref\">periodic</a></sup> functions can be expressed as a sum of\ntrigonometric functions.</p>\n<h2>Implementation</h2>\n<p>The discrete Fourier transform functionality in SciPy lives in the\n`scipy.fftpack<code></code> module. Among other things, it provides the\nfollowing DFT-related functionality:</p>\n<ul>\n<li><code>fft</code>, <code>fft2</code>, <code>fftn</code>: Compute the discrete Fourier transform using\nthe Fast Fourier Transform algorithm in 1, 2, or <code>n</code> dimensions.</li>\n<li><code>ifft</code>, <code>ifft2</code>, <code>ifftn</code>: Compute the inverse of the DFT</li>\n<li><code>dct</code>, <code>idct</code>, <code>dst</code>, <code>idst</code>: Compute the cosine and sine transforms, and their inverses.</li>\n<li><code>fftshift</code>, <code>ifftshift</code>: Shift the zero-frequency component to the center of the spectrum and back, respectively (more about that soon).</li>\n<li><code>fftfreq</code>: Return the discrete Fourier transform sample frequencies.</li>\n<li><code>rfft</code>: Compute the DFT of a real sequence, exploiting the symmetry of the resulting spectrum for increased performance. Also used by <code>fft</code> internally when applicable.</li>\n</ul>\n<p>This is complemented by the following functions in NumPy:</p>\n<ul>\n<li><code>np.hanning</code>, <code>np.hamming</code>, <code>np.bartlett</code>, <code>np.blackman</code>,\n<code>np.kaiser</code>: Tapered windowing functions.</li>\n</ul>\n<p>It is also used to perform fast convolutions of large inputs by\n<code>scipy.signal.fftconvolve</code>.</p>\n<p>SciPy wraps the Fortran FFTPACK library—it is not the fastest out\nthere, but unlike packages such as FFTW, it has a permissive free\nsoftware license.</p>\n<h2>Choosing the length of the discrete Fourier transform (DFT)</h2>\n<p>A naive calculation of the DFT takes $\\mathcal{O}\\left(N^2\\right)$ operations <sup id=\"fnref-big_o\"><a href=\"#fn-big_o\" class=\"footnote-ref\">big_o</a></sup>.\nHow come? Well, you have $N$\n(complex) sinusoids of different frequencies ($2 \\pi f \\times 0, 2 \\pi f \\times\n1, 2 \\pi f \\times 3, ..., 2 \\pi f \\times (N - 1)$), and you want to see how\nstrongly your signal corresponds to each. Starting with the first,\nyou take the dot product with the signal (which, in itself, entails $N$\nmultiplication operations). Repeating this operation $N$ times, once\nfor each sinusoid, then gives $N^2$ operations.</p>\n<p>Now, contrast that with the fast Fourier transform, which is $\\mathcal{O}\\left(N \\log N\\right)$ in\nthe ideal case due to the clever re-use of\ncalculations—a great improvement! However, the classical Cooley-Tukey\nalgorithm implemented in FFTPACK (and used by SciPy) recursively breaks up the transform\ninto smaller (prime-sized) pieces and only shows this improvement for\n\"smooth\" input lengths (an input length is considered smooth when its\nlargest prime factor is small). For large prime-sized pieces, the\nBluestein or Rader algorithms can be used in conjunction with the\nCooley-Tukey algorithm, but this optimization is not implemented in\nFFTPACK.<sup id=\"fnref-fast\"><a href=\"#fn-fast\" class=\"footnote-ref\">fast</a></sup></p>\n<p>Let us illustrate:</p>\n<pre><code class=\"language-python\">import time\n\nfrom scipy import fftpack\nfrom sympy import factorint\n\nK = 1000\nlengths = range(250, 260)\n\n# Calculate the smoothness for all input lengths\nsmoothness = [max(factorint(i).keys()) for i in lengths]\n\n\nexec_times = []\nfor i in lengths:\n    z = np.random.random(i)\n\n    # For each input length i, execute the FFT K times\n    # and store the execution time\n\n    times = []\n    for k in range(K):\n        tic = time.monotonic()\n        fftpack.fft(z)\n        toc = time.monotonic()\n        times.append(toc - tic)\n\n    # For each input length, remember the *minimum* execution time\n    exec_times.append(min(times))\n\n\nf, (ax0, ax1) = plt.subplots(2, 1, sharex=True)\nax0.stem(lengths, np.array(exec_times) * 10**6)\nax0.set_ylabel('Execution time (µs)')\n\nax1.stem(lengths, smoothness)\nax1.set_ylabel('Smoothness of input length\\n(lower is better)')\nax1.set_xlabel('Length of input');\n</code></pre>\n<!-- caption text=\"FFT execution time vs smoothness for different input lengths\" -->\n<p>The intuition is that, for smooth input lengths, the FFT can be broken up\ninto many small pieces. After performing the FFT on the first piece,\nthose results can be reused in subsequent computations. This explains\nwhy we chose a length of 1024 for our audio slices earlier—it has a\nsmoothness of only 2, resulting in the optimal \"radix-2 Cooley-Tukey\"\nalgorithm, which computes the FFT using only $(N/2) \\log_2 N = 5120$ complex\nmultiplications, instead of $N^2 = 1048576$. Choosing $N = 2^m$\nalways ensures a maximally smooth $N$ (and, thus, the fastest FFT).</p>\n<h2>More discrete Fourier transform concepts</h2>\n<p>Next, we present a couple of common concepts worth knowing before\noperating heavy Fourier transform machinery, whereafter we tackle\nanother real-world problem: analyzing target detection in radar data.</p>\n<h3>Frequencies and their ordering</h3>\n<p>For historical reasons, most implementations return an array where\nfrequencies vary from low-to-high-to-low (see the box \"Discrete\nFourier transforms\" for further explanation of frequencies). E.g., when we do the real\nFourier transform of a signal of all ones, an input that has no\nvariation and therefore only has the slowest, constant Fourier\ncomponent (also known as the \"DC\" or Direct Current component—just\nelectronics jargon for \"mean of the signal\"), we see this DC component\nappearing as the first entry:</p>\n<pre><code class=\"language-python\">from scipy import fftpack\nN = 10\n\nfftpack.fft(np.ones(N))  # The first component is np.mean(x) * N\n</code></pre>\n<p>When we try the FFT on a rapidly changing signal, we see a high\nfrequency component appear:</p>\n<pre><code class=\"language-python\">z = np.ones(10)\nz[::2] = -1\n\nprint(f'Applying FFT to {z}')\nfftpack.fft(z)\n</code></pre>\n<p>Note that the FFT returns a complex spectrum which, in the case of\nreal inputs, is conjugate symmetrical (i.e., symmetric in the real\npart, and anti-symmetric in the imaginary part):</p>\n<pre><code class=\"language-python\">x = np.array([1, 5, 12, 7, 3, 0, 4, 3, 2, 8])\nX = fftpack.fft(x)\n\nwith np.printoptions(precision=2):\n    print(\"Real part:     \", X.real)\n    print(\"Imaginary part:\", X.imag)\n</code></pre>\n<p>(And, again, recall that the first component is <code>np.mean(x) * N</code>.)</p>\n<p>The <code>fftfreq</code> function tells us which frequencies we are looking at\nspecifically:</p>\n<pre><code class=\"language-python\">fftpack.fftfreq(10)\n</code></pre>\n<p>The result tells us that our maximum component occured at a frequency\nof 0.5 cycles per sample. This agrees with the input, where a\nminus-one-plus-one cycle repeated every second sample.</p>\n<p>Sometimes, it is convenient to view the spectrum organized slightly\ndifferently, from high-negative to low to-high-positive (for now, we\nwon't dive too deeply into the concept of negative frequency, other\nthan saying a real-world sine wave is produced by a combination of\npositive and negative frequencies). We re-shuffle the spectrum using\nthe <code>fftshift</code> function.</p>\n<blockquote>\n<p><strong>Discrete Fourier transforms {.callout}</strong></p>\n<p>The Discrete Fourier Transform (DFT) converts a sequence of $N$\nequally spaced real or complex samples $x<em>{0},x</em>{1},\\ldots, x<em>{N-1}$ of\na function $x(t)$ of time (or another variable, depending on the\napplication) into a sequence of $N$ complex numbers $X</em>{k}$ by the\nsummation</p>\n<p>$$\nX<em>{k}=\\sum</em>{n=0}^{N-1}x_{n}e^{-j2\\pi kn/N},;k=0,1,\\ldots,\nN-1.\n$$</p>\n<p>With the numbers $X<em>{k}$ known, the inverse DFT _exactly</em> recovers the\nsample values $x_{n}$ through the summation</p>\n<p>$$x<em>{n}=\\frac{1}{N}\\sum</em>{k=0}^{N-1}X_{k}e^{j2\\pi kn/N}.$$</p>\n<p>Keeping in mind that $e^{j\\theta}=\\cos\\theta+j\\sin\\theta,$ the last\nequation shows that the DFT has decomposed the sequence $x<em>{n}$ into a\ncomplex discrete Fourier series with coefficients $X</em>{k}$. Comparing\nthe DFT with a continuous complex Fourier series</p>\n<p>$$x(t)=\\sum<em>{n=-\\infty}^{\\infty}c</em>{n}e^{jn\\omega_{0}t},$$</p>\n<p>the DFT is a <em>finite</em> series with $N$ terms defined at the equally\nspaced discrete instances of the <em>angle</em> $(\\omega<em>{0}t</em>{n})=2\\pi\\frac{k}{N}$\nin the interval $[0,2\\pi)$,\ni.e. <em>including</em> $0$ and <em>excluding</em> $2\\pi$.\nThis automatically normalizes the DFT so that time does\nnot appear explicitly in the forward or inverse transform.</p>\n<p>If the original function $x(t)$ is limited in frequency to less than\nhalf of the sampling frequency (the so-called <em>Nyquist frequency</em>),\ninterpolation between sample values produced by the inverse DFT will\nusually give a faithful reconstruction of $x(t)$. If $x(t)$ is <em>not</em>\nlimited as such, the inverse DFT can, in general, not be used to\nreconstruct $x(t)$ by interpolation. Note that this limit does not\nimply that there are <em>no</em> methods that can do such a\nreconstruction—see, e.g., compressed sensing, or finite rate of\ninnovation sampling.</p>\n<p>The function $e^{j2\\pi k/N}=\\left(e^{j2\\pi/N}\\right)^{k}=w^{k}$ takes on\ndiscrete values between $0$ and $2\\pi\\frac{N-1}{N}$ on the unit circle in\nthe complex plane. The function $e^{j2\\pi kn/N}=w^{kn}$ encircles the\norigin $n\\frac{N-1}{N}$ times, thus generating harmonics of the fundamental\nsinusoid for which $n=1$.</p>\n<p>The way in which we defined the DFT leads to a few subtleties\nwhen $n>\\frac{N}{2}$, for even $N$ <sup id=\"fnref-odd_n\"><a href=\"#fn-odd_n\" class=\"footnote-ref\">odd_n</a></sup>. The function $e^{j2\\pi kn/N}$ is plotted\nfor increasing values of $k$ in the figure below,\nfor the cases $n=1$ to $n=N-1$ for $N=16$. When $k$ increases from $k$\nto $k+1$, the angle increases by $\\frac{2\\pi n}{N}$. When $n=1$,\nthe step is $\\frac{2\\pi}{N}$. When $n=N-1$, the angle\nincreases by $2\\pi\\frac{N-1}{N}=2\\pi-\\frac{2\\pi}{N}$. Since $2\\pi$\nis precisely once around the circle, the step equates to $-\\frac{2\\pi}{N}$,\ni.e. in the direction of a negative\nfrequency. The components up to $N/2$ represent <em>positive</em> frequency\ncomponents, those above $N/2$ up to $N-1$ represent <em>negative</em>\nfrequencies. The angle increment for the component $N/2$\nfor $N$ even advances precisely halfway around the circle for\neach increment in $k$ and can therefore be interpreted as either a\npositive or a negative frequency. This component of the DFT represents\nthe Nyquist Frequency, i.e. half of the sampling frequency, and is\nuseful to orientate oneself when looking at DFT graphics.</p>\n<p>The FFT in turn is simply a special and highly efficient algorithm for\ncalculating the DFT. Whereas a straightforward calculation of the DFT\ntakes of the order of $N^{2}$ calculations to compute, the FFT\nalgorithm requires of the order $N\\log N$ calculations. The FFT was\nthe key to the wide-spread use of the DFT in real-time applications\nand was included in a list of the top $10$ algorithms of the $20^{th}$\ncentury by the IEEE journal Computing in Science &#x26; Engineering in the\nyear $2000$.</p>\n<p><img src=\"../figures/unit_circle_samples.png\" alt=\"Unit circle samples\"></p>\n</blockquote>\n<p>Let's examine the frequency components in a noisy image. Note that,\nwhile a static image has no time-varying component, its values do vary\nacross <em>space</em>. The DFT applies equally to either case.</p>\n<p>First, load and display the image:</p>\n<pre><code class=\"language-python\">from skimage import io\nimage = io.imread('images/moonlanding.png')\nM, N = image.shape\n\nf, ax = plt.subplots(figsize=(4.8, 4.8))\nax.imshow(image)\n\nprint((M, N), image.dtype)\n</code></pre>\n<!-- caption text=\"A noisy image of the moon landing\" -->\n<p>Do not adjust your monitor! The image you are seeing is real,\nalthough clearly distorted by either the measurement or transmission\nequipment.</p>\n<p>To examine the spectrum of the image, we use <code>fftn</code> (instead of <code>fft</code>)\nto compute the DFT, since it has more than one dimension. The\ntwo-dimensional FFT is equivalent to taking the 1-D FFT across rows\nand then across columns (or vice versa).</p>\n<pre><code class=\"language-python\">F = fftpack.fftn(image)\n\nF_magnitude = np.abs(F)\nF_magnitude = fftpack.fftshift(F_magnitude)\n</code></pre>\n<p>Again, we take the log of the spectrum to compress the range of\nvalues, before displaying:</p>\n<pre><code class=\"language-python\">f, ax = plt.subplots(figsize=(4.8, 4.8))\n\nax.imshow(np.log(1 + F_magnitude), cmap='viridis',\n          extent=(-N // 2, N // 2, -M // 2, M // 2))\nax.set_title('Spectrum magnitude');\n</code></pre>\n<!-- caption text=\"Spectrum of the noisy moon landing image (magnitude)\" -->\n<p>Note the high values around the origin (middle) of the spectrum—these\ncoefficients describe the low frequencies or smooth parts of the\nimage; a vague canvas of the photo. Higher frequency components,\nspread throughout the spectrum, fill in the edges and detail. Peaks\naround higher frequencies correspond to the periodic noise.</p>\n<p>From the photo, we can see that the noise (measurement artifacts) is\nhighly periodic, so we hope to remove it by zeroing out the\ncorresponding parts of the spectrum.</p>\n<p>The image with those peaks suppressed indeed looks quite different!</p>\n<pre><code class=\"language-python\"># Set block around center of spectrum to zero\nK = 40\nF_magnitude[M // 2 - K: M // 2 + K, N // 2 - K: N // 2 + K] = 0\n\n# Find all peaks higher than the 98th percentile\npeaks = F_magnitude &#x3C; np.percentile(F_magnitude, 98)\n\n# Shift the peaks back to align with the original spectrum\npeaks = fftpack.ifftshift(peaks)\n\n# Make a copy of the original (complex) spectrum\nF_dim = F.copy()\n\n# Set those peak coefficients to zero\nF_dim = F_dim * peaks.astype(int)\n\n# Do the inverse Fourier transform to get back to an image\n# Since we started with a real image, we only look at the real part of\n# the output.\nimage_filtered = np.real(fftpack.ifft2(F_dim))\n\nf, (ax0, ax1) = plt.subplots(2, 1, figsize=(4.8, 7))\nax0.imshow(fftpack.fftshift(np.log10(1 + np.abs(F_dim))), cmap='viridis')\nax0.set_title('Spectrum after suppression')\n\nax1.imshow(image_filtered)\nax1.set_title('Reconstructed image');\n</code></pre>\n<!-- caption text=\"Filtered moon landing image and its spectrum\" -->\n<h3>Windowing</h3>\n<p>If we examine the Fourier transform of a rectangular pulse, we see\nsignificant sidelobes in the spectrum:</p>\n<pre><code class=\"language-python\">x = np.zeros(500)\nx[100:150] = 1\n\nX = fftpack.fft(x)\n\nf, (ax0, ax1) = plt.subplots(2, 1, sharex=True)\n\nax0.plot(x)\nax0.set_ylim(-0.1, 1.1)\n\nax1.plot(fftpack.fftshift(np.abs(X)))\nax1.set_ylim(-5, 55);\n</code></pre>\n<!-- caption text=\"Spectrum of a rectangular pulse (magnitude)\" -->\n<p>In theory, you would need a combination of infinitely many sinusoids\n(frequencies) to represent any abrupt transition; the coefficients would\ntypically have the same sidelobe structure as seen here for the pulse.</p>\n<p>Importantly, the discrete Fourier transform assumes that the input\nsignal is periodic. If the signal is not, the assumption is simply\nthat, right at the end of the signal, it jumps back to its beginning\nvalue. Consider the function, $x(t)$, shown here:</p>\n<img src=\"../figures/periodic.png\"/>\n<!-- caption text=\"Eight samples have been taken of a given\n function with effective length $T_{eff}$.  With the discrete Fourier\n transform assuming periodicity, it creates a step discontinuity\n between the first and last samples.\" -->\n<p>We only measure the signal for a short time, labeled $T_{eff}$. The\nFourier transform assumes that $x(8) = x(0)$, and that the signal is\ncontinued as the dashed, rather than the solid line. This introduces\na big jump at the edge, with the expected oscillation in the spectrum:</p>\n<pre><code class=\"language-python\">t = np.linspace(0, 1, 500)\nx = np.sin(49 * np.pi * t)\n\nX = fftpack.fft(x)\n\nf, (ax0, ax1) = plt.subplots(2, 1)\n\nax0.plot(x)\nax0.set_ylim(-1.1, 1.1)\n\nax1.plot(fftpack.fftfreq(len(t)), np.abs(X))\nax1.set_ylim(0, 190);\n</code></pre>\n<!-- caption text=\"Spectrum oscillation due to signal edge discontinuity\" -->\n<p>Instead of the expected two lines, the peaks are spread out in the\nspectrum.</p>\n<p>We can counter this effect by a process called <em>windowing</em>. The\noriginal function is multiplied with a window function such as the\nKaiser window $K(N,\\beta)$. Here we visualize it for $\\beta$ ranging\nfrom 0 to 100:</p>\n<pre><code class=\"language-python\">f, ax = plt.subplots()\n\nN = 10\nbeta_max = 5\ncolormap = plt.cm.plasma\n\nnorm = plt.Normalize(vmin=0, vmax=beta_max)\n\nlines = [\n    ax.plot(np.kaiser(100, beta), color=colormap(norm(beta)))\n    for beta in np.linspace(0, beta_max, N)\n    ]\n\nsm = plt.cm.ScalarMappable(cmap=colormap, norm=norm)\n\nsm._A = []\n\nplt.colorbar(sm).set_label(r'Kaiser $\\beta$');\n</code></pre>\n<!-- caption text=\"The Kaiser window for various values of $\\beta$\" -->\n<p>By changing the parameter $\\beta$, the shape of the window can be\nchanged from rectangular ($\\beta=0$, no windowing) to a window that\nproduces signals that smoothly increase from zero and decrease to zero\nat the endpoints of the sampled interval, producing very low side\nlobes ($\\beta$ typically between 5 and 10) <sup id=\"fnref-choosing_a_window\"><a href=\"#fn-choosing_a_window\" class=\"footnote-ref\">choosing_a_window</a></sup>.</p>\n<!--\n*For online notebook, use something like:*\n\n#```\n# @interact(beta=(0, 20.))\n# def window(beta):\n#    x = np.kaiser(1000, beta)\n#    f, axes = plt.subplots(1, 2, figsize=(4.8, 2.4))\n#    axes[0].plot(x)\n#    axes[1].plot(fftpack.fftshift(np.abs(np.fft.fft(x, 10000))))\n#    axes[1].set_xlim(2*2480, 2*2520)\n#    plt.show()\n#```\n-->\n<p>The effect of windowing our previous example is noticeable:</p>\n<pre><code class=\"language-python\">win = np.kaiser(len(t), 5)\nx_win = x * win\n\nX_win = fftpack.fft(x_win)\n\nf, (ax0, ax1) = plt.subplots(2, 1)\n\nax0.plot(x_win)\nax0.set_ylim(-1.1, 1.1)\n\nax1.plot(fftpack.fftfreq(len(t)), np.abs(X_win))\nax1.set_ylim(0, 190);\n</code></pre>\n<!-- caption text=\"Spectrum of a windowed signal (magnitude)\" -->\n<h2>Real-world Application: Analyzing Radar Data</h2>\n<p>Linearly modulated FMCW (Frequency-Modulated Continuous-Wave) radars\nmake extensive use of the FFT algorithm for signal processing and\nprovide examples of various applications of the FFT. We will use actual\ndata from an FMCW radar to demonstrate one such an application: target\ndetection.</p>\n<p>Roughly, an FMCW radar works like this (see box \"A\nsimple FMCW radar system\" for more detail):</p>\n<p>A signal with changing frequency is generated. This signal is\ntransmitted by an antenna, after which it travels outwards, away from the\nradar. When it hits an object, part of the signal is reflected back\nto the radar, where it is received, multiplied by a copy of the\ntransmitted signal, and sampled, turning it into\nnumbers that are packed into an array. Our challenge is to interpret\nthose numbers to form meaningful results.</p>\n<p>The multiplication step above is important. From school, recall the\ntrigonometric identity:</p>\n<p>$\n\\sin(xt) \\sin(yt) = \\frac{1}{2}\n\\left[ \\sin \\left( (x - y)t + \\frac{\\pi}{2} \\right) - \\sin \\left( (x + y)t + \\frac{\\pi}{2} \\right) \\right]\n$</p>\n<p>Thus, if we multiply the received signal by the transmitted signal, we\nexpect two frequency components to appear in the spectrum: one that is\nthe difference in frequencies between the received and transmitted\nsignal, and one that is the sum of their frequencies.</p>\n<p>We are particularly interested in the first, since that gives us some\nindication of how long it took the signal to reflect back to the radar\n(in other words, how far away the object is from us!). We discard the\nother by applying a low-pass filter to the signal (i.e., a filter that\ndiscards any high frequencies).</p>\n<blockquote>\n<p><strong>A simple FMCW radar system</strong> {.callout}</p>\n<p><img src=\"../figures/FMCW_Block.png\" alt=\"The block diagram of a simple FMCW radar system\"></p>\n<p>A block diagram of a simple FMCW radar that uses separate\ntransmit and receive antennas is shown above. The radar consists of a waveform generator\nthat generates a sinusoidal signal of which the frequency varies\nlinearly around the required transmit frequency. The generated signal\nis amplified to the required power level by the transmit amplifier\nand routed to the transmit antenna via a coupler circuit where a copy\nof the transmit signal is tapped off. The transmit antenna radiates\nthe transmit signal as an electromagnetic wave in a narrow beam\ntowards the target to be detected. When the wave encounters an object\nthat reflects electromagnetic waves, a fraction of of the energy\nirradiating the target is reflected back to the receiver as a second\nelectromagnetic wave that propagates in the direction of the radar\nsystem. When this wave encounters the receive antenna, the antenna\ncollects the energy in the wave energy impinging on it and converts\nit to a fluctuating voltage that is fed to the mixer. The mixer\nmultiplies the received signal with a replica of the transmit signal\nand produces a sinusoidal signal with a frequency equal to the\ndifference in frequency between the transmitted and received\nsignals. The low-pass filter ensures that the received signal is band\nlimited (i.e., does not contain frequencies that we don't care about)\nand the receive amplifier strengthens the signal to a suitable\namplitude for the analog to digital converter (ADC) that feeds data\nto the computer.</p>\n</blockquote>\n<p>To summarize, we should note that:</p>\n<ul>\n<li>The data that reaches the computer consists of $N$ samples sampled\n(from the multiplied, filtered signal) at a sample frequency of\n$f_{s}$.</li>\n<li>The <strong>amplitude</strong> of the returned signal varies depending on the\n<strong>strength of the reflection</strong> (i.e., is a property of the target\nobject and the distance between the target and the radar).</li>\n<li>The <strong>frequency measured</strong> is an indication of the <strong>distance</strong> of the\ntarget object from the radar.</li>\n</ul>\n<!--\n\n### Signal properties in the time domain\n\nThe transmit signal is a sinusoidal signal with an instantaneous\nfrequency that increases linearly with time, as shown in\nFig. [fig:FMCW waveform](a).\n\nStarting at $f_{min}$, the frequency increases at a rate $S$ Hz/s to $f_{max}.$\nThe frequency is then decreased rapidly back to $f_{min}$\nafter which a next frequency sweep occurs.\n\nThis signal is radiated by a directional transmit antenna. When the\nwave with propagation velocity $v\\approx300\\times10^{6}$ m/s (the\npropagation speed of electromagnetic waves in air is ever-so-slightly\nslower than the speed of light in a vacuum) hits a target at a range $R$,\nthe echo will reach the radar after a time\n\n$$t_{d}=\\frac{2R}{v}.$$\n\nHere it is collected by the receive antenna and converted to a\nsinusoidally fluctuating voltage. The received signal is a replica of\nthe transmitted signal, delayed by the transit time $t_{d}$ and is\nshown dashed in Fig. [fig:FMCW waveform](b).\n\nA radar is designed to detect targets up to a maximum range $R_{max}$.\nEchoes from maximum range reach the radar after a transit\ntime $t_{dm}$ as shown in Fig. [fig:FMCW waveform](c).\n\nWe note that there is a constant difference in frequency between the\ntransmitted and received signals and this will be true for all targets\nafter time $t_{s}$ until $t_{e}$. We conclude from\nFig. [fig:FMCW waveform] that the frequency difference is given by\n\n$$f_{d}=S\\times t_{d}=\\frac{2SR}{v},$$\n\nwhere $T_{eff}=t_{e}-t_{s}=\\frac{N}{f_{s}}$ is the effective sweep duration\nof the radar. The frequency excursion of the sweep during $T_{eff}$ is\nthe effective bandwidth of the radar, given by\n\n$$B_{eff}=f_{max}-f_{1}=ST_{eff}.$$\n\nWe will see that the range resolution of the radar is determined by\nthe effective bandwidth.\n\n\nReturning to Fig. [fig: block-diagram], the signal produced by the\nreceiver at the input to the Analog to Digital Converter (ADC) when\nthere is a single target is a sinusoid with constant amplitude,\nproportional to the amplitude of the echo, and constant frequency,\nproportional to the range to the target.\n\n-->\n<p><img src=\"../figures/FMCW_waveform.png\" alt=\"The frequency relationships in an FMCW radar with\n linear frequency modulation\"></p>\n<p>To start off, we'll generate some synthetic signals, after which we'll\nturn our focus to the output of an actual radar.</p>\n<p>Recall that the radar is increasing its frequency as it transmits at a\nrate of $S$ Hz/s. After a certain amount of time, $t$, has passed,\nthe frequency will now be $t S$ higher. In that same time span, the\nradar signal has traveled $d = t / v$ meters, where $v$ is the speed of\nthe transmitted wave through air (roughly the same as the speed of\nlight, $3 \\times 10^8$ m/s).</p>\n<p>Combining the above observations, we can calculate the amount of time\nit would take the signal to travel to, bounce off, and return from a\ntarget that is distance $R$ away:</p>\n<p>$$ t_R = 2R / v $$</p>\n<p>Therefore, the change in frequency for a target at range $R$ will be:</p>\n<p>$$ f_{d}= t_R S = \\frac{2RS}{v}$$</p>\n<pre><code class=\"language-python\">pi = np.pi\n\n# Radar parameters\nfs = 78125          # Sampling frequency in Hz, i.e. we sample 78125\n                    # times per second\n\nts = 1 / fs         # Sampling time, i.e. one sample is taken each\n                    # ts seconds\n\nTeff = 2048.0 * ts  # Total sampling time for 2048 samples\n                    # (AKA effective sweep duration) in seconds.\n\nBeff = 100e6        # Range of transmit signal frequency during the time the\n                    # radar samples, known as the \"effective bandwidth\"\n                    # (given in Hz)\n\nS = Beff / Teff     # Frequency sweep rate in Hz/s\n\n# Specification of targets.  We made these targets up, imagining they\n# are objects seen by the radar with the specified range and size\n\nR = np.array([100, 137, 154, 159,  180])  # Ranges (in meter)\nM = np.array([0.33, 0.2, 0.9, 0.02, 0.1])  # Target size\nP = np.array([0, pi / 2, pi / 3, pi / 5, pi / 6])  # Randomly chosen phase offsets\n\nt = np.arange(2048) * ts  # Sample times\n\nfd = 2 * S * R / 3E8      # Frequency differences for these targets\n\n# Generate five targets\nsignals = np.cos(2 * pi * fd * t[:, np.newaxis] + P)\n\n# Save the signal associated with the first target as an example for\n# later inspection\nv_single = signals[:, 0]\n\n# Weigh the signals, according to target size, and sum, to generate\n# the combined signal seen by the radar\nv_sim = np.sum(M * signals, axis=1)\n\n## The above code is equivalent to:\n#\n# v0 = np.cos(2 * pi * fd[0] * t)\n# v1 = np.cos(2 * pi * fd[1] * t + pi / 2)\n# v2 = np.cos(2 * pi * fd[2] * t + pi / 3)\n# v3 = np.cos(2 * pi * fd[3] * t + pi / 5)\n# v4 = np.cos(2 * pi * fd[4] * t + pi / 6)\n#\n## Blend them together\n# v_single = v0\n# v_sim = (0.33 * v0) + (0.2 * v1) + (0.9 * v2) + (0.02 * v3) + (0.1 * v4)\n</code></pre>\n<p>Above, we generate a synthetic signal, $v_\\mathrm{single}$, received when\nlooking at a single target (see figure below). By counting the number\nof cycles seen in a given time period, we can compute the frequency of\nthe signal and thus the distance to the target.</p>\n<p>A real radar will rarely receive only a single echo, though. The\nsimulated signal $v<em>\\mathrm{sim}$ shows what a radar signal will look\nlike with five targets at different ranges (including two close to one\nanother at 154 and 159 meters), and $v</em>\\mathrm{actual}(t)$ shows the\noutput signal obtained with an actual radar. When multiple echoes add\ntogether, the result makes little intuitive sense; until, that is, we\nlook at it more carefully through the lens of the discrete Fourier\ntransform.</p>\n<!--\nA synthetic radar signal is shown as $v_{1}(t)$ in Fig. [fig:radar time signals]\nfor a radar with parameters $B_{eff}=100$ MHz, sampling frequency\n28125 Hz and N=2048 samples. The effective sweep time is\n$T_{eff}=\\frac{2048}{28125}=26.214$ ms. We can interpret this signal\nby counting the number of cycles in the graph — about\n$66\\frac{1}{2}$. The difference frequency is approximately\n$\\frac{66.5}{26.214E-3}=6.35$ kHz. With\n$S=\\frac{B_{eff}}{T_{eff}}=\\frac{100E6}{26.214E-3}=3.815\\times10^{9}$\nHz/s, we can calculate the range to the target as\n$R=\\frac{vf_{d}}{2S}=\\frac{3\\times10^{8}\\times6.35\\times10^{3}}{2\\times3.815\\times10^{9}}=249.7$\nm.\n-->\n<p><img src=\"../figures/generated/radar_time_signals.png\" alt=\"Receiver output signals: (a) single simulated target\n (b) five simulated targets (c) actual radar data\"></p>\n<p>The real-world radar data is read from a NumPy-format <code>.npz</code> file (a\nlight-weight, cross-platform and cross-version compatible storage\nformat). These files can be saved with the <code>np.savez</code> or\n<code>np.savez_compressed</code> functions. Note that SciPy's <code>io</code> submodule\ncan also easily read other formats, such as MATLAB(R) and NetCDF\nfiles.</p>\n<pre><code class=\"language-python\">data = np.load('data/radar_scan_0.npz')\n\n# Load variable 'scan' from 'radar_scan_0.npz'\nscan = data['scan']\n\n# The dataset contains multiple measurements, each taken with the\n# radar pointing in a different direction.  Here we take one such as\n# measurement, at a specified azimuth (left-right position) and elevation\n# (up-down position).  The measurement has shape (2048,).\n\nv_actual = scan['samples'][5, 14, :]\n\n# The signal amplitude ranges from -2.5V to +2.5V.  The 14-bit\n# analogue-to-digital converter in the radar gives out integers\n# between -8192 to 8192.  We convert back to voltage by multiplying by\n# $(2.5 / 8192)$.\n\nv_actual = v_actual * (2.5 / 8192)\n</code></pre>\n<p>Since <code>.npz</code>-files can store multiple variables, we have to select\nthe one we want: <code>data['scan']</code>. That returns a\n<em>structured NumPy array</em> with the following fields:</p>\n<ul>\n<li><strong>time</strong> : unsigned 64-bit (8 byte) integer (<code>np.uint64</code>)</li>\n<li><strong>size</strong> : unsigned 32-bit (4 byte) integer (<code>np.uint32</code>)</li>\n<li>\n<p><strong>position</strong></p>\n<ul>\n<li><strong>az</strong> : 32-bit float (<code>np.float32</code>)</li>\n<li><strong>el</strong> : 32-bit float (<code>np.float32</code>)</li>\n<li><strong>region_type</strong> : unsigned 8-bit (1 byte) integer (<code>np.uint8</code>)</li>\n<li><strong>region_ID</strong> : unsigned 16-bit (2 byte) integer (<code>np.uint16</code>)</li>\n<li><strong>gain</strong> : unsigned 8-bit (1 byte) integer (<code>np.uin8</code>)</li>\n<li><strong>samples</strong> : 2048 unsigned 16-bit (2 byte) integers (<code>np.uint16</code>)</li>\n</ul>\n</li>\n</ul>\n<p>While it is true that NumPy arrays are <em>homogeneous</em> (i.e., all the\nelements inside are the same), it does not mean that those elements\ncannot be compound elements, as is the case here.</p>\n<p>An individual field is accessed using dictionary syntax:</p>\n<pre><code class=\"language-python\">azimuths = scan['position']['az']  # Get all azimuth measurements\n</code></pre>\n<p>To summarize what we've seen so far: the shown measurements\n($v<em>\\mathrm{sim}$ and $v</em>\\mathrm{actual}$) are the sum of sinusoidal\nsignals reflected by each of several objects. We need to determine\neach of the constituent components of these composite radar\nsignals. The FFT is the tool that will do this for us.</p>\n<h3>Signal properties in the frequency domain</h3>\n<p>First, we take the FFTs of our three signals (synthetic single target,\nsynthetic multi-target, and real) and then display the\npositive frequency components (i.e., components $0$ to $N/2$). These\nare called the <em>range traces</em> in radar terminology.</p>\n<pre><code class=\"language-python\">fig, axes = plt.subplots(3, 1, sharex=True, figsize=(4.8, 2.4))\n\n# Take FFTs of our signals.  Note the convention to name FFTs with a\n# capital letter.\n\nV_single = np.fft.fft(v_single)\nV_sim = np.fft.fft(v_sim)\nV_actual = np.fft.fft(v_actual)\n\nN = len(V_single)\n\nwith plt.style.context('style/thinner.mplstyle'):\n    axes[0].plot(np.abs(V_single[:N // 2]))\n    axes[0].set_ylabel(\"$|V_\\mathrm{single}|$\")\n    axes[0].set_xlim(0, N // 2)\n    axes[0].set_ylim(0, 1100)\n\n    axes[1].plot(np.abs(V_sim[:N // 2]))\n    axes[1].set_ylabel(\"$|V_\\mathrm{sim} |$\")\n    axes[1].set_ylim(0, 1000)\n\n    axes[2].plot(np.abs(V_actual[:N // 2]))\n    axes[2].set_ylim(0, 750)\n    axes[2].set_ylabel(\"$|V_\\mathrm{actual}|$\")\n\n    axes[2].set_xlabel(\"FFT component $n$\")\n\n    for ax in axes:\n        ax.grid()\n</code></pre>\n<!-- caption text=\"Range traces for: (a) single simulated target, (b) mutiple simulated targets, (c) real-world targets\" -->\n<p>Suddenly, the information makes sense!</p>\n<p>The plot for $|V<em>\\mathrm{single}|$ clearly shows a target at component 67, and\nfor $|V</em>\\mathrm{sim}|$ shows the targets that produced the signal that was\nuninterpretable in the time domain. The real radar\nsignal, $|V_\\mathrm{actual}|$ shows a large number of targets between\ncomponent 400 and 500 with a large peak in component 443. This happens\nto be an echo return from a radar illuminating the high wall of an\nopen-cast mine.</p>\n<p>To get useful information from the plot, we must determine the range!\nAgain, we use the formula:</p>\n<p>$$R<em>{n}=\\frac{nv}{2B</em>{eff}}$$</p>\n<p>In radar terminology, each DFT component is known as a <em>range bin</em>.</p>\n<!--\nThe sinusoid associated with the first component of the DFT has a\nperiod exactly equal to the duration $T_{eff}$ of the time domain\nsignal, so $f_{1}=\\frac{1}{T_{eff}}$. The other sinusoids in the\nFourier series are harmonics of this, $f_{n}=\\frac{n}{T_{eff}}$.\n\nThe ranges associated with the DFT components follow from\nEqs. ([eq:difference frequency]) and ([eq:Effective bandwidth]) as\n\n$$R_{n}=\\frac{nv}{2B_{eff}}$$\n\nand the associated DFT components are known as *range bins* in radar\nterminology.\n\n-->\n<p>This equation also defines the range resolution of the radar: targets\nwill only be distinguishable if they are separated by more than two\nrange bins, i.e.</p>\n<p>$$\\Delta R>\\frac{1}{B_{eff}}.$$</p>\n<p>This is a fundamental property of all types of radar.</p>\n<!--\nThe plot in Fig. ([fig:FFT range traces]) has a fundamental\nshortcoming. The observable dynamic range is the signal is very\nlimited! We could easily have missed one of the targets in the trace\nfor $V_{5}$!  To ameliorate the problem, we plot the same FFTs but\nthis time against a logarithmic y-axis.  The traces were all\nnormalized by dividing the amplitudes with the maximum value.\n-->\n<p>This result is quite satisfying—but the dynamic range is so large\nthat we could very easily miss some peaks. Let's take the $\\log$ as\nbefore with the spectrogram:</p>\n<pre><code class=\"language-python\">c = 3e8  # Approximately the speed of light and of\n         # electromagnetic waves in air\n\nfig, (ax0, ax1, ax2) = plt.subplots(3, 1)\n\n\ndef dB(y):\n    \"Calculate the log ratio of y / max(y) in decibel.\"\n\n    y = np.abs(y)\n    y /= y.max()\n\n    return 20 * np.log10(y)\n\n\ndef log_plot_normalized(x, y, ylabel, ax):\n    ax.plot(x, dB(y))\n    ax.set_ylabel(ylabel)\n    ax.grid()\n\n\nrng = np.arange(N // 2) * c / 2 / Beff\n\nwith plt.style.context('style/thinner.mplstyle'):\n    log_plot_normalized(rng, V_single[:N // 2], \"$|V_0|$ [dB]\", ax0)\n    log_plot_normalized(rng, V_sim[:N // 2], \"$|V_5|$ [dB]\", ax1)\n    log_plot_normalized(rng, V_actual[:N // 2], \"$|V_{\\mathrm{actual}}|$ [dB]\", ax2)\n\nax0.set_xlim(0, 300)  # Change x limits for these plots so that\nax1.set_xlim(0, 300)  # we are better able to see the shape of the peaks.\nax2.set_xlim(0, len(V_actual) // 2)\nax2.set_xlabel('range')\n</code></pre>\n<!-- caption text=\"Logarithm of range traces\" -->\n<p>The observable dynamic range is much improved in these plots. For\ninstance, in the real radar signal the <em>noise floor</em> of the radar has\nbecome visible (i.e., the level where electronic noise in the system\nstarts to limit the radar's ability to detect a target).</p>\n<!-- The noise floor is ultimately caused by a phenomenon\ncalled thermal noise that is produced by all conducting elements that\nhave resistance at temperatures above absolute zero, as well as by\nshot noise, a noise mechanism inherent in all the electronic devices\nthat are used for processing the radar signal. The noise floor of a\nradar limits its ability to detect weak echoes. -->\n<h3>Windowing, applied</h3>\n<p>We're getting there, but in the spectrum of the simulated signal, we\nstill cannot distinguish the peaks at 154 and 159 meters. Who knows\nwhat we're missing in the real-world signal! To sharpen the peaks,\nwe'll return to our toolbox and make use of <em>windowing</em>.</p>\n<!--\n\nThe range traces in Fig. ([fig:Log range traces]) display a further\nserious shortcoming. The signals $v_{1}$ and $v_{5}$ are composed of\npure sinusoids and we would ideally expect the FFT to produce line\nspectra for these signals. The logarithmic plots show steadily\nincreasing values as the peaks are approached from both sides, to such\nan extent that one of the targets in the plot for $|v_{5}|$ can hardly\nbe distinguished even though it is separated by several range bins\nfrom the large target. The broadening is caused by *side lobes* in the\nDFT. These are caused by an inherent clash between the properties of\nthe signal we analyzed and the signal produced by the inverse DFT.\n\n-->\n<p>Here are the signals used thus far in this example, windowed with a\nKaiser window with $\\beta=6.1$:</p>\n<pre><code class=\"language-python\">f, axes = plt.subplots(3, 1, sharex=True, figsize=(4.8, 2.8))\n\nt_ms = t * 1000  # Sample times in milli-second\n\nw = np.kaiser(N, 6.1)  # Kaiser window with beta = 6.1\n\nfor n, (signal, label) in enumerate([(v_single, r'$v_0 [V]$'),\n                                     (v_sim, r'$v_5 [V]$'),\n                                     (v_actual, r'$v_{\\mathrm{actual}} [V]$')]):\n    with plt.style.context('style/thinner.mplstyle'):\n        axes[n].plot(t_ms, w * signal)\n        axes[n].set_ylabel(label)\n        axes[n].grid()\n\naxes[2].set_xlim(0, t_ms[-1])\naxes[2].set_xlabel('Time [ms]');\n</code></pre>\n<!-- caption text=\"Windowed signals for: (a) single simulated target, (b) multiple simulated targets, (c) real targets\" -->\n<p>And the corresponding FFTs (or \"range traces\", in radar terms):</p>\n<pre><code class=\"language-python\">V_single_win = np.fft.fft(w * v_single)\nV_sim_win = np.fft.fft(w * v_sim)\nV_actual_win = np.fft.fft(w * v_actual)\n\nfig, (ax0, ax1,ax2) = plt.subplots(3, 1)\n\nwith plt.style.context('style/thinner.mplstyle'):\n    log_plot_normalized(rng, V_single_win[:N // 2],\n                        r\"$|V_{0,\\mathrm{win}}|$ [dB]\", ax0)\n    log_plot_normalized(rng, V_sim_win[:N // 2],\n                        r\"$|V_{5,\\mathrm{win}}|$ [dB]\", ax1)\n    log_plot_normalized(rng, V_actual_win[:N // 2],\n                        r\"$|V_\\mathrm{actual,win}|$ [dB]\", ax2)\n\nax0.set_xlim(0, 300)  # Change x limits for these plots so that\nax1.set_xlim(0, 300)  # we are better able to see the shape of the peaks.\n\nax1.annotate(\"New, previously unseen!\", (160, -35), xytext=(10, 15),\n             textcoords=\"offset points\", color='red', size='x-small',\n             arrowprops=dict(width=0.5, headwidth=3, headlength=4,\n                             fc='k', shrink=0.1));\n</code></pre>\n<!-- caption text=\"Range traces (spectrum) of windowed signals\" -->\n<p>Compare these with the earlier range traces. There is a dramatic\nlowering in side lobe level, but at a price: the peaks have changed in\nshape, widening and becoming less peaky, thus lowering the radar\nresolution, that is, the ability of the radar to distinguish between\ntwo closely space targets. The choice of window is a compromise\nbetween side lobe level and resolution. Even so, referring to the\ntrace for $V_\\mathrm{sim}$, windowing has dramatically increased our\nability to distinguish the small target from its large neighbor.</p>\n<p>In the real radar data range trace windowing has also reduced the side\nlobes. This is most visible in the depth of the notch between the two\ngroups of targets.</p>\n<h3>Radar Images</h3>\n<p>Knowing how to analyze a single trace, we can expand to looking at\nradar images.</p>\n<p>The data is produced by a radar with a parabolic reflector antenna. It\nproduces a highly directive round pencil beam with a $2^\\circ$\nspreading angle between half-power points. When directed with normal\nincidence at a plane, the radar will illuminate a spot of about $2$ meters in\ndiameter at a distance of 60 meters.\nOutside this spot, the power drops off quite rapidly, but strong\nechoes from outside the spot will nevertheless still be visible.</p>\n<p>By varying the pencil beam's azimuth (left-right position) and\nelevation (up-down position), we can sweep it across the target area\nof interest. When reflections are picked up, we can calculate the\ndistance to the reflector (the object hit by the radar signal).\nTogether with the current pencil beam azimuth and elevation, this\ndefines the reflector's position in 3D.</p>\n<p>A rock slope consists of thousands of reflectors. A range bin can be\nthought of as a large sphere with the radar at its center that\nintersects the slope along a ragged line. The scatterers on this line\nwill produce reflections in this range bin. The wavelength of the\nradar (distance the transmitted wave travels in one oscillation\nsecond) is about 30 mm. The reflections from scatterers separated by\nodd multiples of a quarter wavelength in range, about 7.5 mm, will\ntend to interfere destructively, while those from scatterers separated\nby multiples of a half wavelength will tend to interfere\nconstructively at the radar. The reflections combine to produce\napparent spots of strong reflections. This specific radar moves its\nantenna in order to scan small regions consisting of $20^\\circ$\nazimuth and $30^\\circ$ elevation bins scanned in steps of $0.5^\\circ$.</p>\n<p>We will now draw some contour plots of the resulting radar data.\nPlease refer to the diagram below to see how the different slices are\ntaken. A first slice at fixed range shows the strength of echoes\nagainst elevation and azimuth. Another two slices at fixed elevation\nand azimuth respectively shows the slope. The stepped construction of\nthe high wall in an opencast mine is visible in the azimuth plane.</p>\n<p><img src=\"../figures/axes_slices.png\"\n     alt=\"Diagram showing azimuth, elevation and range slices through data volume\"/></p>\n<pre><code class=\"language-python\">data = np.load('data/radar_scan_1.npz')\nscan = data['scan']\n\n# The signal amplitude ranges from -2.5V to +2.5V.  The 14-bit\n# analogue-to-digital converter in the radar gives out integers\n# between -8192 to 8192.  We convert back to voltage by multiplying by\n# $(2.5 / 8192)$.\n\nv = scan['samples'] * 2.5 / 8192\nwin = np.hanning(N + 1)[:-1]\n\n# Take FFT for each measurement\nV = np.fft.fft(v * win, axis=2)[::-1, :, :N // 2]\n\ncontours = np.arange(-40, 1, 2)\n\n# ignore MPL layout warnings\nimport warnings\nwarnings.filterwarnings('ignore', '.*Axes.*compatible.*tight_layout.*')\n\nf, axes = plt.subplots(2, 2, figsize=(4.8, 4.8), tight_layout=True)\n\nlabels = ('Range', 'Azimuth', 'Elevation')\n\ndef plot_slice(ax, radar_slice, title, xlabel, ylabel):\n    ax.contourf(dB(radar_slice), contours, cmap='magma_r')\n    ax.set_title(title)\n    ax.set_xlabel(xlabel)\n    ax.set_ylabel(ylabel)\n    ax.set_facecolor(plt.cm.magma_r(-40))\n\nwith plt.style.context('style/thinner.mplstyle'):\n    plot_slice(axes[0, 0], V[:, :, 250], 'Range=250', 'Azimuth', 'Elevation')\n    plot_slice(axes[0, 1], V[:, 3, :], 'Azimuth=3', 'Range', 'Elevation')\n    plot_slice(axes[1, 0], V[6, :, :].T, 'Elevation=6', 'Azimuth', 'Range')\n    axes[1, 1].axis('off')\n</code></pre>\n<!-- caption text=\"Contour plots of range traces along various axes (see diagram)\" -->\n<h4>3D visualization</h4>\n<p>We can also visualize the volume in three dimensions.</p>\n<p>We first compute the argmax (the index of the maximum value) in the\nrange direction. This should give an indication of the range at which\nthe radar beam hit the rock slope. Each argmax index is converted to\na three-dimensional (elevation-azimuth-range) coordinate:</p>\n<pre><code class=\"language-python\">r = np.argmax(V, axis=2)\n\nel, az = np.meshgrid(*[np.arange(s) for s in r.shape], indexing='ij')\n\naxis_labels = ['Elevation', 'Azimuth', 'Range']\ncoords = np.column_stack((el.flat, az.flat, r.flat))\n</code></pre>\n<p>Taking these coordinates, we project them onto the plane (by dropping\nthe range coordinate), and perform a Delaunay tesselation. The\ntesselation returns a set of indices into our coordinates that define\ntriangles (or simplices). While the triangles are strictly speaking\ndefined on the projected coordinates, we use our original coordinates\nfor the reconstruction, thereby adding back the range component:</p>\n<pre><code class=\"language-python\">from scipy import spatial\n\nd = spatial.Delaunay(coords[:, :2])\nsimplexes = coords[d.vertices]\n</code></pre>\n<p>For display purposes, we swap the range axis to be the first:</p>\n<pre><code class=\"language-python\">coords = np.roll(coords, shift=-1, axis=1)\naxis_labels = np.roll(axis_labels, shift=-1)\n</code></pre>\n<p>Now, Matplotlib's <code>trisurf</code> can be used to visualize the result:</p>\n<pre><code class=\"language-python\"># This import initializes Matplotlib's 3D machinery\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Set up the 3D axis\nf, ax = plt.subplots(1, 1, figsize=(4.8, 4.8),\n                     subplot_kw=dict(projection='3d'))\n\nwith plt.style.context('style/thinner.mplstyle'):\n    ax.plot_trisurf(*coords.T, triangles=d.vertices, cmap='magma_r')\n\n    ax.set_xlabel(axis_labels[0])\n    ax.set_ylabel(axis_labels[1])\n    ax.set_zlabel(axis_labels[2], labelpad=-3)\n    ax.set_xticks([0, 5, 10, 15])\n\n# Adjust the camera position to match our diagram above\nax.view_init(azim=-50);\n</code></pre>\n<!-- caption text=\"3-D visualization of estimated rock slope position\" -->\n<h3>Further applications of the FFT</h3>\n<p>The examples above show just one of the uses of the FFT in\nradar. There are many others, such as movement (Doppler) measurement\nand target recognition. The fast Fourier transform is pervasive, and is\nseen anywhere from Magnetic Resonance Imaging (MRI) to statistics.\nWith the basic techniques that this chapter outlines in hand, you\nshould be well equipped to use it!</p>\n<h3>Further reading</h3>\n<p>On the Fourier transform:</p>\n<ul>\n<li>A. Papoulis, <em>The Fourier Integral and Its Applications</em>,\nMcGraw-Hill, 1960.</li>\n<li>Ronald A. Bracewell, <em>The Fourier Transform and Its Applications</em>,\nMcGraw-Hill, 1986.</li>\n</ul>\n<p>On radar signal processing:</p>\n<ul>\n<li>Mark A. Richards, <em>Principles of Modern Radar: Basic Principles</em>,\nSciTech, 2010</li>\n<li>Mark A. Richards, <em>Fundamentals of Radar Signal Processing</em>,\nMcGraw-Hill, 2014.</li>\n</ul>\n<!-- exercise begin -->\n<p><strong>Exercise:</strong> The FFT is often used to speed up image convolution\n(convolution is the application of a moving filter mask). Convolve an\nimage with <code>np.ones((5, 5))</code>, using a) numpy's <code>np.convolve</code> and\nb) <code>np.fft.fft2</code>. Confirm that the results are identical.</p>\n<p>Hints:</p>\n<ul>\n<li>The convolution of <code>x</code> and <code>y</code> is equivalent to <code>ifft2(X * Y)</code>, where\n<code>X</code> and <code>Y</code> are the FFTs of x and y respectively.</li>\n<li>In order to multiply <code>X</code> and <code>Y</code>, they have to be the same size.\nUse <code>np.pad</code> to extend <code>x</code> and <code>y</code> with zeros (toward the right and\nbottom) <em>before</em> taking their FFT.</li>\n<li>You may see some edge effects. These can be removed by increasing\nthe padding size, so that both <code>x</code> and <code>y</code> have dimensions\n<code>shape(x) + shape(y) - 1</code>.</li>\n</ul>\n<!-- solution begin -->\n<p><strong>Solution:</strong></p>\n<pre><code class=\"language-python\">from scipy import signal\n\nx = np.random.random((50, 50))\ny = np.ones((5, 5))\n\nL = x.shape[0] + y.shape[0] - 1\nPx = L - x.shape[0]\nPy = L - y.shape[0]\n\nxx = np.pad(x, ((0, Px), (0, Px)), mode='constant')\nyy = np.pad(y, ((0, Py), (0, Py)), mode='constant')\n\nzz = np.fft.ifft2(np.fft.fft2(xx) * np.fft.fft2(yy)).real\nprint('Resulting shape:', zz.shape, ' &#x3C;-- Why?')\n\nz = signal.convolve2d(x, y)\n\nprint('Results are equal?', np.allclose(zz, z))\n</code></pre>\n<!-- solution end -->\n<!-- exercise end -->\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-discrete\">\n<p>The discrete Fourier transform operates on sampled data,\nin contrast to the standard Fourier transform which is\ndefined for continuous functions.</p>\n<a href=\"#fnref-discrete\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-complex\">\n<p>The Fourier transform essentially tells us how to combine\na set of sinusoids of varying frequency to form the input\nsignal. The spectrum consists of complex numbers—one for\neach sinusoid. A complex number encodes two things: a\nmagnitude and an angle. The magnitude is the strength of\nthe sinusoid in the signal, and the angle how much it is\nshifted in time. At this point, we only care about the\nmagnitude, which we calculate using <code>np.abs</code>.</p>\n<a href=\"#fnref-complex\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-time\">\n<p>For more on techniques for calculating both (approximate) frequencies\nand time of occurrence, read up on wavelet analysis.</p>\n<a href=\"#fnref-time\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-scaling\">\n<p>SciPy goes to some effort to preserve the energy in the\nspectrum. Therefore, when taking only half the components\n(for N even), it multiplies the remaining components,\napart from the first and last components, by two (those\ntwo components are \"shared\" by the two halves of the\nspectrum). It also normalizes the window by dividing it\nby its sum.</p>\n<a href=\"#fnref-scaling\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-periodic\">\n<p>The period can, in fact, also be infinite! The general\ncontinuous Fourier transform provides for this\npossibility. Discrete Fourier transforms are generally\ndefined over a finite interval, and this is implicitly\nthe period of the time domain function that is\ntransformed. In other words, if you do the inverse\ndiscrete Fourier transform, you <em>always</em> get a periodic\nsignal out.</p>\n<a href=\"#fnref-periodic\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-big_o\">\n<p>In computer science, the computational cost of an algorithm\nis often expressed in \"Big O\" notation. The notation gives\nus an indication of how an algorithm's execution time scales\nwith an increasing number of elements. If an algorithm is $\\mathcal{O}(N)$,\nit means its execution time increases linearly with\nthe number of input elements (for example, searching for a\ngiven value in an unsorted list is $\\mathcal{O}\\left(N\\right)$). Bubble sort is\nan example of an $O\\left(N^2\\right)$ algorithm; the exact number of\noperations performed may, hypothetically, be $N + \\frac{1}{2} N^2$,\nmeaning that the computational cost grows quadratically with\nthe number of input elements.</p>\n<a href=\"#fnref-big_o\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-fast\">\n<p>While ideally we don't want to reimplement existing\nalgorithms, sometimes it becomes necessary in order to obtain\nthe best execution speeds possible, and tools\nlike <a href=\"http://cython.org\">Cython</a>—which compiles Python to\nC—and <a href=\"http://numba.pydata.org\">Numba</a>—which does\njust-in-time compilation of Python code—make life a lot\neasier (and faster!). If you are able to use GPL-licenced\nsoftware, you may consider\nusing <a href=\"https://github.com/hgomersall/pyFFTW\">PyFFTW</a> for\nfaster FFTs.</p>\n<a href=\"#fnref-fast\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-odd_n\">\n<p>We leave it as an exercise for the reader to picture the\nsituation for $N$ odd. In this chapter, all examples use\neven-order DFTs.</p>\n<a href=\"#fnref-odd_n\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-choosing_a_window\">\n<p>The classical windowing functions include Hann,\nHamming, and Blackman. They differ in their\nsidelobe levels and in the broadening of the\nmain lobe (in the Fourier domain). A modern and\nflexible window function that is close to\noptimal for most applications is the Kaiser\nwindow—a good approximation to the optimal\nprolate spheroid window, which concentrates the\nmost energy into the main lobe. The Kaiser\nwindow can be tuned to suit the particular\napplication, as illustrated in the main text, by\nadjusting the parameter $\\beta$.</p>\n<a href=\"#fnref-choosing_a_window\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>"},{"url":"/docs/content/algo/","relativePath":"docs/content/algo.md","relativeDir":"docs/content","base":"algo.md","name":"algo","frontmatter":{"title":"Algorithms & Data Structures","subtitle":"The Algorithms & Data Structures provides you with a blueprint of default post and page styles.","image":"images/5.jpg","seo":{"title":"Algorithms & Data Structures","description":"A reference for suggested typographic treatment and styles for your content","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Algorithms & Data Structures","keyName":"property"},{"name":"og:description","value":"A reference for suggested typographic treatment and styles for your content","keyName":"property"},{"name":"og:image","value":"images/5.jpg","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Algorithms & Data Structures"},{"name":"twitter:description","value":"A reference for suggested typographic treatment and styles for your content"},{"name":"twitter:image","value":"images/5.jpg","relativeUrl":true}]},"template":"docs"},"html":"<h1>Fundamental Data Structures In JavaScript</h1>\n<br>\n<br>\n<br>\n<h1>   Algorithms </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://bgoonz-branch-the-algos.vercel.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1>  The Algos Bgoonz Branch </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://thealgorithms.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<iframe  height=\"1400\" src=\"https://ds-algo-official.netlify.app/\" frameborder=\"0\" allowfullscreen style=\"zoom:0.7;\"></iframe>\n<p>Fundamental Data Structures In JavaScript</p>\n<h2>Data structures in JavaScript</h2>\n<p>Here's a website I created to practice data structures!\n<a href=\"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/\"><strong>directory</strong>\n<em>Edit description</em>ds-algo-official-c3dw6uapg-bgoonz.vercel.app</a></p>\n<p>Here's the repo that the website is built on:\n<a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\"><strong>bgoonz/DS-ALGO-OFFICIAL</strong>\n<em>Navigation ####Author:Bryan Guner Big O notation is the language we use for talking about how long an algorithm takes…</em>github.com</a></p>\n<h2>Resources (article content below):</h2>\n<h3>Videos</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=0IAPZzGSbME&#x26;list=PLDN4rrl48XKpZkf03iYFl-O29szjTrs_O&#x26;index=2&#x26;t=0s\">Abdul Bari: YouTubeChannel for Algorithms</a></li>\n</ul>\n<iframe width=\"700\" height=\"515\" src=\"https://www.youtube.com/embed/0IAPZzGSbME\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=lxja8wBwN0k&#x26;list=PLKKfKV1b9e8ps6dD3QA5KFfHdiWj9cB1s\">Data Structures and algorithms</a></li>\n</ul>\n<iframe width=\"700\" height=\"515\" src=\"https://www.youtube.com/embed/lxja8wBwN0k\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture